
uc3a0512-bldc_svpwm_example.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        00002004  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  80002004  80002004  00002404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .init         0000001a  80002004  80002004  00002404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .text         000081c4  80002020  80002020  00002420  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .exception    00000200  8000a200  8000a200  0000a600  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .fini         00000018  8000a400  8000a400  0000a800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .rodata       0000070c  8000a418  8000a418  0000a818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .lalign       00000004  8000ab24  8000ab24  0000af24  2**0
                  ALLOC
  8 .dalign       00000004  00000004  00000004  00000000  2**0
                  ALLOC
  9 .ctors        00000008  00000008  8000ab28  0000b008  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .dtors        00000008  00000010  8000ab30  0000b010  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .jcr          00000004  00000018  8000ab38  0000b018  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .got          00000000  0000001c  8000ab3c  0000b01c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .data         00000520  0000001c  8000ab3c  0000b01c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          000001f4  0000055c  0000055c  00000000  2**2
                  ALLOC
 15 .heap         0000e8b0  00000750  00000750  00000000  2**0
                  ALLOC
 16 .comment      000002c4  00000000  00000000  0000b53c  2**0
                  CONTENTS, READONLY
 17 .debug_aranges 00000b20  00000000  00000000  0000b800  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_pubnames 0000145d  00000000  00000000  0000c320  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_info   0002654a  00000000  00000000  0000d77d  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_abbrev 00006274  00000000  00000000  00033cc7  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_line   0000b72c  00000000  00000000  00039f3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_frame  00002568  00000000  00000000  00045668  2**2
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_str    00004115  00000000  00000000  00047bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_loc    0000aecf  00000000  00000000  0004bce5  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .stack        00001000  0000f000  0000f000  00000000  2**0
                  ALLOC
 26 .debug_ranges 00001a38  00000000  00000000  00056bb4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_trampoline>:
80000000:	e0 8f 10 00 	bral	80002000 <program_start>
	...

80002000 <program_start>:
80002000:	fe cf ff e0 	sub	pc,pc,-32

Disassembly of section .init:

80002004 <_init>:
80002004:	eb cd 40 40 	pushm	r6,lr
80002008:	48 26       	lddpc	r6,80002010 <_init+0xc>
8000200a:	1e 26       	rsub	r6,pc
8000200c:	c0 48       	rjmp	80002014 <_init+0x10>
8000200e:	d7 03       	nop
80002010:	80 00       	ld.sh	r0,r0[0x0]
80002012:	1f ee       	ld.ub	lr,pc[0x6]
80002014:	c6 0c       	rcall	800020d4 <frame_dummy>
80002016:	e0 a0 40 d5 	rcall	8000a1c0 <__do_global_ctors_aux>
8000201a:	e3 cd 80 40 	ldm	sp++,r6,pc

Disassembly of section .text:

80002020 <_stext>:
80002020:	30 07       	mov	r7,0
80002022:	49 5a       	lddpc	r10,80002074 <_stext+0x54>
80002024:	5b fa       	cp.w	r10,-1
80002026:	f4 0d 17 10 	movne	sp,r10
8000202a:	49 4b       	lddpc	r11,80002078 <_stext+0x58>
8000202c:	49 4c       	lddpc	r12,8000207c <_stext+0x5c>
8000202e:	18 3b       	cp.w	r11,r12
80002030:	c0 60       	breq	8000203c <_stext+0x1c>
80002032:	49 4a       	lddpc	r10,80002080 <_stext+0x60>
80002034:	b7 09       	ld.d	r8,r11++
80002036:	b9 28       	st.d	r12++,r8
80002038:	14 3c       	cp.w	r12,r10
8000203a:	cf d5       	brlt	80002034 <_stext+0x14>
8000203c:	49 2a       	lddpc	r10,80002084 <_stext+0x64>
8000203e:	49 1c       	lddpc	r12,80002080 <_stext+0x60>
80002040:	30 08       	mov	r8,0
80002042:	30 09       	mov	r9,0
80002044:	b9 28       	st.d	r12++,r8
80002046:	14 3c       	cp.w	r12,r10
80002048:	cf e5       	brlt	80002044 <_stext+0x24>
8000204a:	e0 a0 09 df 	rcall	80003408 <_init_startup>
8000204e:	48 fc       	lddpc	r12,80002088 <_stext+0x68>
80002050:	e0 a0 13 c2 	rcall	800047d4 <atexit>
80002054:	cd 8f       	rcall	80002004 <_init>
80002056:	1a 9c       	mov	r12,sp
80002058:	30 0b       	mov	r11,0
8000205a:	e0 a0 10 2a 	rcall	800040ae <_init_argv>
8000205e:	5b fc       	cp.w	r12,-1
80002060:	f9 bc 00 00 	moveq	r12,0
80002064:	f9 ba 00 00 	moveq	r10,0
80002068:	14 1d       	sub	sp,r10
8000206a:	e0 a0 09 b7 	rcall	800033d8 <main>
8000206e:	e0 a0 13 c1 	rcall	800047f0 <exit>
80002072:	d7 03       	nop
80002074:	00 01       	add	r1,r0
80002076:	00 00       	add	r0,r0
80002078:	80 00       	ld.sh	r0,r0[0x0]
8000207a:	ab 28       	st.d	r5++,r8
8000207c:	00 00       	add	r0,r0
8000207e:	00 08       	add	r8,r0
80002080:	00 00       	add	r0,r0
80002082:	05 40       	ld.w	r0,--r2
80002084:	00 00       	add	r0,r0
80002086:	07 50       	ld.sh	r0,--r3
80002088:	80 00       	ld.sh	r0,r0[0x0]
8000208a:	a4 00       	st.h	r2[0x0],r0

8000208c <__do_global_dtors_aux>:
8000208c:	eb cd 40 e0 	pushm	r5-r7,lr
80002090:	48 e6       	lddpc	r6,800020c8 <__do_global_dtors_aux+0x3c>
80002092:	30 08       	mov	r8,0
80002094:	0d 89       	ld.ub	r9,r6[0x0]
80002096:	f0 09 18 00 	cp.b	r9,r8
8000209a:	c1 41       	brne	800020c2 <__do_global_dtors_aux+0x36>
8000209c:	48 c5       	lddpc	r5,800020cc <__do_global_dtors_aux+0x40>
8000209e:	48 d8       	lddpc	r8,800020d0 <__do_global_dtors_aux+0x44>
800020a0:	6c 19       	ld.w	r9,r6[0x4]
800020a2:	0a 18       	sub	r8,r5
800020a4:	a3 48       	asr	r8,0x2
800020a6:	f0 c7 00 01 	sub	r7,r8,1
800020aa:	0e 39       	cp.w	r9,r7
800020ac:	c0 92       	brcc	800020be <__do_global_dtors_aux+0x32>
800020ae:	2f f9       	sub	r9,-1
800020b0:	8d 19       	st.w	r6[0x4],r9
800020b2:	ea 09 03 28 	ld.w	r8,r5[r9<<0x2]
800020b6:	5d 18       	icall	r8
800020b8:	6c 19       	ld.w	r9,r6[0x4]
800020ba:	0e 39       	cp.w	r9,r7
800020bc:	cf 93       	brcs	800020ae <__do_global_dtors_aux+0x22>
800020be:	30 18       	mov	r8,1
800020c0:	ac 88       	st.b	r6[0x0],r8
800020c2:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
800020c6:	d7 03       	nop
800020c8:	00 00       	add	r0,r0
800020ca:	05 5c       	ld.sh	r12,--r2
800020cc:	00 00       	add	r0,r0
800020ce:	00 10       	sub	r0,r0
800020d0:	00 00       	add	r0,r0
800020d2:	00 14       	sub	r4,r0

800020d4 <frame_dummy>:
800020d4:	d4 01       	pushm	lr
800020d6:	48 5c       	lddpc	r12,800020e8 <frame_dummy+0x14>
800020d8:	78 08       	ld.w	r8,r12[0x0]
800020da:	58 08       	cp.w	r8,0
800020dc:	c0 50       	breq	800020e6 <frame_dummy+0x12>
800020de:	48 48       	lddpc	r8,800020ec <frame_dummy+0x18>
800020e0:	58 08       	cp.w	r8,0
800020e2:	c0 20       	breq	800020e6 <frame_dummy+0x12>
800020e4:	5d 18       	icall	r8
800020e6:	d8 02       	popm	pc
800020e8:	00 00       	add	r0,r0
800020ea:	00 18       	sub	r8,r0
800020ec:	00 00       	add	r0,r0
	...

800020f0 <delay_init>:
//_____ D E C L A R A T I O N S ____________________________________________

void delay_init(unsigned long fcpu_hz)
{
#ifndef FREERTOS_USED
  s_fcpu_hz = fcpu_hz;
800020f0:	48 28       	lddpc	r8,800020f8 <delay_init+0x8>
800020f2:	91 0c       	st.w	r8[0x0],r12
#endif
}
800020f4:	5e fc       	retal	r12
800020f6:	d7 03       	nop
800020f8:	00 00       	add	r0,r0
800020fa:	05 64       	ld.uh	r4,--r2

800020fc <delay_ms>:


void delay_ms(unsigned long delay)
{
800020fc:	eb cd 40 0c 	pushm	r2-r3,lr
#if __GNUC__
__attribute__((__always_inline__))
#endif
extern __inline__ U32 cpu_ms_2_cy(unsigned long ms, unsigned long fcpu_hz)
{
  return ((unsigned long long)ms * fcpu_hz + 999) / 1000;
80002100:	49 78       	lddpc	r8,8000215c <delay_ms+0x60>
80002102:	70 09       	ld.w	r9,r8[0x0]
80002104:	f8 09 06 42 	mulu.d	r2,r12,r9
80002108:	30 09       	mov	r9,0
8000210a:	e0 68 03 e8 	mov	r8,1000
8000210e:	e0 6a 03 e7 	mov	r10,999
80002112:	30 0b       	mov	r11,0
80002114:	e4 0a 00 0a 	add	r10,r2,r10
80002118:	e6 0b 00 4b 	adc	r11,r3,r11
8000211c:	e0 a0 12 18 	rcall	8000454c <__avr32_udiv64>
#if __GNUC__
__attribute__((__always_inline__))
#endif
extern __inline__ void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002120:	e1 b9 00 42 	mfsr	r9,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002124:	f2 0a 00 0a 	add	r10,r9,r10
#if __GNUC__
__attribute__((__always_inline__))
#endif
extern __inline__ unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002128:	e1 b8 00 42 	mfsr	r8,0x108

  // Test if the timeout as already occured.
  if (cpu_time->delay_start_cycle == cpu_time->delay_end_cycle)
8000212c:	14 39       	cp.w	r9,r10
8000212e:	c0 80       	breq	8000213e <delay_ms+0x42>
80002130:	e0 8b 00 0b 	brhi	80002146 <delay_ms+0x4a>
    }
    return FALSE;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002134:	10 39       	cp.w	r9,r8
80002136:	e0 8b 00 04 	brhi	8000213e <delay_ms+0x42>
8000213a:	10 3a       	cp.w	r10,r8
8000213c:	c0 c2       	brcc	80002154 <delay_ms+0x58>
8000213e:	e3 cd 80 0c 	ldm	sp++,r2-r3,pc
#if __GNUC__
__attribute__((__always_inline__))
#endif
extern __inline__ unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002142:	e1 b8 00 42 	mfsr	r8,0x108
    return TRUE;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002146:	10 39       	cp.w	r9,r8
80002148:	fe 98 ff fd 	brls	80002142 <delay_ms+0x46>
8000214c:	10 3a       	cp.w	r10,r8
8000214e:	cf a2       	brcc	80002142 <delay_ms+0x46>
80002150:	e3 cd 80 0c 	ldm	sp++,r2-r3,pc
#if __GNUC__
__attribute__((__always_inline__))
#endif
extern __inline__ unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002154:	e1 b8 00 42 	mfsr	r8,0x108
80002158:	ce eb       	rjmp	80002134 <delay_ms+0x38>
8000215a:	d7 03       	nop
8000215c:	00 00       	add	r0,r0
8000215e:	05 64       	ld.uh	r4,--r2

80002160 <hall_estimator_do_interrupt>:
      Delay_For_Change = Mem_Top_Counter - ADVANCE;

   } // else false interrupt 
}
void hall_estimator_do_interrupt(void)
{
80002160:	eb cd 40 c0 	pushm	r6-r7,lr
   U32 hall_value;
    
   if ( Sensor_Counter_Up > 3 )
80002164:	4b bc       	lddpc	r12,80002250 <hall_estimator_do_interrupt+0xf0>
80002166:	30 39       	mov	r9,3
80002168:	19 88       	ld.ub	r8,r12[0x0]
8000216a:	f2 08 18 00 	cp.b	r8,r9
8000216e:	e0 88 00 37 	brls	800021dc <hall_estimator_do_interrupt+0x7c>
   {

      if (Delay_For_Change != 0)
80002172:	4b 96       	lddpc	r6,80002254 <hall_estimator_do_interrupt+0xf4>
80002174:	0d 88       	ld.ub	r8,r6[0x0]
80002176:	58 08       	cp.w	r8,0
80002178:	c3 41       	brne	800021e0 <hall_estimator_do_interrupt+0x80>
8000217a:	4b 8e       	lddpc	lr,80002258 <hall_estimator_do_interrupt+0xf8>
8000217c:	4b 87       	lddpc	r7,8000225c <hall_estimator_do_interrupt+0xfc>
         Hall_Sector = Mem_Hall_Sector;
         /* end Change_Sector */
      }

      /* Filter and memorize the Conuter_Up in the Top_Counter */
      Mem_Top_CounterX8 = (((U16)7 * Mem_Top_CounterX8) + (U16)8 * Sensor_Counter_Up) >>3;
8000217e:	4b 9b       	lddpc	r11,80002260 <hall_estimator_do_interrupt+0x100>
80002180:	96 09       	ld.sh	r9,r11[0x0]
80002182:	19 8a       	ld.ub	r10,r12[0x0]
80002184:	5c 79       	castu.h	r9
80002186:	f2 08 15 03 	lsl	r8,r9,0x3
8000218a:	12 18       	sub	r8,r9
8000218c:	f0 0a 00 3a 	add	r10,r8,r10<<0x3
80002190:	f5 da b0 70 	bfexts	r10,r10,0x3,0x10
80002194:	b6 0a       	st.h	r11[0x0],r10
      Mem_Top_Counter = Mem_Top_CounterX8 >> 3;
80002196:	96 08       	ld.sh	r8,r11[0x0]
80002198:	f1 d8 c0 68 	bfextu	r8,r8,0x3,0x8
8000219c:	bc 88       	st.b	lr[0x0],r8

      Sensor_Counter_Up = 0; /* reset the Counter_Up */
8000219e:	30 09       	mov	r9,0

      /* Get the status of the 3 Hall sensors */
      hall_value = HALL_PORT.pvr & (1<<HALL_3 | 1<<HALL_2 | 1<<HALL_1); // get hall sensor position
800021a0:	fe 78 10 00 	mov	r8,-61440

      /* Filter and memorize the Conuter_Up in the Top_Counter */
      Mem_Top_CounterX8 = (((U16)7 * Mem_Top_CounterX8) + (U16)8 * Sensor_Counter_Up) >>3;
      Mem_Top_Counter = Mem_Top_CounterX8 >> 3;

      Sensor_Counter_Up = 0; /* reset the Counter_Up */
800021a4:	b8 89       	st.b	r12[0x0],r9

      /* Get the status of the 3 Hall sensors */
      hall_value = HALL_PORT.pvr & (1<<HALL_3 | 1<<HALL_2 | 1<<HALL_1); // get hall sensor position
800021a6:	71 88       	ld.w	r8,r8[0x60]

      switch (hall_value) {
800021a8:	e0 69 02 00 	mov	r9,512
800021ac:	ea 19 20 00 	orh	r9,0x2000
800021b0:	e4 18 60 00 	andh	r8,0x6000
800021b4:	e0 18 02 00 	andl	r8,0x200
800021b8:	12 38       	cp.w	r8,r9
800021ba:	c3 70       	breq	80002228 <hall_estimator_do_interrupt+0xc8>
800021bc:	e0 8b 00 24 	brhi	80002204 <hall_estimator_do_interrupt+0xa4>
800021c0:	e0 48 02 00 	cp.w	r8,512
800021c4:	c3 a0       	breq	80002238 <hall_estimator_do_interrupt+0xd8>
800021c6:	fc 19 20 00 	movh	r9,0x2000
800021ca:	12 38       	cp.w	r8,r9
800021cc:	c3 20       	breq	80002230 <hall_estimator_do_interrupt+0xd0>
            break;
         case (0<<HALL_3 | 1<<HALL_2 | 1<<HALL_1):
            hall_state = HS_011;
            break;
         default:
            hall_state = HS_ERR;
800021ce:	4a 69       	lddpc	r9,80002264 <hall_estimator_do_interrupt+0x104>
800021d0:	30 08       	mov	r8,0
800021d2:	b2 88       	st.b	r9[0x0],r8
       }
        Mem_Hall_Sector = hall_state;
800021d4:	13 88       	ld.ub	r8,r9[0x0]
800021d6:	ae 88       	st.b	r7[0x0],r8

      /* arm the Delay_For_Change */
      Delay_For_Change = Mem_Top_Counter - ADVANCE;
800021d8:	1d 89       	ld.ub	r9,lr[0x0]
800021da:	ac 89       	st.b	r6[0x0],r9
800021dc:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
   {

      if (Delay_For_Change != 0)
      {
         /* Last Delay not finished : Force Change_Sector */
         Top_Counter = Mem_Top_Counter;
800021e0:	4a 2a       	lddpc	r10,80002268 <hall_estimator_do_interrupt+0x108>
800021e2:	49 ee       	lddpc	lr,80002258 <hall_estimator_do_interrupt+0xf8>
800021e4:	1d 88       	ld.ub	r8,lr[0x0]
800021e6:	b4 88       	st.b	r10[0x0],r8
         if (Top_Counter == 0) Top_Counter++; /* to avoid "divide by 0" */
800021e8:	15 89       	ld.ub	r9,r10[0x0]
800021ea:	58 09       	cp.w	r9,0
800021ec:	c0 41       	brne	800021f4 <hall_estimator_do_interrupt+0x94>
800021ee:	15 88       	ld.ub	r8,r10[0x0]
800021f0:	2f f8       	sub	r8,-1
800021f2:	b4 88       	st.b	r10[0x0],r8

         Sensor_Counter_Down = Mem_Top_Counter;
800021f4:	1d 88       	ld.ub	r8,lr[0x0]
800021f6:	49 e9       	lddpc	r9,8000226c <hall_estimator_do_interrupt+0x10c>
800021f8:	b2 88       	st.b	r9[0x0],r8
         Hall_Sector = Mem_Hall_Sector;
800021fa:	49 97       	lddpc	r7,8000225c <hall_estimator_do_interrupt+0xfc>
800021fc:	49 d9       	lddpc	r9,80002270 <hall_estimator_do_interrupt+0x110>
800021fe:	0f 88       	ld.ub	r8,r7[0x0]
80002200:	b2 88       	st.b	r9[0x0],r8
80002202:	cb eb       	rjmp	8000217e <hall_estimator_do_interrupt+0x1e>
      Sensor_Counter_Up = 0; /* reset the Counter_Up */

      /* Get the status of the 3 Hall sensors */
      hall_value = HALL_PORT.pvr & (1<<HALL_3 | 1<<HALL_2 | 1<<HALL_1); // get hall sensor position

      switch (hall_value) {
80002204:	e0 69 02 00 	mov	r9,512
80002208:	ea 19 40 00 	orh	r9,0x4000
8000220c:	12 38       	cp.w	r8,r9
8000220e:	c1 d0       	breq	80002248 <hall_estimator_do_interrupt+0xe8>
80002210:	fc 19 60 00 	movh	r9,0x6000
80002214:	12 38       	cp.w	r8,r9
80002216:	c1 50       	breq	80002240 <hall_estimator_do_interrupt+0xe0>
80002218:	fc 19 40 00 	movh	r9,0x4000
8000221c:	12 38       	cp.w	r8,r9
8000221e:	cd 81       	brne	800021ce <hall_estimator_do_interrupt+0x6e>
            break;
         case (1<<HALL_3 | 1<<HALL_2 | 0<<HALL_1):
            hall_state = HS_110;
            break;
         case (1<<HALL_3 | 0<<HALL_2 | 0<<HALL_1):
            hall_state = HS_100;
80002220:	49 19       	lddpc	r9,80002264 <hall_estimator_do_interrupt+0x104>
80002222:	30 48       	mov	r8,4
80002224:	b2 88       	st.b	r9[0x0],r8
80002226:	cd 7b       	rjmp	800021d4 <hall_estimator_do_interrupt+0x74>
            break;
         case (0<<HALL_3 | 0<<HALL_2 | 1<<HALL_1):
            hall_state = HS_001;
            break;
         case (0<<HALL_3 | 1<<HALL_2 | 1<<HALL_1):
            hall_state = HS_011;
80002228:	48 f9       	lddpc	r9,80002264 <hall_estimator_do_interrupt+0x104>
8000222a:	30 38       	mov	r8,3
8000222c:	b2 88       	st.b	r9[0x0],r8
8000222e:	cd 3b       	rjmp	800021d4 <hall_estimator_do_interrupt+0x74>
      /* Get the status of the 3 Hall sensors */
      hall_value = HALL_PORT.pvr & (1<<HALL_3 | 1<<HALL_2 | 1<<HALL_1); // get hall sensor position

      switch (hall_value) {
         case (0<<HALL_3 | 1<<HALL_2 | 0<<HALL_1):
            hall_state = HS_010;
80002230:	48 d9       	lddpc	r9,80002264 <hall_estimator_do_interrupt+0x104>
80002232:	30 28       	mov	r8,2
80002234:	b2 88       	st.b	r9[0x0],r8
80002236:	cc fb       	rjmp	800021d4 <hall_estimator_do_interrupt+0x74>
            break;
         case (1<<HALL_3 | 0<<HALL_2 | 1<<HALL_1):
            hall_state = HS_101;
            break;
         case (0<<HALL_3 | 0<<HALL_2 | 1<<HALL_1):
            hall_state = HS_001;
80002238:	48 b9       	lddpc	r9,80002264 <hall_estimator_do_interrupt+0x104>
8000223a:	30 18       	mov	r8,1
8000223c:	b2 88       	st.b	r9[0x0],r8
8000223e:	cc bb       	rjmp	800021d4 <hall_estimator_do_interrupt+0x74>
      switch (hall_value) {
         case (0<<HALL_3 | 1<<HALL_2 | 0<<HALL_1):
            hall_state = HS_010;
            break;
         case (1<<HALL_3 | 1<<HALL_2 | 0<<HALL_1):
            hall_state = HS_110;
80002240:	48 99       	lddpc	r9,80002264 <hall_estimator_do_interrupt+0x104>
80002242:	30 68       	mov	r8,6
80002244:	b2 88       	st.b	r9[0x0],r8
80002246:	cc 7b       	rjmp	800021d4 <hall_estimator_do_interrupt+0x74>
            break;
         case (1<<HALL_3 | 0<<HALL_2 | 0<<HALL_1):
            hall_state = HS_100;
            break;
         case (1<<HALL_3 | 0<<HALL_2 | 1<<HALL_1):
            hall_state = HS_101;
80002248:	48 79       	lddpc	r9,80002264 <hall_estimator_do_interrupt+0x104>
8000224a:	30 58       	mov	r8,5
8000224c:	b2 88       	st.b	r9[0x0],r8
8000224e:	cc 3b       	rjmp	800021d4 <hall_estimator_do_interrupt+0x74>
80002250:	00 00       	add	r0,r0
80002252:	05 74       	ld.ub	r4,--r2
80002254:	00 00       	add	r0,r0
80002256:	00 1d       	sub	sp,r0
80002258:	00 00       	add	r0,r0
8000225a:	00 1c       	sub	r12,r0
8000225c:	00 00       	add	r0,r0
8000225e:	00 1e       	sub	lr,r0
80002260:	00 00       	add	r0,r0
80002262:	00 24       	rsub	r4,r0
80002264:	00 00       	add	r0,r0
80002266:	05 6c       	ld.uh	r12,--r2
80002268:	00 00       	add	r0,r0
8000226a:	00 1f       	sub	pc,r0
8000226c:	00 00       	add	r0,r0
8000226e:	00 27       	rsub	r7,r0
80002270:	00 00       	add	r0,r0
80002272:	00 26       	rsub	r6,r0

80002274 <hall_estimator_update_teta>:
//------------------------------------------------------------------------------
/*! \name Estimator update teta / sector number
 */
//! @{
void hall_estimator_update_teta(volatile hall_estimator_options_t *hall_estimator_options,U32 resolution)
{
80002274:	eb cd 40 80 	pushm	r7,lr

   if (Delay_For_Change != 0)
80002278:	4a 19       	lddpc	r9,800022fc <hall_estimator_update_teta+0x88>
//------------------------------------------------------------------------------
/*! \name Estimator update teta / sector number
 */
//! @{
void hall_estimator_update_teta(volatile hall_estimator_options_t *hall_estimator_options,U32 resolution)
{
8000227a:	18 9e       	mov	lr,r12
8000227c:	16 97       	mov	r7,r11

   if (Delay_For_Change != 0)
8000227e:	13 88       	ld.ub	r8,r9[0x0]
80002280:	58 08       	cp.w	r8,0
80002282:	c0 70       	breq	80002290 <hall_estimator_update_teta+0x1c>
   {

      Delay_For_Change --;
80002284:	13 88       	ld.ub	r8,r9[0x0]
80002286:	20 18       	sub	r8,1
80002288:	b2 88       	st.b	r9[0x0],r8
      if (Delay_For_Change == 0)
8000228a:	13 89       	ld.ub	r9,r9[0x0]
8000228c:	58 09       	cp.w	r9,0
8000228e:	c2 40       	breq	800022d6 <hall_estimator_update_teta+0x62>
80002290:	49 cb       	lddpc	r11,80002300 <hall_estimator_update_teta+0x8c>
80002292:	49 dc       	lddpc	r12,80002304 <hall_estimator_update_teta+0x90>
         // end Change_Sector 
      }
   }

   // increment Sensor_Counter_Up 
   if ( Sensor_Counter_Up < 255 )
80002294:	49 da       	lddpc	r10,80002308 <hall_estimator_update_teta+0x94>
80002296:	3f f9       	mov	r9,-1
80002298:	15 88       	ld.ub	r8,r10[0x0]
8000229a:	f2 08 18 00 	cp.b	r8,r9
8000229e:	c0 40       	breq	800022a6 <hall_estimator_update_teta+0x32>
   {
      Sensor_Counter_Up += 1;
800022a0:	15 88       	ld.ub	r8,r10[0x0]
800022a2:	2f f8       	sub	r8,-1
800022a4:	b4 88       	st.b	r10[0x0],r8
   }

   // decrement Sensor_Counter_Down 
   if (Sensor_Counter_Down != 0) Sensor_Counter_Down -= 1;
800022a6:	49 89       	lddpc	r9,80002304 <hall_estimator_update_teta+0x90>
800022a8:	19 88       	ld.ub	r8,r12[0x0]
800022aa:	58 08       	cp.w	r8,0
800022ac:	c0 40       	breq	800022b4 <hall_estimator_update_teta+0x40>
800022ae:	13 88       	ld.ub	r8,r9[0x0]
800022b0:	20 18       	sub	r8,1
800022b2:	b2 88       	st.b	r9[0x0],r8
  
   // Update teta value 
   hall_estimator_options->teta = ((U16)(Top_Counter - Sensor_Counter_Down) * resolution) / Top_Counter;
800022b4:	17 89       	ld.ub	r9,r11[0x0]
800022b6:	19 8a       	ld.ub	r10,r12[0x0]
800022b8:	17 8b       	ld.ub	r11,r11[0x0]
800022ba:	14 19       	sub	r9,r10
800022bc:	5c 79       	castu.h	r9
800022be:	ee 09 02 49 	mul	r9,r7,r9
800022c2:	f2 0b 0d 08 	divu	r8,r9,r11
800022c6:	f5 d8 b0 10 	bfexts	r10,r8,0x0,0x10
800022ca:	bc 0a       	st.h	lr[0x0],r10
   // Update sector number value 
   hall_estimator_options->sector_number = hall_state;
800022cc:	49 09       	lddpc	r9,8000230c <hall_estimator_update_teta+0x98>
800022ce:	13 88       	ld.ub	r8,r9[0x0]
800022d0:	bc 48       	st.h	lr[0x8],r8

}
800022d2:	e3 cd 80 80 	ldm	sp++,r7,pc

      Delay_For_Change --;
      if (Delay_For_Change == 0)
      {
         // Change_Sector 
         Top_Counter = Mem_Top_Counter;
800022d6:	48 bb       	lddpc	r11,80002300 <hall_estimator_update_teta+0x8c>
800022d8:	48 ea       	lddpc	r10,80002310 <hall_estimator_update_teta+0x9c>
800022da:	15 88       	ld.ub	r8,r10[0x0]
800022dc:	b6 88       	st.b	r11[0x0],r8
         if (Top_Counter == 0) Top_Counter++; // to avoid "divide by 0"
800022de:	17 89       	ld.ub	r9,r11[0x0]
800022e0:	58 09       	cp.w	r9,0
800022e2:	c0 41       	brne	800022ea <hall_estimator_update_teta+0x76>
800022e4:	17 88       	ld.ub	r8,r11[0x0]
800022e6:	2f f8       	sub	r8,-1
800022e8:	b6 88       	st.b	r11[0x0],r8
         Sensor_Counter_Down = Mem_Top_Counter;
800022ea:	15 88       	ld.ub	r8,r10[0x0]
         Hall_Sector = Mem_Hall_Sector;
800022ec:	48 a9       	lddpc	r9,80002314 <hall_estimator_update_teta+0xa0>
      if (Delay_For_Change == 0)
      {
         // Change_Sector 
         Top_Counter = Mem_Top_Counter;
         if (Top_Counter == 0) Top_Counter++; // to avoid "divide by 0"
         Sensor_Counter_Down = Mem_Top_Counter;
800022ee:	48 6c       	lddpc	r12,80002304 <hall_estimator_update_teta+0x90>
800022f0:	b8 88       	st.b	r12[0x0],r8
         Hall_Sector = Mem_Hall_Sector;
800022f2:	13 88       	ld.ub	r8,r9[0x0]
800022f4:	48 99       	lddpc	r9,80002318 <hall_estimator_update_teta+0xa4>
800022f6:	b2 88       	st.b	r9[0x0],r8
800022f8:	cc eb       	rjmp	80002294 <hall_estimator_update_teta+0x20>
800022fa:	d7 03       	nop
800022fc:	00 00       	add	r0,r0
800022fe:	00 1d       	sub	sp,r0
80002300:	00 00       	add	r0,r0
80002302:	00 1f       	sub	pc,r0
80002304:	00 00       	add	r0,r0
80002306:	00 27       	rsub	r7,r0
80002308:	00 00       	add	r0,r0
8000230a:	05 74       	ld.ub	r4,--r2
8000230c:	00 00       	add	r0,r0
8000230e:	05 6c       	ld.uh	r12,--r2
80002310:	00 00       	add	r0,r0
80002312:	00 1c       	sub	r12,r0
80002314:	00 00       	add	r0,r0
80002316:	00 1e       	sub	lr,r0
80002318:	00 00       	add	r0,r0
8000231a:	00 26       	rsub	r6,r0

8000231c <hall_estimator_update_speed>:
 */
//! @{
void hall_estimator_update_speed(volatile hall_estimator_options_t *hall_estimator_options)
{
   // Update rotor speed evaluation 
    hall_estimator_options->speed = filt_hall_period;
8000231c:	48 28       	lddpc	r8,80002324 <hall_estimator_update_speed+0x8>
8000231e:	70 09       	ld.w	r9,r8[0x0]
80002320:	99 19       	st.w	r12[0x4],r9
}
80002322:	5e fc       	retal	r12
80002324:	00 00       	add	r0,r0
80002326:	00 20       	rsub	r0,r0

80002328 <hall_estimator_init_interrupt>:
//------------------------------------------------------------------------------
/*! \name Interrupt intitialization function
 */
//! @{
void hall_estimator_init_interrupt(volatile hall_estimator_options_t *hall_estimator_options)
{
80002328:	eb cd 40 40 	pushm	r6,lr
    gpio_enable_pin_interrupt(HALL_1_PIN , GPIO_PIN_CHANGE);	// HALL_1_PIN
8000232c:	30 0b       	mov	r11,0
8000232e:	30 9c       	mov	r12,9
80002330:	e0 a0 0a d8 	rcall	800038e0 <gpio_enable_pin_interrupt>
    gpio_enable_pin_interrupt(HALL_2_PIN , GPIO_PIN_CHANGE);	// HALL_2_PIN  
80002334:	30 0b       	mov	r11,0
80002336:	31 dc       	mov	r12,29
80002338:	e0 a0 0a d4 	rcall	800038e0 <gpio_enable_pin_interrupt>
    gpio_enable_pin_interrupt(HALL_3_PIN , GPIO_PIN_CHANGE);	// HALL_3_PIN  
8000233c:	30 0b       	mov	r11,0
8000233e:	31 ec       	mov	r12,30
80002340:	e0 a0 0a d0 	rcall	800038e0 <gpio_enable_pin_interrupt>
    INTC_register_interrupt(&hall_int_handler, HALL_GPIO_IRQ+HALL_1_PIN/8, AVR32_INTC_INT0);  
80002344:	fe c6 ff d8 	sub	r6,pc,-40
80002348:	30 0a       	mov	r10,0
8000234a:	0c 9c       	mov	r12,r6
8000234c:	34 1b       	mov	r11,65
8000234e:	e0 a0 0b d5 	rcall	80003af8 <INTC_register_interrupt>
    INTC_register_interrupt(&hall_int_handler, HALL_GPIO_IRQ+HALL_2_PIN/8, AVR32_INTC_INT0);
80002352:	0c 9c       	mov	r12,r6
80002354:	30 0a       	mov	r10,0
80002356:	34 3b       	mov	r11,67
80002358:	e0 a0 0b d0 	rcall	80003af8 <INTC_register_interrupt>
    INTC_register_interrupt(&hall_int_handler, HALL_GPIO_IRQ+HALL_3_PIN/8, AVR32_INTC_INT0);	
8000235c:	0c 9c       	mov	r12,r6
8000235e:	30 0a       	mov	r10,0
80002360:	34 3b       	mov	r11,67
80002362:	e0 a0 0b cb 	rcall	80003af8 <INTC_register_interrupt>
}
80002366:	e3 cd 80 40 	ldm	sp++,r6,pc
8000236a:	d7 03       	nop

8000236c <hall_int_handler>:
__attribute__((__interrupt__))
#elif __ICCAVR32__
__interrupt
#endif
static void hall_int_handler( void )
{	
8000236c:	eb cd 40 c0 	pushm	r6-r7,lr
   U32 hall_value;
   U32 hall_tj;
   U32 hall_period;
   
  if (gpio_get_pin_interrupt_flag(HALL_1_PIN)) 
80002370:	30 9c       	mov	r12,9
80002372:	e0 a0 0a db 	rcall	80003928 <gpio_get_pin_interrupt_flag>
80002376:	c6 21       	brne	8000243a <hall_int_handler+0xce>
   if (i==n_SAMPLE) i=0;
   
    gpio_clear_pin_interrupt_flag(HALL_1_PIN);
  }
  
  if (gpio_get_pin_interrupt_flag(HALL_2_PIN)) 
80002378:	31 dc       	mov	r12,29
8000237a:	e0 a0 0a d7 	rcall	80003928 <gpio_get_pin_interrupt_flag>
8000237e:	c5 a1       	brne	80002432 <hall_int_handler+0xc6>
  {   
    gpio_clear_pin_interrupt_flag(HALL_2_PIN);
  }  
  
  if (gpio_get_pin_interrupt_flag(HALL_3_PIN)) 
80002380:	31 ec       	mov	r12,30
80002382:	e0 a0 0a d3 	rcall	80003928 <gpio_get_pin_interrupt_flag>
80002386:	c5 21       	brne	8000242a <hall_int_handler+0xbe>
  {
    gpio_clear_pin_interrupt_flag(HALL_3_PIN);
  }

    
   if ( Sensor_Counter_Up > 3 )
80002388:	4d 4c       	lddpc	r12,800024d8 <hall_int_handler+0x16c>
8000238a:	30 39       	mov	r9,3
8000238c:	19 88       	ld.ub	r8,r12[0x0]
8000238e:	f2 08 18 00 	cp.b	r8,r9
80002392:	e0 88 00 37 	brls	80002400 <hall_int_handler+0x94>
   {

      if (Delay_For_Change != 0)
80002396:	4d 26       	lddpc	r6,800024dc <hall_int_handler+0x170>
80002398:	0d 88       	ld.ub	r8,r6[0x0]
8000239a:	58 08       	cp.w	r8,0
8000239c:	c3 51       	brne	80002406 <hall_int_handler+0x9a>
8000239e:	4d 1e       	lddpc	lr,800024e0 <hall_int_handler+0x174>
800023a0:	4d 17       	lddpc	r7,800024e4 <hall_int_handler+0x178>
         Hall_Sector = Mem_Hall_Sector;
         // end Change_Sector 
      }

      // Filter and memorize the Conuter_Up in the Top_Counter 
      Mem_Top_CounterX8 = (((U16)7 * Mem_Top_CounterX8) + (U16)8 * Sensor_Counter_Up) >>3;
800023a2:	4d 2b       	lddpc	r11,800024e8 <hall_int_handler+0x17c>
800023a4:	96 09       	ld.sh	r9,r11[0x0]
800023a6:	19 8a       	ld.ub	r10,r12[0x0]
800023a8:	5c 79       	castu.h	r9
800023aa:	f2 08 15 03 	lsl	r8,r9,0x3
800023ae:	12 18       	sub	r8,r9
800023b0:	f0 0a 00 3a 	add	r10,r8,r10<<0x3
800023b4:	f5 da b0 70 	bfexts	r10,r10,0x3,0x10
800023b8:	b6 0a       	st.h	r11[0x0],r10
      Mem_Top_Counter = Mem_Top_CounterX8 >> 3;
800023ba:	96 08       	ld.sh	r8,r11[0x0]
800023bc:	f1 d8 c0 68 	bfextu	r8,r8,0x3,0x8
800023c0:	bc 88       	st.b	lr[0x0],r8

      Sensor_Counter_Up = 0; // reset the Counter_Up 
800023c2:	30 09       	mov	r9,0

      // Get the status of the 3 Hall sensors 
      hall_value = HALL_PORT.pvr & (1<<HALL_3 | 1<<HALL_2 | 1<<HALL_1); 
800023c4:	fe 78 10 00 	mov	r8,-61440

      // Filter and memorize the Conuter_Up in the Top_Counter 
      Mem_Top_CounterX8 = (((U16)7 * Mem_Top_CounterX8) + (U16)8 * Sensor_Counter_Up) >>3;
      Mem_Top_Counter = Mem_Top_CounterX8 >> 3;

      Sensor_Counter_Up = 0; // reset the Counter_Up 
800023c8:	b8 89       	st.b	r12[0x0],r9

      // Get the status of the 3 Hall sensors 
      hall_value = HALL_PORT.pvr & (1<<HALL_3 | 1<<HALL_2 | 1<<HALL_1); 
800023ca:	71 88       	ld.w	r8,r8[0x60]

      switch (hall_value) {
800023cc:	e0 69 02 00 	mov	r9,512
800023d0:	ea 19 20 00 	orh	r9,0x2000
800023d4:	e4 18 60 00 	andh	r8,0x6000
800023d8:	e0 18 02 00 	andl	r8,0x200
800023dc:	12 38       	cp.w	r8,r9
800023de:	c6 80       	breq	800024ae <hall_int_handler+0x142>
800023e0:	e0 8b 00 55 	brhi	8000248a <hall_int_handler+0x11e>
800023e4:	e0 48 02 00 	cp.w	r8,512
800023e8:	c6 b0       	breq	800024be <hall_int_handler+0x152>
800023ea:	fc 19 20 00 	movh	r9,0x2000
800023ee:	12 38       	cp.w	r8,r9
800023f0:	c6 30       	breq	800024b6 <hall_int_handler+0x14a>
            break;
         case (0<<HALL_3 | 1<<HALL_2 | 1<<HALL_1):
            hall_state = HS_011;
            break;
         default:
            hall_state = HS_ERR;
800023f2:	4b f9       	lddpc	r9,800024ec <hall_int_handler+0x180>
800023f4:	30 08       	mov	r8,0
800023f6:	b2 88       	st.b	r9[0x0],r8
       }
        Mem_Hall_Sector = hall_state;
800023f8:	13 88       	ld.ub	r8,r9[0x0]
800023fa:	ae 88       	st.b	r7[0x0],r8

      // arm the Delay_For_Change 
      Delay_For_Change = Mem_Top_Counter - ADVANCE;
800023fc:	1d 89       	ld.ub	r9,lr[0x0]
800023fe:	ac 89       	st.b	r6[0x0],r9

   } // else false interrupt 
}
80002400:	e3 cd 40 c0 	ldm	sp++,r6-r7,lr
80002404:	d6 03       	rete
   {

      if (Delay_For_Change != 0)
      {
         // Last Delay not finished : Force Change_Sector 
         Top_Counter = Mem_Top_Counter;
80002406:	4b ba       	lddpc	r10,800024f0 <hall_int_handler+0x184>
80002408:	4b 6e       	lddpc	lr,800024e0 <hall_int_handler+0x174>
8000240a:	1d 88       	ld.ub	r8,lr[0x0]
8000240c:	b4 88       	st.b	r10[0x0],r8
         if (Top_Counter == 0) Top_Counter++; // to avoid "divide by 0" 
8000240e:	15 89       	ld.ub	r9,r10[0x0]
80002410:	58 09       	cp.w	r9,0
80002412:	c0 41       	brne	8000241a <hall_int_handler+0xae>
80002414:	15 88       	ld.ub	r8,r10[0x0]
80002416:	2f f8       	sub	r8,-1
80002418:	b4 88       	st.b	r10[0x0],r8

         Sensor_Counter_Down = Mem_Top_Counter;
8000241a:	1d 88       	ld.ub	r8,lr[0x0]
8000241c:	4b 69       	lddpc	r9,800024f4 <hall_int_handler+0x188>
8000241e:	b2 88       	st.b	r9[0x0],r8
         Hall_Sector = Mem_Hall_Sector;
80002420:	4b 17       	lddpc	r7,800024e4 <hall_int_handler+0x178>
80002422:	4b 69       	lddpc	r9,800024f8 <hall_int_handler+0x18c>
80002424:	0f 88       	ld.ub	r8,r7[0x0]
80002426:	b2 88       	st.b	r9[0x0],r8
80002428:	cb db       	rjmp	800023a2 <hall_int_handler+0x36>
    gpio_clear_pin_interrupt_flag(HALL_2_PIN);
  }  
  
  if (gpio_get_pin_interrupt_flag(HALL_3_PIN)) 
  {
    gpio_clear_pin_interrupt_flag(HALL_3_PIN);
8000242a:	31 ec       	mov	r12,30
8000242c:	e0 a0 0a 8a 	rcall	80003940 <gpio_clear_pin_interrupt_flag>
80002430:	ca cb       	rjmp	80002388 <hall_int_handler+0x1c>
    gpio_clear_pin_interrupt_flag(HALL_1_PIN);
  }
  
  if (gpio_get_pin_interrupt_flag(HALL_2_PIN)) 
  {   
    gpio_clear_pin_interrupt_flag(HALL_2_PIN);
80002432:	31 dc       	mov	r12,29
80002434:	e0 a0 0a 86 	rcall	80003940 <gpio_clear_pin_interrupt_flag>
80002438:	ca 4b       	rjmp	80002380 <hall_int_handler+0x14>
   
  if (gpio_get_pin_interrupt_flag(HALL_1_PIN)) 
  {
   
   // determine hall period
   hall_tj= Get_sys_count();
8000243a:	e1 be 00 42 	mfsr	lr,0x108
   hall_period = hall_tj - hall_ti;
8000243e:	4b 08       	lddpc	r8,800024fc <hall_int_handler+0x190>
80002440:	70 06       	ld.w	r6,r8[0x0]
   hall_ti = hall_tj; // arm for next period   
80002442:	91 0e       	st.w	r8[0x0],lr

   //Filtering
   average -= tab[i];   
80002444:	4a f7       	lddpc	r7,80002500 <hall_int_handler+0x194>
80002446:	4b 0b       	lddpc	r11,80002504 <hall_int_handler+0x198>
80002448:	4b 0c       	lddpc	r12,80002508 <hall_int_handler+0x19c>
8000244a:	76 08       	ld.w	r8,r11[0x0]
8000244c:	6e 09       	ld.w	r9,r7[0x0]
8000244e:	f8 09 03 2a 	ld.w	r10,r12[r9<<0x2]
80002452:	14 18       	sub	r8,r10
80002454:	97 08       	st.w	r11[0x0],r8
  if (gpio_get_pin_interrupt_flag(HALL_1_PIN)) 
  {
   
   // determine hall period
   hall_tj= Get_sys_count();
   hall_period = hall_tj - hall_ti;
80002456:	0c 1e       	sub	lr,r6
   hall_ti = hall_tj; // arm for next period   

   //Filtering
   average -= tab[i];   
   tab[i]   = hall_period;
80002458:	6e 08       	ld.w	r8,r7[0x0]
8000245a:	f8 08 09 2e 	st.w	r12[r8<<0x2],lr
   average += tab[i];
8000245e:	6e 09       	ld.w	r9,r7[0x0]
80002460:	f8 09 03 28 	ld.w	r8,r12[r9<<0x2]
80002464:	76 0a       	ld.w	r10,r11[0x0]
80002466:	14 08       	add	r8,r10
80002468:	97 08       	st.w	r11[0x0],r8
   filt_hall_period = average;
8000246a:	4a 99       	lddpc	r9,8000250c <hall_int_handler+0x1a0>
8000246c:	76 0a       	ld.w	r10,r11[0x0]
8000246e:	93 0a       	st.w	r9[0x0],r10
   i++;
80002470:	6e 08       	ld.w	r8,r7[0x0]
80002472:	2f f8       	sub	r8,-1
80002474:	8f 08       	st.w	r7[0x0],r8
   if (i==n_SAMPLE) i=0;
80002476:	6e 09       	ld.w	r9,r7[0x0]
80002478:	58 89       	cp.w	r9,8
8000247a:	f9 b8 00 00 	moveq	r8,0
8000247e:	ef f8 0a 00 	st.weq	r7[0x0],r8
   
    gpio_clear_pin_interrupt_flag(HALL_1_PIN);
80002482:	30 9c       	mov	r12,9
80002484:	e0 a0 0a 5e 	rcall	80003940 <gpio_clear_pin_interrupt_flag>
80002488:	c7 8b       	rjmp	80002378 <hall_int_handler+0xc>
      Sensor_Counter_Up = 0; // reset the Counter_Up 

      // Get the status of the 3 Hall sensors 
      hall_value = HALL_PORT.pvr & (1<<HALL_3 | 1<<HALL_2 | 1<<HALL_1); 

      switch (hall_value) {
8000248a:	e0 69 02 00 	mov	r9,512
8000248e:	ea 19 40 00 	orh	r9,0x4000
80002492:	12 38       	cp.w	r8,r9
80002494:	c1 d0       	breq	800024ce <hall_int_handler+0x162>
80002496:	fc 19 60 00 	movh	r9,0x6000
8000249a:	12 38       	cp.w	r8,r9
8000249c:	c1 50       	breq	800024c6 <hall_int_handler+0x15a>
8000249e:	fc 19 40 00 	movh	r9,0x4000
800024a2:	12 38       	cp.w	r8,r9
800024a4:	ca 71       	brne	800023f2 <hall_int_handler+0x86>
            break;
         case (1<<HALL_3 | 1<<HALL_2 | 0<<HALL_1):
            hall_state = HS_110;
            break;
         case (1<<HALL_3 | 0<<HALL_2 | 0<<HALL_1):
            hall_state = HS_100;
800024a6:	49 29       	lddpc	r9,800024ec <hall_int_handler+0x180>
800024a8:	30 48       	mov	r8,4
800024aa:	b2 88       	st.b	r9[0x0],r8
800024ac:	ca 6b       	rjmp	800023f8 <hall_int_handler+0x8c>
            break;
         case (0<<HALL_3 | 0<<HALL_2 | 1<<HALL_1):
            hall_state = HS_001;
            break;
         case (0<<HALL_3 | 1<<HALL_2 | 1<<HALL_1):
            hall_state = HS_011;
800024ae:	49 09       	lddpc	r9,800024ec <hall_int_handler+0x180>
800024b0:	30 38       	mov	r8,3
800024b2:	b2 88       	st.b	r9[0x0],r8
800024b4:	ca 2b       	rjmp	800023f8 <hall_int_handler+0x8c>
      // Get the status of the 3 Hall sensors 
      hall_value = HALL_PORT.pvr & (1<<HALL_3 | 1<<HALL_2 | 1<<HALL_1); 

      switch (hall_value) {
         case (0<<HALL_3 | 1<<HALL_2 | 0<<HALL_1):
            hall_state = HS_010;
800024b6:	48 e9       	lddpc	r9,800024ec <hall_int_handler+0x180>
800024b8:	30 28       	mov	r8,2
800024ba:	b2 88       	st.b	r9[0x0],r8
800024bc:	c9 eb       	rjmp	800023f8 <hall_int_handler+0x8c>
            break;
         case (1<<HALL_3 | 0<<HALL_2 | 1<<HALL_1):
            hall_state = HS_101;
            break;
         case (0<<HALL_3 | 0<<HALL_2 | 1<<HALL_1):
            hall_state = HS_001;
800024be:	48 c9       	lddpc	r9,800024ec <hall_int_handler+0x180>
800024c0:	30 18       	mov	r8,1
800024c2:	b2 88       	st.b	r9[0x0],r8
800024c4:	c9 ab       	rjmp	800023f8 <hall_int_handler+0x8c>
      switch (hall_value) {
         case (0<<HALL_3 | 1<<HALL_2 | 0<<HALL_1):
            hall_state = HS_010;
            break;
         case (1<<HALL_3 | 1<<HALL_2 | 0<<HALL_1):
            hall_state = HS_110;
800024c6:	48 a9       	lddpc	r9,800024ec <hall_int_handler+0x180>
800024c8:	30 68       	mov	r8,6
800024ca:	b2 88       	st.b	r9[0x0],r8
800024cc:	c9 6b       	rjmp	800023f8 <hall_int_handler+0x8c>
            break;
         case (1<<HALL_3 | 0<<HALL_2 | 0<<HALL_1):
            hall_state = HS_100;
            break;
         case (1<<HALL_3 | 0<<HALL_2 | 1<<HALL_1):
            hall_state = HS_101;
800024ce:	48 89       	lddpc	r9,800024ec <hall_int_handler+0x180>
800024d0:	30 58       	mov	r8,5
800024d2:	b2 88       	st.b	r9[0x0],r8
800024d4:	c9 2b       	rjmp	800023f8 <hall_int_handler+0x8c>
800024d6:	d7 03       	nop
800024d8:	00 00       	add	r0,r0
800024da:	05 74       	ld.ub	r4,--r2
800024dc:	00 00       	add	r0,r0
800024de:	00 1d       	sub	sp,r0
800024e0:	00 00       	add	r0,r0
800024e2:	00 1c       	sub	r12,r0
800024e4:	00 00       	add	r0,r0
800024e6:	00 1e       	sub	lr,r0
800024e8:	00 00       	add	r0,r0
800024ea:	00 24       	rsub	r4,r0
800024ec:	00 00       	add	r0,r0
800024ee:	05 6c       	ld.uh	r12,--r2
800024f0:	00 00       	add	r0,r0
800024f2:	00 1f       	sub	pc,r0
800024f4:	00 00       	add	r0,r0
800024f6:	00 27       	rsub	r7,r0
800024f8:	00 00       	add	r0,r0
800024fa:	00 26       	rsub	r6,r0
800024fc:	00 00       	add	r0,r0
800024fe:	06 f0       	st.b	--r3,r0
80002500:	00 00       	add	r0,r0
80002502:	05 68       	ld.uh	r8,--r2
80002504:	00 00       	add	r0,r0
80002506:	05 70       	ld.ub	r0,--r2
80002508:	00 00       	add	r0,r0
8000250a:	06 f4       	st.b	--r3,r4
8000250c:	00 00       	add	r0,r0
8000250e:	00 20       	rsub	r0,r0

80002510 <hall_estimator_init>:
//------------------------------------------------------------------------------
/*! \name Initialization function
 */
//! @{
void hall_estimator_init(volatile hall_estimator_options_t *hall_estimator_options)
{
80002510:	d4 01       	pushm	lr
    gpio_enable_pin_pull_up(HALL_1_PIN );	// HALL_1_PIN
80002512:	30 9c       	mov	r12,9
80002514:	e0 a0 09 b7 	rcall	80003882 <gpio_enable_pin_pull_up>
    gpio_enable_pin_pull_up(HALL_2_PIN );	// HALL_2_PIN
80002518:	31 dc       	mov	r12,29
8000251a:	e0 a0 09 b4 	rcall	80003882 <gpio_enable_pin_pull_up>
    gpio_enable_pin_pull_up(HALL_3_PIN );	// HALL_3_PIN    
8000251e:	31 ec       	mov	r12,30
80002520:	e0 a0 09 b1 	rcall	80003882 <gpio_enable_pin_pull_up>
}
80002524:	d8 02       	popm	pc
80002526:	d7 03       	nop

80002528 <pwm_drv_enable_pwm_channel>:
  pwm->channel[PWM_ZL_PWM_CHANNEL].cdty= pwm_drv_options->max_pwm_value - 10; // duty cycle, should be < CPRD
}
void pwm_drv_enable_pwm_channel(void)
{
  volatile avr32_pwm_t *pwm = &AVR32_PWM;
  pwm->ena = (1<<PWM_XL_PWM_CHANNEL )|(1<<PWM_XH_PWM_CHANNEL )|(1<<PWM_YL_PWM_CHANNEL )|(1<<PWM_YH_PWM_CHANNEL )|(1<<PWM_ZL_PWM_CHANNEL )|(1<<PWM_ZH_PWM_CHANNEL ); // enable channel 0 to 6 
80002528:	33 f9       	mov	r9,63
8000252a:	fe 78 30 00 	mov	r8,-53248
8000252e:	91 19       	st.w	r8[0x4],r9
  
}
80002530:	5e fc       	retal	r12

80002532 <pwm_drv_enable_pwm_fct>:
void pwm_drv_enable_pwm_fct(void)
{
  PWM_PORT.gperc = (1<<PWM_XL)|(1<<PWM_XH)|(1<<PWM_YL)|(1<<PWM_YH)|(1<<PWM_ZL)|(1<<PWM_ZH);
80002532:	fc 19 18 78 	movh	r9,0x1878
80002536:	fe 78 10 00 	mov	r8,-61440
8000253a:	f1 49 01 08 	st.w	r8[264],r9
}
8000253e:	5e fc       	retal	r12

80002540 <pwm_drv_disable_pwm_fct>:
void pwm_drv_disable_pwm_fct(void)
{
  PWM_PORT.gpers = (1<<PWM_XL)|(1<<PWM_XH)|(1<<PWM_YL)|(1<<PWM_YH)|(1<<PWM_ZL)|(1<<PWM_ZH);
80002540:	fc 19 18 78 	movh	r9,0x1878
80002544:	fe 78 10 00 	mov	r8,-61440
80002548:	f1 49 01 04 	st.w	r8[260],r9
}
8000254c:	5e fc       	retal	r12

8000254e <pwm_drv_duty_cycle>:
//------------------------------------------------------------------------------
/*! \name PWM Driver Update
 */
//! @{
void pwm_drv_duty_cycle(volatile pwm_drv_options_t *pwm_drv_options,U32 pwm0,U32 pwm1,U32 pwm2,U32 pwm3,U32 pwm4,U32 pwm5)
{
8000254e:	eb cd 40 6c 	pushm	r2-r3,r5-r6,lr
  volatile avr32_pwm_t *pwm = &AVR32_PWM;

  pwm->channel[PWM_XH_PWM_CHANNEL].cupd= pwm_drv_options->max_pwm_value - pwm0;
80002552:	fe 76 30 00 	mov	r6,-53248
80002556:	78 0e       	ld.w	lr,r12[0x0]
//------------------------------------------------------------------------------
/*! \name PWM Driver Update
 */
//! @{
void pwm_drv_duty_cycle(volatile pwm_drv_options_t *pwm_drv_options,U32 pwm0,U32 pwm1,U32 pwm2,U32 pwm3,U32 pwm4,U32 pwm5)
{
80002558:	fa c5 ff ec 	sub	r5,sp,-20
  volatile avr32_pwm_t *pwm = &AVR32_PWM;

  pwm->channel[PWM_XH_PWM_CHANNEL].cupd= pwm_drv_options->max_pwm_value - pwm0;
8000255c:	16 1e       	sub	lr,r11
//------------------------------------------------------------------------------
/*! \name PWM Driver Update
 */
//! @{
void pwm_drv_duty_cycle(volatile pwm_drv_options_t *pwm_drv_options,U32 pwm0,U32 pwm1,U32 pwm2,U32 pwm3,U32 pwm4,U32 pwm5)
{
8000255e:	6a 12       	ld.w	r2,r5[0x4]
80002560:	6a 03       	ld.w	r3,r5[0x0]
  volatile avr32_pwm_t *pwm = &AVR32_PWM;

  pwm->channel[PWM_XH_PWM_CHANNEL].cupd= pwm_drv_options->max_pwm_value - pwm0;
80002562:	ed 4e 02 10 	st.w	r6[528],lr
  pwm->channel[PWM_XL_PWM_CHANNEL].cupd= pwm_drv_options->max_pwm_value - pwm1;
80002566:	78 0b       	ld.w	r11,r12[0x0]
80002568:	14 1b       	sub	r11,r10
8000256a:	ed 4b 02 30 	st.w	r6[560],r11
  pwm->channel[PWM_YH_PWM_CHANNEL].cupd= pwm_drv_options->max_pwm_value - pwm2;
8000256e:	78 0a       	ld.w	r10,r12[0x0]
80002570:	12 1a       	sub	r10,r9
80002572:	ed 4a 02 50 	st.w	r6[592],r10
  pwm->channel[PWM_YL_PWM_CHANNEL].cupd= pwm_drv_options->max_pwm_value - pwm3;
80002576:	78 09       	ld.w	r9,r12[0x0]
80002578:	10 19       	sub	r9,r8
8000257a:	ed 49 02 70 	st.w	r6[624],r9
  pwm->channel[PWM_ZH_PWM_CHANNEL].cupd= pwm_drv_options->max_pwm_value - pwm4;
8000257e:	78 08       	ld.w	r8,r12[0x0]
80002580:	06 18       	sub	r8,r3
80002582:	ed 48 02 90 	st.w	r6[656],r8
  pwm->channel[PWM_ZL_PWM_CHANNEL].cupd= pwm_drv_options->max_pwm_value - pwm5;
80002586:	78 09       	ld.w	r9,r12[0x0]
80002588:	04 19       	sub	r9,r2
8000258a:	ed 49 02 b0 	st.w	r6[688],r9
}
8000258e:	e3 cd 80 6c 	ldm	sp++,r2-r3,r5-r6,pc
80002592:	d7 03       	nop

80002594 <pwm_drv_init>:
//------------------------------------------------------------------------------
/*! \name Initialization function
 */
//! @{
void pwm_drv_init(volatile pwm_drv_options_t *pwm_drv_options)
{
80002594:	eb cd 40 40 	pushm	r6,lr
    {PWM_YH_PIN_NUMBER, PWM_YH_PWM_FUNCTION},
    {PWM_ZL_PIN_NUMBER, PWM_ZL_PWM_FUNCTION},
    {PWM_ZH_PIN_NUMBER, PWM_ZH_PWM_FUNCTION}
  };
  // Assign GPIO to PWM.
  gpio_enable_module(PWM_GPIO_MAP ,
80002598:	30 6b       	mov	r11,6
//------------------------------------------------------------------------------
/*! \name Initialization function
 */
//! @{
void pwm_drv_init(volatile pwm_drv_options_t *pwm_drv_options)
{
8000259a:	18 96       	mov	r6,r12
    {PWM_YH_PIN_NUMBER, PWM_YH_PWM_FUNCTION},
    {PWM_ZL_PIN_NUMBER, PWM_ZL_PWM_FUNCTION},
    {PWM_ZH_PIN_NUMBER, PWM_ZH_PWM_FUNCTION}
  };
  // Assign GPIO to PWM.
  gpio_enable_module(PWM_GPIO_MAP ,
8000259c:	4a 8c       	lddpc	r12,8000263c <pwm_drv_init+0xa8>
8000259e:	e0 a0 09 ee 	rcall	8000397a <gpio_enable_module>
                     sizeof(PWM_GPIO_MAP ) / sizeof(PWM_GPIO_MAP[0]));

   // disable open drain 
   PWM_PORT.odmerc = (1<<PWM_ZL)|(1<<PWM_ZH)|(1<<PWM_YL)|(1<<PWM_YH)|(1<<PWM_XL)|(1<<PWM_XH);
800025a2:	fe 79 10 00 	mov	r9,-61440
800025a6:	fc 18 18 78 	movh	r8,0x1878
800025aa:	f3 48 01 88 	st.w	r9[392],r8

   // disable pull up 
   PWM_PORT.puerc = (1<<PWM_ZL)|(1<<PWM_ZH)|(1<<PWM_YL)|(1<<PWM_YH)|(1<<PWM_XL)|(1<<PWM_XH);
800025ae:	f3 48 01 78 	st.w	r9[376],r8

   // output value = 000000 
   PWM_PORT.ovrc = (1<<PWM_ZL)|(1<<PWM_ZH)|(1<<PWM_YL)|(1<<PWM_YH)|(1<<PWM_XL)|(1<<PWM_XH);
800025b2:	f3 48 01 58 	st.w	r9[344],r8

   // output driver enable 
   PWM_PORT.oders = (1<<PWM_ZL)|(1<<PWM_ZH)|(1<<PWM_YL)|(1<<PWM_YH)|(1<<PWM_XL)|(1<<PWM_XH);
800025b6:	f3 48 01 44 	st.w	r9[324],r8


  // set PWM mode register 
  pwm->mr =
800025ba:	fe 7a 30 00 	mov	r10,-53248
800025be:	30 08       	mov	r8,0
800025c0:	95 08       	st.w	r10[0x0],r8
    (0<<AVR32_PWM_PREA) |
    (0<<AVR32_PWM_PREB)
    ;

  // channel XH_PWM_CHANNEL 
  pwm->channel[PWM_XH_PWM_CHANNEL].cmr=
800025c2:	e0 6c 01 01 	mov	r12,257
800025c6:	f5 4c 02 00 	st.w	r10[512],r12
    (1<<AVR32_PWM_CMR_CPRE) | // MCK % 2 
    (1<<AVR32_PWM_CMR_CALG) | // center aligned 
    (0<<AVR32_PWM_CMR_CPOL) | // start with 0 
    (0<<AVR32_PWM_CMR_CPD)
    ;   // channel mode
  pwm->channel[PWM_XH_PWM_CHANNEL].cprd= pwm_drv_options->max_pwm_value; // channel period
800025ca:	6c 09       	ld.w	r9,r6[0x0]
800025cc:	f5 49 02 08 	st.w	r10[520],r9
  pwm->channel[PWM_XH_PWM_CHANNEL].cdty= pwm_drv_options->max_pwm_value - 10; // duty cycle, should be < CPRD
800025d0:	6c 08       	ld.w	r8,r6[0x0]
800025d2:	20 a8       	sub	r8,10
800025d4:	f5 48 02 04 	st.w	r10[516],r8

  // channel XL_PWM_CHANNEL 
  pwm->channel[PWM_XL_PWM_CHANNEL].cmr=
800025d8:	e0 6b 03 01 	mov	r11,769
800025dc:	f5 4b 02 20 	st.w	r10[544],r11
    (1<<AVR32_PWM_CMR_CPRE) | // MCK % 2 
    (1<<AVR32_PWM_CMR_CALG) | // center aligned 
    (1<<AVR32_PWM_CMR_CPOL) | // start with 1 
    (0<<AVR32_PWM_CMR_CPD)
    ;   // channel mode
  pwm->channel[PWM_XL_PWM_CHANNEL].cprd= pwm_drv_options->max_pwm_value; // channel period
800025e0:	6c 09       	ld.w	r9,r6[0x0]
800025e2:	f5 49 02 28 	st.w	r10[552],r9
  pwm->channel[PWM_XL_PWM_CHANNEL].cdty= pwm_drv_options->max_pwm_value - 10; // duty cycle, should be < CPRD
800025e6:	6c 08       	ld.w	r8,r6[0x0]
800025e8:	20 a8       	sub	r8,10
800025ea:	f5 48 02 24 	st.w	r10[548],r8

  // channel YH_PWM_CHANNEL 
  pwm->channel[PWM_YH_PWM_CHANNEL].cmr=
800025ee:	f5 4c 02 40 	st.w	r10[576],r12
    (1<<AVR32_PWM_CMR_CPRE) | // MCK % 2 
    (1<<AVR32_PWM_CMR_CALG) | // center aligned 
    (0<<AVR32_PWM_CMR_CPOL) | // start with 0 
    (0<<AVR32_PWM_CMR_CPD)
    ;   // channel mode
  pwm->channel[PWM_YH_PWM_CHANNEL].cprd= pwm_drv_options->max_pwm_value; // channel period
800025f2:	6c 09       	ld.w	r9,r6[0x0]
800025f4:	f5 49 02 48 	st.w	r10[584],r9
  pwm->channel[PWM_YH_PWM_CHANNEL].cdty= pwm_drv_options->max_pwm_value - 10; // duty cycle, should be < CPRD
800025f8:	6c 08       	ld.w	r8,r6[0x0]
800025fa:	20 a8       	sub	r8,10
800025fc:	f5 48 02 44 	st.w	r10[580],r8

  // channel YL_PWM_CHANNEL 
  pwm->channel[PWM_YL_PWM_CHANNEL].cmr=
80002600:	f5 4b 02 60 	st.w	r10[608],r11
    (1<<AVR32_PWM_CMR_CPRE) | // MCK % 2 
    (1<<AVR32_PWM_CMR_CALG) | // center aligned 
    (1<<AVR32_PWM_CMR_CPOL) | // start with 1 
    (0<<AVR32_PWM_CMR_CPD)
    ;   // channel mode
  pwm->channel[PWM_YL_PWM_CHANNEL].cprd= pwm_drv_options->max_pwm_value; // channel period
80002604:	6c 09       	ld.w	r9,r6[0x0]
80002606:	f5 49 02 68 	st.w	r10[616],r9
  pwm->channel[PWM_YL_PWM_CHANNEL].cdty= pwm_drv_options->max_pwm_value - 10; // duty cycle, should be < CPRD
8000260a:	6c 08       	ld.w	r8,r6[0x0]
8000260c:	20 a8       	sub	r8,10
8000260e:	f5 48 02 64 	st.w	r10[612],r8

  // channel ZH_PWM_CHANNEL 
  pwm->channel[PWM_ZH_PWM_CHANNEL].cmr=
80002612:	f5 4c 02 80 	st.w	r10[640],r12
    (1<<AVR32_PWM_CMR_CPRE) | // MCK % 2 
    (1<<AVR32_PWM_CMR_CALG) | // center aligned 
    (0<<AVR32_PWM_CMR_CPOL) | // start with 0 
    (0<<AVR32_PWM_CMR_CPD)
    ;   // channel mode
  pwm->channel[PWM_ZH_PWM_CHANNEL].cprd= pwm_drv_options->max_pwm_value; // channel period
80002616:	6c 09       	ld.w	r9,r6[0x0]
80002618:	f5 49 02 88 	st.w	r10[648],r9
  pwm->channel[PWM_ZH_PWM_CHANNEL].cdty= pwm_drv_options->max_pwm_value - 10; // duty cycle, should be < CPRD
8000261c:	6c 08       	ld.w	r8,r6[0x0]
8000261e:	20 a8       	sub	r8,10
80002620:	f5 48 02 84 	st.w	r10[644],r8

  // channel ZL_PWM_CHANNEL 
  pwm->channel[PWM_ZL_PWM_CHANNEL].cmr=
80002624:	f5 4b 02 a0 	st.w	r10[672],r11
    (1<<AVR32_PWM_CMR_CPRE) | // MCK % 2 
    (1<<AVR32_PWM_CMR_CALG) | // center aligned 
    (1<<AVR32_PWM_CMR_CPOL) | // start with 1 
    (0<<AVR32_PWM_CMR_CPD)
    ;   // channel mode
  pwm->channel[PWM_ZL_PWM_CHANNEL].cprd= pwm_drv_options->max_pwm_value; // channel period
80002628:	6c 09       	ld.w	r9,r6[0x0]
8000262a:	f5 49 02 a8 	st.w	r10[680],r9
  pwm->channel[PWM_ZL_PWM_CHANNEL].cdty= pwm_drv_options->max_pwm_value - 10; // duty cycle, should be < CPRD
8000262e:	6c 08       	ld.w	r8,r6[0x0]
80002630:	20 a8       	sub	r8,10
80002632:	f5 48 02 a4 	st.w	r10[676],r8
}
80002636:	e3 cd 80 40 	ldm	sp++,r6,pc
8000263a:	d7 03       	nop
8000263c:	80 00       	ld.sh	r0,r0[0x0]
8000263e:	a4 18       	st.h	r2[0x2],r8

80002640 <svpwm_calc>:
#include "svpwm.h"
#include "dsp.h"


void svpwm_calc(volatile svpwm_options_t *svpwm_options,U8 dir)
{	
80002640:	eb cd 40 e0 	pushm	r5-r7,lr
80002644:	20 4d       	sub	sp,16
80002646:	18 97       	mov	r7,r12
        volatile U32 dx,dy,div;
        volatile U32 T;
        
        div = dsp32_op_div(svpwm_options->teta,svpwm_options->resolution);
80002648:	78 08       	ld.w	r8,r12[0x0]
8000264a:	98 5c       	ld.sh	r12,r12[0xa]
8000264c:	5c 7c       	castu.h	r12
8000264e:	f0 09 14 1f 	asr	r9,r8,0x1f
80002652:	f8 0a 15 1f 	lsl	r10,r12,0x1f
#include "svpwm.h"
#include "dsp.h"


void svpwm_calc(volatile svpwm_options_t *svpwm_options,U8 dir)
{	
80002656:	16 95       	mov	r5,r11
        volatile U32 dx,dy,div;
        volatile U32 T;
        
        div = dsp32_op_div(svpwm_options->teta,svpwm_options->resolution);
80002658:	30 0b       	mov	r11,0
8000265a:	f7 ec 12 1b 	or	r11,r11,r12>>0x1
8000265e:	e0 a0 0e 07 	rcall	8000426c <__avr32_sdiv64>
        dy = dsp32_op_sin(dsp32_op_mul(DSP32_Q(1./3.),div));
80002662:	e0 66 aa aa 	mov	r6,43690
80002666:	ea 16 2a aa 	orh	r6,0x2aaa
void svpwm_calc(volatile svpwm_options_t *svpwm_options,U8 dir)
{	
        volatile U32 dx,dy,div;
        volatile U32 T;
        
        div = dsp32_op_div(svpwm_options->teta,svpwm_options->resolution);
8000266a:	50 1a       	stdsp	sp[0x4],r10
        dy = dsp32_op_sin(dsp32_op_mul(DSP32_Q(1./3.),div));
8000266c:	40 19       	lddsp	r9,sp[0x4]
8000266e:	f2 06 04 48 	muls.d	r8,r9,r6
80002672:	f0 0c 16 1f 	lsr	r12,r8,0x1f
80002676:	f9 e9 10 1c 	or	r12,r12,r9<<0x1
8000267a:	e0 a0 07 25 	rcall	800034c4 <dsp32_op_sin>
8000267e:	50 2c       	stdsp	sp[0x8],r12
        dy = (((U64)(svpwm_options->amplitude))*((U64)(dy)))>>DSP32_QB;
80002680:	6e 3b       	ld.w	r11,r7[0xc]
80002682:	40 29       	lddsp	r9,sp[0x8]
80002684:	f2 0b 06 48 	mulu.d	r8,r9,r11
80002688:	f0 0a 16 1f 	lsr	r10,r8,0x1f
8000268c:	f5 e9 10 1a 	or	r10,r10,r9<<0x1
80002690:	50 2a       	stdsp	sp[0x8],r10
        
        
        div = dsp32_op_div(svpwm_options->resolution-svpwm_options->teta,svpwm_options->resolution);
80002692:	6e 08       	ld.w	r8,r7[0x0]
80002694:	6e 0c       	ld.w	r12,r7[0x0]
80002696:	8e 5a       	ld.sh	r10,r7[0xa]
80002698:	5c 7a       	castu.h	r10
8000269a:	14 1c       	sub	r12,r10
8000269c:	f0 09 14 1f 	asr	r9,r8,0x1f
800026a0:	18 9b       	mov	r11,r12
800026a2:	f8 0a 15 1f 	lsl	r10,r12,0x1f
800026a6:	e6 1b 80 00 	andh	r11,0x8000,COH
800026aa:	f7 ec 12 1b 	or	r11,r11,r12>>0x1
800026ae:	e0 a0 0d df 	rcall	8000426c <__avr32_sdiv64>
800026b2:	50 1a       	stdsp	sp[0x4],r10
        dx = dsp32_op_sin(dsp32_op_mul(DSP32_Q(1./3.),div));
800026b4:	40 19       	lddsp	r9,sp[0x4]
800026b6:	f2 06 04 48 	muls.d	r8,r9,r6
800026ba:	f0 0c 16 1f 	lsr	r12,r8,0x1f
800026be:	f9 e9 10 1c 	or	r12,r12,r9<<0x1
800026c2:	e0 a0 07 01 	rcall	800034c4 <dsp32_op_sin>
800026c6:	50 3c       	stdsp	sp[0xc],r12
	dx = (((U64)(svpwm_options->amplitude))*((U64)(dx)))>>DSP32_QB;
800026c8:	6e 3b       	ld.w	r11,r7[0xc]
800026ca:	40 39       	lddsp	r9,sp[0xc]
800026cc:	f2 0b 06 48 	mulu.d	r8,r9,r11
800026d0:	f0 0a 16 1f 	lsr	r10,r8,0x1f
800026d4:	f5 e9 10 1a 	or	r10,r10,r9<<0x1
800026d8:	50 3a       	stdsp	sp[0xc],r10
        	
        T = svpwm_options->max_frequency / 2;
800026da:	6e 18       	ld.w	r8,r7[0x4]
800026dc:	a1 98       	lsr	r8,0x1
800026de:	50 08       	stdsp	sp[0x0],r8
	if (dir==0)
800026e0:	58 05       	cp.w	r5,0
800026e2:	c1 f1       	brne	80002720 <svpwm_calc+0xe0>
	{
	    switch(svpwm_options->sector_number)
800026e4:	8e 48       	ld.sh	r8,r7[0x8]
800026e6:	10 99       	mov	r9,r8
800026e8:	30 38       	mov	r8,3
800026ea:	f0 09 19 00 	cp.h	r9,r8
800026ee:	e0 80 00 97 	breq	8000281c <svpwm_calc+0x1dc>
800026f2:	e0 8b 00 48 	brhi	80002782 <svpwm_calc+0x142>
800026f6:	30 18       	mov	r8,1
800026f8:	f0 09 19 00 	cp.h	r9,r8
800026fc:	c2 50       	breq	80002746 <svpwm_calc+0x106>
800026fe:	30 28       	mov	r8,2
80002700:	f0 09 19 00 	cp.h	r9,r8
80002704:	e0 80 00 c8 	breq	80002894 <svpwm_calc+0x254>
	     case HS_100 :
	    	svpwm_options->PWM0 = (unsigned short int) (T - dx/2 + dy/2) ;
	    	svpwm_options->PWM1 = (unsigned short int) (T - dx/2 - dy/2) ;
	    	svpwm_options->PWM2 = (unsigned short int) (T + dx/2 + dy/2) ; break ;
	     default :
	    	svpwm_options->PWM0 = (unsigned short int) (T) ;
80002708:	40 08       	lddsp	r8,sp[0x0]
8000270a:	5c 78       	castu.h	r8
8000270c:	8f 48       	st.w	r7[0x10],r8
	    	svpwm_options->PWM1 = (unsigned short int) (T) ;
8000270e:	40 09       	lddsp	r9,sp[0x0]
80002710:	5c 79       	castu.h	r9
80002712:	8f 59       	st.w	r7[0x14],r9
	    	svpwm_options->PWM2 = (unsigned short int) (T) ; break ;
80002714:	40 08       	lddsp	r8,sp[0x0]
80002716:	5c 78       	castu.h	r8
80002718:	8f 68       	st.w	r7[0x18],r8
	
	    }		
	}

}
8000271a:	2f cd       	sub	sp,-16
8000271c:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
	
	    }
	}
	else
	{
	    switch(svpwm_options->sector_number)
80002720:	8e 48       	ld.sh	r8,r7[0x8]
80002722:	10 99       	mov	r9,r8
80002724:	30 38       	mov	r8,3
80002726:	f0 09 19 00 	cp.h	r9,r8
8000272a:	e0 80 00 97 	breq	80002858 <svpwm_calc+0x218>
8000272e:	e0 88 00 51 	brls	800027d0 <svpwm_calc+0x190>
80002732:	30 58       	mov	r8,5
80002734:	f0 09 19 00 	cp.h	r9,r8
80002738:	e0 80 00 ae 	breq	80002894 <svpwm_calc+0x254>
8000273c:	c7 03       	brcs	8000281c <svpwm_calc+0x1dc>
8000273e:	30 68       	mov	r8,6
80002740:	f0 09 19 00 	cp.h	r9,r8
80002744:	ce 21       	brne	80002708 <svpwm_calc+0xc8>
	    {
	    case HS_110 :
	    	svpwm_options->PWM0 = (unsigned short int) (T - dx/2 - dy/2) ;
80002746:	40 0a       	lddsp	r10,sp[0x0]
80002748:	40 38       	lddsp	r8,sp[0xc]
8000274a:	40 29       	lddsp	r9,sp[0x8]
8000274c:	a1 98       	lsr	r8,0x1
8000274e:	a1 99       	lsr	r9,0x1
80002750:	10 1a       	sub	r10,r8
80002752:	12 1a       	sub	r10,r9
80002754:	5c 7a       	castu.h	r10
80002756:	8f 4a       	st.w	r7[0x10],r10
	    	svpwm_options->PWM1 = (unsigned short int) (T + dx/2 - dy/2) ;
80002758:	40 39       	lddsp	r9,sp[0xc]
8000275a:	40 0a       	lddsp	r10,sp[0x0]
8000275c:	a1 99       	lsr	r9,0x1
8000275e:	40 28       	lddsp	r8,sp[0x8]
80002760:	14 09       	add	r9,r10
80002762:	a1 98       	lsr	r8,0x1
80002764:	10 19       	sub	r9,r8
80002766:	5c 79       	castu.h	r9
80002768:	8f 59       	st.w	r7[0x14],r9
	    	svpwm_options->PWM2 = (unsigned short int) (T + dx/2 + dy/2) ; break ;
8000276a:	40 3a       	lddsp	r10,sp[0xc]
8000276c:	40 09       	lddsp	r9,sp[0x0]
8000276e:	a1 9a       	lsr	r10,0x1
80002770:	40 28       	lddsp	r8,sp[0x8]
80002772:	a1 98       	lsr	r8,0x1
80002774:	10 0a       	add	r10,r8
80002776:	12 0a       	add	r10,r9
80002778:	5c 7a       	castu.h	r10
8000277a:	8f 6a       	st.w	r7[0x18],r10
	    	svpwm_options->PWM2 = (unsigned short int) (T) ; break ;
	
	    }		
	}

}
8000277c:	2f cd       	sub	sp,-16
8000277e:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
	dx = (((U64)(svpwm_options->amplitude))*((U64)(dx)))>>DSP32_QB;
        	
        T = svpwm_options->max_frequency / 2;
	if (dir==0)
	{
	    switch(svpwm_options->sector_number)
80002782:	30 58       	mov	r8,5
80002784:	f0 09 19 00 	cp.h	r9,r8
80002788:	c2 c0       	breq	800027e0 <svpwm_calc+0x1a0>
8000278a:	c6 73       	brcs	80002858 <svpwm_calc+0x218>
8000278c:	30 68       	mov	r8,6
8000278e:	f0 09 19 00 	cp.h	r9,r8
80002792:	cb b1       	brne	80002708 <svpwm_calc+0xc8>
	     case HS_011 :
	    	svpwm_options->PWM0 = (unsigned short int) (T + dx/2 - dy/2) ;
	    	svpwm_options->PWM1 = (unsigned short int) (T + dx/2 + dy/2) ;
	    	svpwm_options->PWM2 = (unsigned short int) (T - dx/2 - dy/2) ; break ;
	     case HS_001 :
	    	svpwm_options->PWM0 = (unsigned short int) (T + dx/2 + dy/2) ;
80002794:	40 39       	lddsp	r9,sp[0xc]
80002796:	40 0a       	lddsp	r10,sp[0x0]
80002798:	a1 99       	lsr	r9,0x1
8000279a:	40 28       	lddsp	r8,sp[0x8]
8000279c:	a1 98       	lsr	r8,0x1
8000279e:	10 09       	add	r9,r8
800027a0:	14 09       	add	r9,r10
800027a2:	5c 79       	castu.h	r9
800027a4:	8f 49       	st.w	r7[0x10],r9
	    	svpwm_options->PWM1 = (unsigned short int) (T - dx/2 + dy/2) ;
800027a6:	40 0a       	lddsp	r10,sp[0x0]
800027a8:	40 39       	lddsp	r9,sp[0xc]
800027aa:	40 28       	lddsp	r8,sp[0x8]
800027ac:	a1 99       	lsr	r9,0x1
800027ae:	a1 98       	lsr	r8,0x1
800027b0:	14 08       	add	r8,r10
800027b2:	12 18       	sub	r8,r9
800027b4:	5c 78       	castu.h	r8
800027b6:	8f 58       	st.w	r7[0x14],r8
	    	svpwm_options->PWM2 = (unsigned short int) (T - dx/2 - dy/2) ; break ;
800027b8:	40 0a       	lddsp	r10,sp[0x0]
800027ba:	40 38       	lddsp	r8,sp[0xc]
800027bc:	40 29       	lddsp	r9,sp[0x8]
800027be:	a1 98       	lsr	r8,0x1
800027c0:	a1 99       	lsr	r9,0x1
800027c2:	10 1a       	sub	r10,r8
800027c4:	12 1a       	sub	r10,r9
800027c6:	5c 7a       	castu.h	r10
800027c8:	8f 6a       	st.w	r7[0x18],r10
	    	svpwm_options->PWM2 = (unsigned short int) (T) ; break ;
	
	    }		
	}

}
800027ca:	2f cd       	sub	sp,-16
800027cc:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
	
	    }
	}
	else
	{
	    switch(svpwm_options->sector_number)
800027d0:	30 18       	mov	r8,1
800027d2:	f0 09 19 00 	cp.h	r9,r8
800027d6:	cd f0       	breq	80002794 <svpwm_calc+0x154>
800027d8:	30 28       	mov	r8,2
800027da:	f0 09 19 00 	cp.h	r9,r8
800027de:	c9 51       	brne	80002708 <svpwm_calc+0xc8>
	    case HS_110 :
	    	svpwm_options->PWM0 = (unsigned short int) (T - dx/2 - dy/2) ;
	    	svpwm_options->PWM1 = (unsigned short int) (T + dx/2 - dy/2) ;
	    	svpwm_options->PWM2 = (unsigned short int) (T + dx/2 + dy/2) ; break ;
	     case HS_010 :
	    	svpwm_options->PWM0 = (unsigned short int) (T - dx/2 - dy/2) ;
800027e0:	40 0a       	lddsp	r10,sp[0x0]
800027e2:	40 38       	lddsp	r8,sp[0xc]
800027e4:	40 29       	lddsp	r9,sp[0x8]
800027e6:	a1 98       	lsr	r8,0x1
800027e8:	a1 99       	lsr	r9,0x1
800027ea:	10 1a       	sub	r10,r8
800027ec:	12 1a       	sub	r10,r9
800027ee:	5c 7a       	castu.h	r10
800027f0:	8f 4a       	st.w	r7[0x10],r10
	    	svpwm_options->PWM1 = (unsigned short int) (T + dx/2 + dy/2) ;
800027f2:	40 39       	lddsp	r9,sp[0xc]
800027f4:	40 0a       	lddsp	r10,sp[0x0]
800027f6:	a1 99       	lsr	r9,0x1
800027f8:	40 28       	lddsp	r8,sp[0x8]
800027fa:	a1 98       	lsr	r8,0x1
800027fc:	10 09       	add	r9,r8
800027fe:	14 09       	add	r9,r10
80002800:	5c 79       	castu.h	r9
80002802:	8f 59       	st.w	r7[0x14],r9
	    	svpwm_options->PWM2 = (unsigned short int) (T - dx/2 + dy/2) ; break ;
80002804:	40 0a       	lddsp	r10,sp[0x0]
80002806:	40 39       	lddsp	r9,sp[0xc]
80002808:	40 28       	lddsp	r8,sp[0x8]
8000280a:	a1 99       	lsr	r9,0x1
8000280c:	a1 98       	lsr	r8,0x1
8000280e:	14 08       	add	r8,r10
80002810:	12 18       	sub	r8,r9
80002812:	5c 78       	castu.h	r8
80002814:	8f 68       	st.w	r7[0x18],r8
	    	svpwm_options->PWM2 = (unsigned short int) (T) ; break ;
	
	    }		
	}

}
80002816:	2f cd       	sub	sp,-16
80002818:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
	     case HS_101 :
	    	svpwm_options->PWM0 = (unsigned short int) (T + dx/2 + dy/2) ;
	    	svpwm_options->PWM1 = (unsigned short int) (T - dx/2 - dy/2) ;
	    	svpwm_options->PWM2 = (unsigned short int) (T + dx/2 - dy/2) ; break ;
	     case HS_100 :
	    	svpwm_options->PWM0 = (unsigned short int) (T - dx/2 + dy/2) ;
8000281c:	40 0a       	lddsp	r10,sp[0x0]
8000281e:	40 39       	lddsp	r9,sp[0xc]
80002820:	40 28       	lddsp	r8,sp[0x8]
80002822:	a1 99       	lsr	r9,0x1
80002824:	a1 98       	lsr	r8,0x1
80002826:	14 08       	add	r8,r10
80002828:	12 18       	sub	r8,r9
8000282a:	5c 78       	castu.h	r8
8000282c:	8f 48       	st.w	r7[0x10],r8
	    	svpwm_options->PWM1 = (unsigned short int) (T - dx/2 - dy/2) ;
8000282e:	40 0a       	lddsp	r10,sp[0x0]
80002830:	40 38       	lddsp	r8,sp[0xc]
80002832:	40 29       	lddsp	r9,sp[0x8]
80002834:	a1 98       	lsr	r8,0x1
80002836:	a1 99       	lsr	r9,0x1
80002838:	10 1a       	sub	r10,r8
8000283a:	12 1a       	sub	r10,r9
8000283c:	5c 7a       	castu.h	r10
8000283e:	8f 5a       	st.w	r7[0x14],r10
	    	svpwm_options->PWM2 = (unsigned short int) (T + dx/2 + dy/2) ; break ;
80002840:	40 39       	lddsp	r9,sp[0xc]
80002842:	40 0a       	lddsp	r10,sp[0x0]
80002844:	a1 99       	lsr	r9,0x1
80002846:	40 28       	lddsp	r8,sp[0x8]
80002848:	a1 98       	lsr	r8,0x1
8000284a:	10 09       	add	r9,r8
8000284c:	14 09       	add	r9,r10
8000284e:	5c 79       	castu.h	r9
80002850:	8f 69       	st.w	r7[0x18],r9
	    	svpwm_options->PWM2 = (unsigned short int) (T) ; break ;
	
	    }		
	}

}
80002852:	2f cd       	sub	sp,-16
80002854:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
	     case HS_010 :
	    	svpwm_options->PWM0 = (unsigned short int) (T - dx/2 - dy/2) ;
	    	svpwm_options->PWM1 = (unsigned short int) (T + dx/2 + dy/2) ;
	    	svpwm_options->PWM2 = (unsigned short int) (T - dx/2 + dy/2) ; break ;
	     case HS_011 :
	    	svpwm_options->PWM0 = (unsigned short int) (T + dx/2 - dy/2) ;
80002858:	40 39       	lddsp	r9,sp[0xc]
8000285a:	40 0a       	lddsp	r10,sp[0x0]
8000285c:	a1 99       	lsr	r9,0x1
8000285e:	40 28       	lddsp	r8,sp[0x8]
80002860:	14 09       	add	r9,r10
80002862:	a1 98       	lsr	r8,0x1
80002864:	10 19       	sub	r9,r8
80002866:	5c 79       	castu.h	r9
80002868:	8f 49       	st.w	r7[0x10],r9
	    	svpwm_options->PWM1 = (unsigned short int) (T + dx/2 + dy/2) ;
8000286a:	40 3a       	lddsp	r10,sp[0xc]
8000286c:	40 09       	lddsp	r9,sp[0x0]
8000286e:	a1 9a       	lsr	r10,0x1
80002870:	40 28       	lddsp	r8,sp[0x8]
80002872:	a1 98       	lsr	r8,0x1
80002874:	10 0a       	add	r10,r8
80002876:	12 0a       	add	r10,r9
80002878:	5c 7a       	castu.h	r10
8000287a:	8f 5a       	st.w	r7[0x14],r10
	    	svpwm_options->PWM2 = (unsigned short int) (T - dx/2 - dy/2) ; break ;
8000287c:	40 0b       	lddsp	r11,sp[0x0]
8000287e:	40 38       	lddsp	r8,sp[0xc]
80002880:	40 29       	lddsp	r9,sp[0x8]
80002882:	a1 98       	lsr	r8,0x1
80002884:	a1 99       	lsr	r9,0x1
80002886:	10 1b       	sub	r11,r8
80002888:	12 1b       	sub	r11,r9
8000288a:	5c 7b       	castu.h	r11
8000288c:	8f 6b       	st.w	r7[0x18],r11
	    	svpwm_options->PWM2 = (unsigned short int) (T) ; break ;
	
	    }		
	}

}
8000288e:	2f cd       	sub	sp,-16
80002890:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
	     case HS_001 :
	    	svpwm_options->PWM0 = (unsigned short int) (T + dx/2 + dy/2) ;
	    	svpwm_options->PWM1 = (unsigned short int) (T - dx/2 + dy/2) ;
	    	svpwm_options->PWM2 = (unsigned short int) (T - dx/2 - dy/2) ; break ;
	     case HS_101 :
	    	svpwm_options->PWM0 = (unsigned short int) (T + dx/2 + dy/2) ;
80002894:	40 39       	lddsp	r9,sp[0xc]
80002896:	40 0a       	lddsp	r10,sp[0x0]
80002898:	a1 99       	lsr	r9,0x1
8000289a:	40 28       	lddsp	r8,sp[0x8]
8000289c:	a1 98       	lsr	r8,0x1
8000289e:	10 09       	add	r9,r8
800028a0:	14 09       	add	r9,r10
800028a2:	5c 79       	castu.h	r9
800028a4:	8f 49       	st.w	r7[0x10],r9
	    	svpwm_options->PWM1 = (unsigned short int) (T - dx/2 - dy/2) ;
800028a6:	40 0a       	lddsp	r10,sp[0x0]
800028a8:	40 38       	lddsp	r8,sp[0xc]
800028aa:	40 29       	lddsp	r9,sp[0x8]
800028ac:	a1 98       	lsr	r8,0x1
800028ae:	a1 99       	lsr	r9,0x1
800028b0:	10 1a       	sub	r10,r8
800028b2:	12 1a       	sub	r10,r9
800028b4:	5c 7a       	castu.h	r10
800028b6:	8f 5a       	st.w	r7[0x14],r10
	    	svpwm_options->PWM2 = (unsigned short int) (T + dx/2 - dy/2) ; break ;
800028b8:	40 39       	lddsp	r9,sp[0xc]
800028ba:	40 0a       	lddsp	r10,sp[0x0]
800028bc:	a1 99       	lsr	r9,0x1
800028be:	40 28       	lddsp	r8,sp[0x8]
800028c0:	14 09       	add	r9,r10
800028c2:	a1 98       	lsr	r8,0x1
800028c4:	10 19       	sub	r9,r8
800028c6:	5c 79       	castu.h	r9
800028c8:	8f 69       	st.w	r7[0x18],r9
	    	svpwm_options->PWM2 = (unsigned short int) (T) ; break ;
	
	    }		
	}

}
800028ca:	2f cd       	sub	sp,-16
800028cc:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

800028d0 <dip204_write_string>:
  dip204_unselect();
}


void dip204_write_string(const char *string)
{
800028d0:	d4 31       	pushm	r0-r7,lr
800028d2:	20 1d       	sub	sp,4
/*! \brief function to select the LCD
 *
 */
static void dip204_select(void)
{
  spi_selectChip(DIP204_SPI, DIP204_SPI_NPCS);
800028d4:	30 06       	mov	r6,0
  dip204_unselect();
}


void dip204_write_string(const char *string)
{
800028d6:	18 95       	mov	r5,r12
/*! \brief function to select the LCD
 *
 */
static void dip204_select(void)
{
  spi_selectChip(DIP204_SPI, DIP204_SPI_NPCS);
800028d8:	30 2b       	mov	r11,2
800028da:	fe 7c 28 00 	mov	r12,-55296
800028de:	4b a4       	lddpc	r4,800029c4 <dip204_write_string+0xf4>
800028e0:	e0 a0 0a 36 	rcall	80003d4c <spi_selectChip>
{
  unsigned char i=0;

  dip204_select();
  /* for all chars in string */
  while(string[i]!=0)
800028e4:	0c 93       	mov	r3,r6
    case DIP204_READ_DATA:
    case DIP204_WRITE_DATA:
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
800028e6:	08 92       	mov	r2,r4
 */
static void dip204_write_byte(unsigned char byte)
{
  unsigned char reverse;

  switch (byte)
800028e8:	30 61       	mov	r1,6
 *  \param  byte  Input. byte read from the LCD (D7 .. D0)
 *
 */
static void dip204_read_byte(unsigned char *byte)
{
  unsigned short reverse = 0x00;
800028ea:	0c 90       	mov	r0,r6
{
  unsigned char i=0;

  dip204_select();
  /* for all chars in string */
  while(string[i]!=0)
800028ec:	ea 06 00 07 	add	r7,r5,r6
800028f0:	0f 88       	ld.ub	r8,r7[0x0]
800028f2:	e6 08 18 00 	cp.b	r8,r3
800028f6:	c2 b0       	breq	8000294c <dip204_write_string+0x7c>
    case DIP204_READ_DATA:
    case DIP204_WRITE_DATA:
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
800028f8:	e0 6b 00 fa 	mov	r11,250
800028fc:	fe 7c 28 00 	mov	r12,-55296
80002900:	e0 a0 0a c7 	rcall	80003e8e <spi_write>
80002904:	89 0c       	st.w	r4[0x0],r12
#endif
      spi_write(DIP204_SPI, byte);
      Assert( SPI_OK==spi_status );
80002906:	c0 20       	breq	8000290a <dip204_write_string+0x3a>
80002908:	c0 08       	rjmp	80002908 <dip204_write_string+0x38>
  while(string[i]!=0)
  {
    /* Send Write Data Start Byte */
    dip204_write_byte(DIP204_WRITE_DATA);
    /* Send byte */
    dip204_write_byte(string[i]);
8000290a:	0f 8b       	ld.ub	r11,r7[0x0]
 */
static void dip204_write_byte(unsigned char byte)
{
  unsigned char reverse;

  switch (byte)
8000290c:	f6 c9 ff f8 	sub	r9,r11,-8
80002910:	e2 09 18 00 	cp.b	r9,r1
80002914:	e0 88 00 0f 	brls	80002932 <dip204_write_string+0x62>
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002918:	5c 9b       	brev	r11
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
8000291a:	fe 7c 28 00 	mov	r12,-55296
8000291e:	f6 07 16 18 	lsr	r7,r11,0x18
80002922:	0e 9b       	mov	r11,r7
80002924:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002928:	e0 a0 0a b3 	rcall	80003e8e <spi_write>
8000292c:	89 0c       	st.w	r4[0x0],r12
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
      Assert( SPI_OK==spi_status );
8000292e:	c1 90       	breq	80002960 <dip204_write_string+0x90>
80002930:	c0 08       	rjmp	80002930 <dip204_write_string+0x60>
 */
static void dip204_write_byte(unsigned char byte)
{
  unsigned char reverse;

  switch (byte)
80002932:	30 18       	mov	r8,1
80002934:	f0 09 09 48 	lsl	r8,r8,r9
80002938:	e2 18 00 55 	andl	r8,0x55,COH
8000293c:	ce e0       	breq	80002918 <dip204_write_string+0x48>
    case DIP204_READ_DATA:
    case DIP204_WRITE_DATA:
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
8000293e:	fe 7c 28 00 	mov	r12,-55296
80002942:	e0 a0 0a a6 	rcall	80003e8e <spi_write>
80002946:	85 0c       	st.w	r2[0x0],r12
#endif
      spi_write(DIP204_SPI, byte);
      Assert( SPI_OK==spi_status );
80002948:	c1 60       	breq	80002974 <dip204_write_string+0xa4>
8000294a:	c0 08       	rjmp	8000294a <dip204_write_string+0x7a>
 *
 */
static void dip204_unselect(void)
{
#ifdef _ASSERT_ENABLE_
  spi_status =
8000294c:	30 2b       	mov	r11,2
8000294e:	fe 7c 28 00 	mov	r12,-55296
80002952:	e0 a0 0a 28 	rcall	80003da2 <spi_unselectChip>
80002956:	89 0c       	st.w	r4[0x0],r12
#endif
  spi_unselectChip(DIP204_SPI, DIP204_SPI_NPCS);
  Assert( SPI_OK==spi_status );
80002958:	c0 20       	breq	8000295c <dip204_write_string+0x8c>
8000295a:	c0 08       	rjmp	8000295a <dip204_write_string+0x8a>
    /* go to next char */
    i++;
    dip204_wait_busy();
  }
  dip204_unselect();
}
8000295c:	2f fd       	sub	sp,-4
8000295e:	d8 32       	popm	r0-r7,pc
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
      Assert( SPI_OK==spi_status );
      /* send D4 to D7 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002960:	ee 0b 15 04 	lsl	r11,r7,0x4
80002964:	fe 7c 28 00 	mov	r12,-55296
80002968:	e2 1b 00 f0 	andl	r11,0xf0,COH
8000296c:	e0 a0 0a 91 	rcall	80003e8e <spi_write>
80002970:	85 0c       	st.w	r2[0x0],r12
#endif
      spi_write(DIP204_SPI, ((reverse << 4) & 0xF0));
      Assert( SPI_OK==spi_status );
80002972:	c1 51       	brne	8000299c <dip204_write_string+0xcc>
    case DIP204_READ_DATA:
    case DIP204_WRITE_DATA:
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002974:	e0 6b 00 fc 	mov	r11,252
80002978:	fe 7c 28 00 	mov	r12,-55296
8000297c:	e0 a0 0a 89 	rcall	80003e8e <spi_write>
80002980:	89 0c       	st.w	r4[0x0],r12
#endif
      spi_write(DIP204_SPI, byte);
      Assert( SPI_OK==spi_status );
80002982:	c0 20       	breq	80002986 <dip204_write_string+0xb6>
80002984:	c0 08       	rjmp	80002984 <dip204_write_string+0xb4>
80002986:	fa c7 ff fe 	sub	r7,sp,-2
 *  \param  byte  Input. byte read from the LCD (D7 .. D0)
 *
 */
static void dip204_read_byte(unsigned char *byte)
{
  unsigned short reverse = 0x00;
8000298a:	ba 10       	st.h	sp[0x2],r0

  /* dummy write */
#ifdef _ASSERT_ENABLE_
  spi_status =
8000298c:	30 0b       	mov	r11,0
8000298e:	fe 7c 28 00 	mov	r12,-55296
80002992:	e0 a0 0a 7e 	rcall	80003e8e <spi_write>
80002996:	89 0c       	st.w	r4[0x0],r12
#endif
  spi_write(DIP204_SPI, 0x00);
  Assert( SPI_OK==spi_status );
80002998:	c0 30       	breq	8000299e <dip204_write_string+0xce>
8000299a:	c0 08       	rjmp	8000299a <dip204_write_string+0xca>
8000299c:	c0 08       	rjmp	8000299c <dip204_write_string+0xcc>
  /* read RSR register */
#ifdef _ASSERT_ENABLE_
  spi_status =
8000299e:	0e 9b       	mov	r11,r7
800029a0:	fe 7c 28 00 	mov	r12,-55296
800029a4:	e0 a0 0a 82 	rcall	80003ea8 <spi_read>
800029a8:	85 0c       	st.w	r2[0x0],r12
#endif
  spi_read(DIP204_SPI, &reverse);
  Assert( SPI_OK==spi_status );
800029aa:	c0 20       	breq	800029ae <dip204_write_string+0xde>
800029ac:	c0 08       	rjmp	800029ac <dip204_write_string+0xdc>
  /* Revert received byte (issued LSB first by the LCD) */
  *byte = bit_reverse8(reverse);
800029ae:	1b b8       	ld.ub	r8,sp[0x3]
800029b0:	5c 98       	brev	r8
  dip204_write_byte(DIP204_READ_COMMAND);
  /* read next byte */
  do {
  dip204_read_byte(&status);
  /* keep D7 to know status */
  }while (status & 0x80);
800029b2:	b9 88       	lsr	r8,0x18
800029b4:	e6 08 18 00 	cp.b	r8,r3
800029b8:	ce 95       	brlt	8000298a <dip204_write_string+0xba>
    /* Send Write Data Start Byte */
    dip204_write_byte(DIP204_WRITE_DATA);
    /* Send byte */
    dip204_write_byte(string[i]);
    /* go to next char */
    i++;
800029ba:	ec c8 ff ff 	sub	r8,r6,-1
800029be:	ed d8 c0 08 	bfextu	r6,r8,0x0,0x8
800029c2:	c9 5b       	rjmp	800028ec <dip204_write_string+0x1c>
800029c4:	00 00       	add	r0,r0
800029c6:	05 78       	ld.ub	r8,--r2

800029c8 <dip204_init>:


/****************************** global functions *****************************/

void dip204_init(backlight_options option, Bool backlight_on)
{
800029c8:	eb cd 40 f8 	pushm	r3-r7,lr
800029cc:	20 5d       	sub	sp,20
800029ce:	18 97       	mov	r7,r12
800029d0:	16 96       	mov	r6,r11
  pwm_opt_t pwm_opt;  // pwm option config

  if (option == backlight_PWM)
800029d2:	58 1c       	cp.w	r12,1
800029d4:	c2 b0       	breq	80002a2a <dip204_init+0x62>
    // start PWM
    pwm_start_channels(1 << channel_id);
  }
  else
  {
    if (backlight_on)
800029d6:	58 0b       	cp.w	r11,0
800029d8:	c2 51       	brne	80002a22 <dip204_init+0x5a>
    {
      gpio_clr_gpio_pin(DIP204_BACKLIGHT_PIN);
    }
    else
    {
      gpio_set_gpio_pin(DIP204_BACKLIGHT_PIN);
800029da:	33 2c       	mov	r12,50
800029dc:	e0 a0 07 68 	rcall	800038ac <gpio_set_gpio_pin>
    }
  }
  // delay for power on
  delay_ms(20);
800029e0:	31 4c       	mov	r12,20
800029e2:	fe b0 fb 8d 	rcall	800020fc <delay_ms>
/*! \brief function to select the LCD
 *
 */
static void dip204_select(void)
{
  spi_selectChip(DIP204_SPI, DIP204_SPI_NPCS);
800029e6:	30 2b       	mov	r11,2
800029e8:	fe 7c 28 00 	mov	r12,-55296
800029ec:	e0 a0 09 b0 	rcall	80003d4c <spi_selectChip>
    case DIP204_READ_DATA:
    case DIP204_WRITE_DATA:
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
800029f0:	e0 6b 00 f8 	mov	r11,248
800029f4:	fe 7c 28 00 	mov	r12,-55296
800029f8:	fe f5 02 3c 	ld.w	r5,pc[572]
800029fc:	e0 a0 0a 49 	rcall	80003e8e <spi_write>
80002a00:	8b 0c       	st.w	r5[0x0],r12
#endif
      spi_write(DIP204_SPI, byte);
      Assert( SPI_OK==spi_status );
80002a02:	c0 20       	breq	80002a06 <dip204_init+0x3e>
80002a04:	c0 08       	rjmp	80002a04 <dip204_init+0x3c>
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002a06:	33 48       	mov	r8,52
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002a08:	fe 7c 28 00 	mov	r12,-55296
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002a0c:	5c 98       	brev	r8
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002a0e:	f0 07 16 18 	lsr	r7,r8,0x18
80002a12:	0e 9b       	mov	r11,r7
80002a14:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002a18:	e0 a0 0a 3b 	rcall	80003e8e <spi_write>
80002a1c:	8b 0c       	st.w	r5[0x0],r12
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
      Assert( SPI_OK==spi_status );
80002a1e:	c3 b0       	breq	80002a94 <dip204_init+0xcc>
80002a20:	c0 08       	rjmp	80002a20 <dip204_init+0x58>
  }
  else
  {
    if (backlight_on)
    {
      gpio_clr_gpio_pin(DIP204_BACKLIGHT_PIN);
80002a22:	33 2c       	mov	r12,50
80002a24:	e0 a0 07 51 	rcall	800038c6 <gpio_clr_gpio_pin>
80002a28:	cd cb       	rjmp	800029e0 <dip204_init+0x18>
{
  pwm_opt_t pwm_opt;  // pwm option config

  if (option == backlight_PWM)
  {
    channel_id = DIP204_PWM_CHANNEL;
80002a2a:	30 68       	mov	r8,6
80002a2c:	fe f5 02 0c 	ld.w	r5,pc[524]
    gpio_enable_module_pin(AVR32_PWM_6_PIN, AVR32_PWM_6_FUNCTION);
80002a30:	30 2b       	mov	r11,2
{
  pwm_opt_t pwm_opt;  // pwm option config

  if (option == backlight_PWM)
  {
    channel_id = DIP204_PWM_CHANNEL;
80002a32:	8b 08       	st.w	r5[0x0],r8
    gpio_enable_module_pin(AVR32_PWM_6_PIN, AVR32_PWM_6_FUNCTION);
80002a34:	33 2c       	mov	r12,50
80002a36:	e0 a0 06 fd 	rcall	80003830 <gpio_enable_module_pin>

    // PWM controller configuration
    pwm_opt.diva=0;
80002a3a:	30 08       	mov	r8,0
    pwm_opt.divb=0;
    pwm_opt.prea=0;
    pwm_opt.preb=0;

    pwm_init(&pwm_opt);
80002a3c:	1a 9c       	mov	r12,sp

    // PWM controller configuration
    pwm_opt.diva=0;
    pwm_opt.divb=0;
    pwm_opt.prea=0;
    pwm_opt.preb=0;
80002a3e:	50 28       	stdsp	sp[0x8],r8
  {
    channel_id = DIP204_PWM_CHANNEL;
    gpio_enable_module_pin(AVR32_PWM_6_PIN, AVR32_PWM_6_FUNCTION);

    // PWM controller configuration
    pwm_opt.diva=0;
80002a40:	50 18       	stdsp	sp[0x4],r8
    pwm_opt.divb=0;
80002a42:	50 08       	stdsp	sp[0x0],r8
    pwm_opt.prea=0;
80002a44:	50 38       	stdsp	sp[0xc],r8
    pwm_opt.preb=0;

    pwm_init(&pwm_opt);
80002a46:	e0 a0 09 24 	rcall	80003c8e <pwm_init>
    pwm_duty = (backlight_on) ? DIP204_PERIOD_MAX - 1 : 1;
80002a4a:	4f d9       	lddpc	r9,80002c3c <dip204_init+0x274>
80002a4c:	58 06       	cp.w	r6,0
80002a4e:	ee 0a 17 00 	moveq	r10,r7
80002a52:	f4 08 17 00 	moveq	r8,r10
80002a56:	f9 ba 01 31 	movne	r10,49
80002a5a:	f4 08 17 10 	movne	r8,r10
80002a5e:	fe fc 01 e2 	ld.w	r12,pc[482]
    pwm_channel.CMR.calg = PWM_MODE_LEFT_ALIGNED;   // channel mode
    pwm_channel.CMR.cpol = PWM_POLARITY_LOW;   // channel polarity
    pwm_channel.CMR.cpd = PWM_UPDATE_PERIOD;   // not used the first time
    pwm_channel.CMR.cpre = AVR32_PWM_CPRE_MCK_DIV_256;   // channel prescaler
    pwm_channel.cdty = pwm_duty;  // channel duty cycle, should be < CPRD
80002a62:	99 18       	st.w	r12[0x4],r8
    pwm_opt.prea=0;
    pwm_opt.preb=0;

    pwm_init(&pwm_opt);
    pwm_duty = (backlight_on) ? DIP204_PERIOD_MAX - 1 : 1;
    pwm_channel.CMR.calg = PWM_MODE_LEFT_ALIGNED;   // channel mode
80002a64:	78 08       	ld.w	r8,r12[0x0]
    pwm_opt.divb=0;
    pwm_opt.prea=0;
    pwm_opt.preb=0;

    pwm_init(&pwm_opt);
    pwm_duty = (backlight_on) ? DIP204_PERIOD_MAX - 1 : 1;
80002a66:	b2 0a       	st.h	r9[0x0],r10
    pwm_channel.CMR.calg = PWM_MODE_LEFT_ALIGNED;   // channel mode
    pwm_channel.CMR.cpol = PWM_POLARITY_LOW;   // channel polarity
    pwm_channel.CMR.cpd = PWM_UPDATE_PERIOD;   // not used the first time
    pwm_channel.CMR.cpre = AVR32_PWM_CPRE_MCK_DIV_256;   // channel prescaler
80002a68:	30 89       	mov	r9,8
    pwm_opt.prea=0;
    pwm_opt.preb=0;

    pwm_init(&pwm_opt);
    pwm_duty = (backlight_on) ? DIP204_PERIOD_MAX - 1 : 1;
    pwm_channel.CMR.calg = PWM_MODE_LEFT_ALIGNED;   // channel mode
80002a6a:	30 0a       	mov	r10,0
    pwm_channel.CMR.cpol = PWM_POLARITY_LOW;   // channel polarity
    pwm_channel.CMR.cpd = PWM_UPDATE_PERIOD;   // not used the first time
80002a6c:	e0 18 fc ff 	andl	r8,0xfcff
    pwm_channel.CMR.cpre = AVR32_PWM_CPRE_MCK_DIV_256;   // channel prescaler
80002a70:	ab a8       	sbr	r8,0xa
80002a72:	f1 d9 d0 04 	bfins	r8,r9,0x0,0x4
    pwm_channel.cdty = pwm_duty;  // channel duty cycle, should be < CPRD
    pwm_channel.cprd = DIP204_PERIOD_MAX;  // channel period
80002a76:	33 29       	mov	r9,50
    pwm_channel.cupd = 0;  // channel update is not used here.

    pwm_channel_init(channel_id, &pwm_channel);
80002a78:	18 9b       	mov	r11,r12
    pwm_channel.CMR.cpol = PWM_POLARITY_LOW;   // channel polarity
    pwm_channel.CMR.cpd = PWM_UPDATE_PERIOD;   // not used the first time
    pwm_channel.CMR.cpre = AVR32_PWM_CPRE_MCK_DIV_256;   // channel prescaler
    pwm_channel.cdty = pwm_duty;  // channel duty cycle, should be < CPRD
    pwm_channel.cprd = DIP204_PERIOD_MAX;  // channel period
    pwm_channel.cupd = 0;  // channel update is not used here.
80002a7a:	99 4a       	st.w	r12[0x10],r10
    pwm_init(&pwm_opt);
    pwm_duty = (backlight_on) ? DIP204_PERIOD_MAX - 1 : 1;
    pwm_channel.CMR.calg = PWM_MODE_LEFT_ALIGNED;   // channel mode
    pwm_channel.CMR.cpol = PWM_POLARITY_LOW;   // channel polarity
    pwm_channel.CMR.cpd = PWM_UPDATE_PERIOD;   // not used the first time
    pwm_channel.CMR.cpre = AVR32_PWM_CPRE_MCK_DIV_256;   // channel prescaler
80002a7c:	99 08       	st.w	r12[0x0],r8
    pwm_channel.cdty = pwm_duty;  // channel duty cycle, should be < CPRD
    pwm_channel.cprd = DIP204_PERIOD_MAX;  // channel period
80002a7e:	99 29       	st.w	r12[0x8],r9
    pwm_channel.cupd = 0;  // channel update is not used here.

    pwm_channel_init(channel_id, &pwm_channel);
80002a80:	6a 0c       	ld.w	r12,r5[0x0]
80002a82:	e0 a0 08 eb 	rcall	80003c58 <pwm_channel_init>
    // start PWM
    pwm_start_channels(1 << channel_id);
80002a86:	6a 08       	ld.w	r8,r5[0x0]

    pwm_init(&pwm_opt);
    pwm_duty = (backlight_on) ? DIP204_PERIOD_MAX - 1 : 1;
    pwm_channel.CMR.calg = PWM_MODE_LEFT_ALIGNED;   // channel mode
    pwm_channel.CMR.cpol = PWM_POLARITY_LOW;   // channel polarity
    pwm_channel.CMR.cpd = PWM_UPDATE_PERIOD;   // not used the first time
80002a88:	30 1c       	mov	r12,1
    pwm_channel.cprd = DIP204_PERIOD_MAX;  // channel period
    pwm_channel.cupd = 0;  // channel update is not used here.

    pwm_channel_init(channel_id, &pwm_channel);
    // start PWM
    pwm_start_channels(1 << channel_id);
80002a8a:	f8 08 09 4c 	lsl	r12,r12,r8
80002a8e:	e0 a0 08 f7 	rcall	80003c7c <pwm_start_channels>
80002a92:	ca 7b       	rjmp	800029e0 <dip204_init+0x18>
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
      Assert( SPI_OK==spi_status );
      /* send D4 to D7 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002a94:	ee 0b 15 04 	lsl	r11,r7,0x4
80002a98:	fe 7c 28 00 	mov	r12,-55296
80002a9c:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002aa0:	e0 a0 09 f7 	rcall	80003e8e <spi_write>
80002aa4:	8b 0c       	st.w	r5[0x0],r12
#endif
      spi_write(DIP204_SPI, ((reverse << 4) & 0xF0));
      Assert( SPI_OK==spi_status );
80002aa6:	c0 20       	breq	80002aaa <dip204_init+0xe2>
80002aa8:	c0 08       	rjmp	80002aa8 <dip204_init+0xe0>
  // Send Command Start Byte
  dip204_write_byte(DIP204_WRITE_COMMAND);
  // Send "extended Function Set" Command  (RE=1)
  dip204_write_byte(0x34);
  // Wait for command execution
  delay_ms(1);
80002aaa:	30 1c       	mov	r12,1
80002aac:	fe b0 fb 28 	rcall	800020fc <delay_ms>
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002ab0:	fe 7c 28 00 	mov	r12,-55296
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002ab4:	30 98       	mov	r8,9
80002ab6:	5c 98       	brev	r8
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002ab8:	f0 07 16 18 	lsr	r7,r8,0x18
80002abc:	0e 9b       	mov	r11,r7
80002abe:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002ac2:	e0 a0 09 e6 	rcall	80003e8e <spi_write>
80002ac6:	8b 0c       	st.w	r5[0x0],r12
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
      Assert( SPI_OK==spi_status );
80002ac8:	c0 20       	breq	80002acc <dip204_init+0x104>
80002aca:	c0 08       	rjmp	80002aca <dip204_init+0x102>
      /* send D4 to D7 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002acc:	ee 0b 15 04 	lsl	r11,r7,0x4
80002ad0:	fe 7c 28 00 	mov	r12,-55296
80002ad4:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002ad8:	e0 a0 09 db 	rcall	80003e8e <spi_write>
80002adc:	8b 0c       	st.w	r5[0x0],r12
#endif
      spi_write(DIP204_SPI, ((reverse << 4) & 0xF0));
      Assert( SPI_OK==spi_status );
80002ade:	c0 20       	breq	80002ae2 <dip204_init+0x11a>
80002ae0:	c0 08       	rjmp	80002ae0 <dip204_init+0x118>
  // Wait for command execution
  delay_ms(1);
  // Send "Enter 4-Line Mode" Command
  dip204_write_byte(0x09);
  // Wait for command execution
  delay_ms(1);
80002ae2:	30 1c       	mov	r12,1
80002ae4:	fe b0 fb 0c 	rcall	800020fc <delay_ms>
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002ae8:	fe 7c 28 00 	mov	r12,-55296
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002aec:	33 08       	mov	r8,48
80002aee:	5c 98       	brev	r8
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002af0:	f0 07 16 18 	lsr	r7,r8,0x18
80002af4:	0e 9b       	mov	r11,r7
80002af6:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002afa:	e0 a0 09 ca 	rcall	80003e8e <spi_write>
80002afe:	8b 0c       	st.w	r5[0x0],r12
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
      Assert( SPI_OK==spi_status );
80002b00:	c0 20       	breq	80002b04 <dip204_init+0x13c>
80002b02:	c0 08       	rjmp	80002b02 <dip204_init+0x13a>
      /* send D4 to D7 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002b04:	ee 0b 15 04 	lsl	r11,r7,0x4
80002b08:	fe 7c 28 00 	mov	r12,-55296
80002b0c:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002b10:	e0 a0 09 bf 	rcall	80003e8e <spi_write>
80002b14:	8b 0c       	st.w	r5[0x0],r12
#endif
      spi_write(DIP204_SPI, ((reverse << 4) & 0xF0));
      Assert( SPI_OK==spi_status );
80002b16:	c0 20       	breq	80002b1a <dip204_init+0x152>
80002b18:	c0 08       	rjmp	80002b18 <dip204_init+0x150>
  // Wait for command execution
  delay_ms(1);
  // Send "Function Set" Command (RE=0)
  dip204_write_byte(0x30);
  // Wait for command execution
  delay_ms(1);
80002b1a:	30 1c       	mov	r12,1
80002b1c:	fe b0 fa f0 	rcall	800020fc <delay_ms>
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002b20:	fe 7c 28 00 	mov	r12,-55296
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002b24:	30 f8       	mov	r8,15
80002b26:	5c 98       	brev	r8
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002b28:	f0 07 16 18 	lsr	r7,r8,0x18
80002b2c:	0e 9b       	mov	r11,r7
80002b2e:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002b32:	e0 a0 09 ae 	rcall	80003e8e <spi_write>
80002b36:	8b 0c       	st.w	r5[0x0],r12
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
      Assert( SPI_OK==spi_status );
80002b38:	c0 20       	breq	80002b3c <dip204_init+0x174>
80002b3a:	c0 08       	rjmp	80002b3a <dip204_init+0x172>
      /* send D4 to D7 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002b3c:	ee 0b 15 04 	lsl	r11,r7,0x4
80002b40:	fe 7c 28 00 	mov	r12,-55296
80002b44:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002b48:	e0 a0 09 a3 	rcall	80003e8e <spi_write>
80002b4c:	8b 0c       	st.w	r5[0x0],r12
#endif
      spi_write(DIP204_SPI, ((reverse << 4) & 0xF0));
      Assert( SPI_OK==spi_status );
80002b4e:	c0 20       	breq	80002b52 <dip204_init+0x18a>
80002b50:	c0 08       	rjmp	80002b50 <dip204_init+0x188>
  // Wait for command execution
  delay_ms(1);
  // Send "Display On Command: Display On, Cursor On, Blink On"
  dip204_write_byte(0x0F);
  // Wait for command execution
  delay_ms(1);
80002b52:	30 1c       	mov	r12,1
80002b54:	fe b0 fa d4 	rcall	800020fc <delay_ms>
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002b58:	fe 7c 28 00 	mov	r12,-55296
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002b5c:	30 18       	mov	r8,1
80002b5e:	5c 98       	brev	r8
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002b60:	f0 07 16 18 	lsr	r7,r8,0x18
80002b64:	0e 9b       	mov	r11,r7
80002b66:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002b6a:	e0 a0 09 92 	rcall	80003e8e <spi_write>
80002b6e:	8b 0c       	st.w	r5[0x0],r12
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
      Assert( SPI_OK==spi_status );
80002b70:	c0 20       	breq	80002b74 <dip204_init+0x1ac>
80002b72:	c0 08       	rjmp	80002b72 <dip204_init+0x1aa>
      /* send D4 to D7 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002b74:	ee 0b 15 04 	lsl	r11,r7,0x4
80002b78:	fe 7c 28 00 	mov	r12,-55296
80002b7c:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002b80:	e0 a0 09 87 	rcall	80003e8e <spi_write>
80002b84:	8b 0c       	st.w	r5[0x0],r12
80002b86:	4a c6       	lddpc	r6,80002c34 <dip204_init+0x26c>
#endif
      spi_write(DIP204_SPI, ((reverse << 4) & 0xF0));
      Assert( SPI_OK==spi_status );
80002b88:	58 0c       	cp.w	r12,0
80002b8a:	c0 20       	breq	80002b8e <dip204_init+0x1c6>
80002b8c:	c0 08       	rjmp	80002b8c <dip204_init+0x1c4>
  // Wait for command execution
  delay_ms(1);
  // Send "Display Clear" Command
  dip204_write_byte(0x01);
  // Wait for command execution
  delay_ms(5);
80002b8e:	30 5c       	mov	r12,5
80002b90:	fe b0 fa b6 	rcall	800020fc <delay_ms>
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002b94:	fe 7c 28 00 	mov	r12,-55296
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002b98:	30 68       	mov	r8,6
80002b9a:	5c 98       	brev	r8
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002b9c:	f0 07 16 18 	lsr	r7,r8,0x18
80002ba0:	0e 9b       	mov	r11,r7
80002ba2:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002ba6:	e0 a0 09 74 	rcall	80003e8e <spi_write>
80002baa:	8d 0c       	st.w	r6[0x0],r12
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
      Assert( SPI_OK==spi_status );
80002bac:	c0 20       	breq	80002bb0 <dip204_init+0x1e8>
80002bae:	c0 08       	rjmp	80002bae <dip204_init+0x1e6>
      /* send D4 to D7 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002bb0:	ee 0b 15 04 	lsl	r11,r7,0x4
80002bb4:	fe 7c 28 00 	mov	r12,-55296
80002bb8:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002bbc:	e0 a0 09 69 	rcall	80003e8e <spi_write>
80002bc0:	8d 0c       	st.w	r6[0x0],r12
#endif
      spi_write(DIP204_SPI, ((reverse << 4) & 0xF0));
      Assert( SPI_OK==spi_status );
80002bc2:	c0 20       	breq	80002bc6 <dip204_init+0x1fe>
80002bc4:	c0 08       	rjmp	80002bc4 <dip204_init+0x1fc>
  // Wait for command execution
  delay_ms(5);
  // Send "Entry Mode Set Command: Increment Mode, Entire Shift off"
  dip204_write_byte(0x06);
  // Wait for command execution
  delay_ms(1);
80002bc6:	30 1c       	mov	r12,1
80002bc8:	fe b0 fa 9a 	rcall	800020fc <delay_ms>
    case DIP204_READ_DATA:
    case DIP204_WRITE_DATA:
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002bcc:	e0 6b 00 fc 	mov	r11,252
80002bd0:	fe 7c 28 00 	mov	r12,-55296
80002bd4:	e0 a0 09 5d 	rcall	80003e8e <spi_write>
80002bd8:	8d 0c       	st.w	r6[0x0],r12
#endif
      spi_write(DIP204_SPI, byte);
      Assert( SPI_OK==spi_status );
80002bda:	c0 20       	breq	80002bde <dip204_init+0x216>
80002bdc:	c0 08       	rjmp	80002bdc <dip204_init+0x214>
 *  \param  byte  Input. byte read from the LCD (D7 .. D0)
 *
 */
static void dip204_read_byte(unsigned char *byte)
{
  unsigned short reverse = 0x00;
80002bde:	18 94       	mov	r4,r12
80002be0:	fa c7 ff ee 	sub	r7,sp,-18
  dip204_write_byte(DIP204_READ_COMMAND);
  /* read next byte */
  do {
  dip204_read_byte(&status);
  /* keep D7 to know status */
  }while (status & 0x80);
80002be4:	18 93       	mov	r3,r12
 *  \param  byte  Input. byte read from the LCD (D7 .. D0)
 *
 */
static void dip204_read_byte(unsigned char *byte)
{
  unsigned short reverse = 0x00;
80002be6:	fb 54 00 12 	st.h	sp[18],r4

  /* dummy write */
#ifdef _ASSERT_ENABLE_
  spi_status =
80002bea:	30 0b       	mov	r11,0
80002bec:	fe 7c 28 00 	mov	r12,-55296
80002bf0:	e0 a0 09 4f 	rcall	80003e8e <spi_write>
80002bf4:	8b 0c       	st.w	r5[0x0],r12
#endif
  spi_write(DIP204_SPI, 0x00);
  Assert( SPI_OK==spi_status );
80002bf6:	c0 20       	breq	80002bfa <dip204_init+0x232>
80002bf8:	c0 08       	rjmp	80002bf8 <dip204_init+0x230>
  /* read RSR register */
#ifdef _ASSERT_ENABLE_
  spi_status =
80002bfa:	0e 9b       	mov	r11,r7
80002bfc:	fe 7c 28 00 	mov	r12,-55296
80002c00:	e0 a0 09 54 	rcall	80003ea8 <spi_read>
80002c04:	8d 0c       	st.w	r6[0x0],r12
#endif
  spi_read(DIP204_SPI, &reverse);
  Assert( SPI_OK==spi_status );
80002c06:	c0 20       	breq	80002c0a <dip204_init+0x242>
80002c08:	c0 08       	rjmp	80002c08 <dip204_init+0x240>
  /* Revert received byte (issued LSB first by the LCD) */
  *byte = bit_reverse8(reverse);
80002c0a:	fb 38 00 13 	ld.ub	r8,sp[19]
80002c0e:	5c 98       	brev	r8
  dip204_write_byte(DIP204_READ_COMMAND);
  /* read next byte */
  do {
  dip204_read_byte(&status);
  /* keep D7 to know status */
  }while (status & 0x80);
80002c10:	b9 88       	lsr	r8,0x18
80002c12:	e6 08 18 00 	cp.b	r8,r3
80002c16:	ce 85       	brlt	80002be6 <dip204_init+0x21e>
 *
 */
static void dip204_unselect(void)
{
#ifdef _ASSERT_ENABLE_
  spi_status =
80002c18:	30 2b       	mov	r11,2
80002c1a:	fe 7c 28 00 	mov	r12,-55296
80002c1e:	e0 a0 08 c2 	rcall	80003da2 <spi_unselectChip>
80002c22:	48 58       	lddpc	r8,80002c34 <dip204_init+0x26c>
80002c24:	91 0c       	st.w	r8[0x0],r12
#endif
  spi_unselectChip(DIP204_SPI, DIP204_SPI_NPCS);
  Assert( SPI_OK==spi_status );
80002c26:	58 0c       	cp.w	r12,0
80002c28:	c0 20       	breq	80002c2c <dip204_init+0x264>
80002c2a:	c0 08       	rjmp	80002c2a <dip204_init+0x262>
  // Wait for command execution
  delay_ms(1);
  dip204_wait_busy();
  // unselect chip
  dip204_unselect();
}
80002c2c:	2f bd       	sub	sp,-20
80002c2e:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80002c32:	d7 03       	nop
80002c34:	00 00       	add	r0,r0
80002c36:	05 78       	ld.ub	r8,--r2
80002c38:	00 00       	add	r0,r0
80002c3a:	00 28       	rsub	r8,r0
80002c3c:	00 00       	add	r0,r0
80002c3e:	05 9c       	ld.ub	r12,r2[0x1]
80002c40:	00 00       	add	r0,r0
80002c42:	05 7c       	ld.ub	r12,--r2

80002c44 <dip204_set_cursor_position>:
  dip204_set_cursor_position(column, line);
}


void dip204_set_cursor_position(unsigned char column, unsigned char line)
{
80002c44:	eb cd 40 f8 	pushm	r3-r7,lr
80002c48:	20 1d       	sub	sp,4
80002c4a:	18 97       	mov	r7,r12
80002c4c:	16 96       	mov	r6,r11
/*! \brief function to select the LCD
 *
 */
static void dip204_select(void)
{
  spi_selectChip(DIP204_SPI, DIP204_SPI_NPCS);
80002c4e:	fe 7c 28 00 	mov	r12,-55296
80002c52:	30 2b       	mov	r11,2
80002c54:	e0 a0 08 7c 	rcall	80003d4c <spi_selectChip>
void dip204_set_cursor_position(unsigned char column, unsigned char line)
{
  unsigned char address = 0;

  dip204_select();
  if ((column <= 20) && (line <= 4))
80002c58:	31 48       	mov	r8,20
80002c5a:	f0 07 18 00 	cp.b	r7,r8
80002c5e:	5f 8a       	srls	r10
80002c60:	30 48       	mov	r8,4
80002c62:	f0 06 18 00 	cp.b	r6,r8
80002c66:	5f 89       	srls	r9
80002c68:	12 6a       	and	r10,r9
80002c6a:	c3 40       	breq	80002cd2 <dip204_set_cursor_position+0x8e>
  {
    /* Calculate DDRAM address from line and row values */
    address = ( (line-1) * 32 ) + ( column-1 ) + 128;
80002c6c:	ee c9 ff 81 	sub	r9,r7,-127
80002c70:	ec c8 00 01 	sub	r8,r6,1
80002c74:	a5 78       	lsl	r8,0x5
80002c76:	10 09       	add	r9,r8
80002c78:	ef d9 c0 08 	bfextu	r7,r9,0x0,0x8
    case DIP204_READ_DATA:
    case DIP204_WRITE_DATA:
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002c7c:	e0 6b 00 f8 	mov	r11,248
80002c80:	fe 7c 28 00 	mov	r12,-55296
80002c84:	4b 46       	lddpc	r6,80002d54 <dip204_set_cursor_position+0x110>
80002c86:	e0 a0 09 04 	rcall	80003e8e <spi_write>
80002c8a:	8d 0c       	st.w	r6[0x0],r12
#endif
      spi_write(DIP204_SPI, byte);
      Assert( SPI_OK==spi_status );
80002c8c:	c0 20       	breq	80002c90 <dip204_set_cursor_position+0x4c>
80002c8e:	c0 08       	rjmp	80002c8e <dip204_set_cursor_position+0x4a>
 */
static void dip204_write_byte(unsigned char byte)
{
  unsigned char reverse;

  switch (byte)
80002c90:	ee c9 ff f8 	sub	r9,r7,-8
80002c94:	30 68       	mov	r8,6
80002c96:	f0 09 18 00 	cp.b	r9,r8
80002c9a:	e0 88 00 0e 	brls	80002cb6 <dip204_set_cursor_position+0x72>
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002c9e:	5c 97       	brev	r7
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002ca0:	fe 7c 28 00 	mov	r12,-55296
80002ca4:	b9 87       	lsr	r7,0x18
80002ca6:	0e 9b       	mov	r11,r7
80002ca8:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002cac:	e0 a0 08 f1 	rcall	80003e8e <spi_write>
80002cb0:	8d 0c       	st.w	r6[0x0],r12
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
      Assert( SPI_OK==spi_status );
80002cb2:	c1 20       	breq	80002cd6 <dip204_set_cursor_position+0x92>
80002cb4:	c0 08       	rjmp	80002cb4 <dip204_set_cursor_position+0x70>
 */
static void dip204_write_byte(unsigned char byte)
{
  unsigned char reverse;

  switch (byte)
80002cb6:	30 18       	mov	r8,1
80002cb8:	f0 09 09 48 	lsl	r8,r8,r9
80002cbc:	e2 18 00 55 	andl	r8,0x55,COH
80002cc0:	ce f0       	breq	80002c9e <dip204_set_cursor_position+0x5a>
    case DIP204_READ_DATA:
    case DIP204_WRITE_DATA:
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002cc2:	0e 9b       	mov	r11,r7
80002cc4:	fe 7c 28 00 	mov	r12,-55296
80002cc8:	e0 a0 08 e3 	rcall	80003e8e <spi_write>
80002ccc:	8d 0c       	st.w	r6[0x0],r12
#endif
      spi_write(DIP204_SPI, byte);
      Assert( SPI_OK==spi_status );
80002cce:	c1 10       	breq	80002cf0 <dip204_set_cursor_position+0xac>
80002cd0:	c0 08       	rjmp	80002cd0 <dip204_set_cursor_position+0x8c>
void dip204_set_cursor_position(unsigned char column, unsigned char line)
{
  unsigned char address = 0;

  dip204_select();
  if ((column <= 20) && (line <= 4))
80002cd2:	30 07       	mov	r7,0
80002cd4:	cd 4b       	rjmp	80002c7c <dip204_set_cursor_position+0x38>
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
      Assert( SPI_OK==spi_status );
      /* send D4 to D7 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002cd6:	ee 0b 15 04 	lsl	r11,r7,0x4
80002cda:	fe 7c 28 00 	mov	r12,-55296
80002cde:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002ce2:	e0 a0 08 d6 	rcall	80003e8e <spi_write>
80002ce6:	49 c8       	lddpc	r8,80002d54 <dip204_set_cursor_position+0x110>
80002ce8:	91 0c       	st.w	r8[0x0],r12
#endif
      spi_write(DIP204_SPI, ((reverse << 4) & 0xF0));
      Assert( SPI_OK==spi_status );
80002cea:	58 0c       	cp.w	r12,0
80002cec:	c0 20       	breq	80002cf0 <dip204_set_cursor_position+0xac>
80002cee:	c0 08       	rjmp	80002cee <dip204_set_cursor_position+0xaa>
    case DIP204_READ_DATA:
    case DIP204_WRITE_DATA:
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002cf0:	e0 6b 00 fc 	mov	r11,252
80002cf4:	fe 7c 28 00 	mov	r12,-55296
80002cf8:	e0 a0 08 cb 	rcall	80003e8e <spi_write>
80002cfc:	8d 0c       	st.w	r6[0x0],r12
#endif
      spi_write(DIP204_SPI, byte);
      Assert( SPI_OK==spi_status );
80002cfe:	c0 20       	breq	80002d02 <dip204_set_cursor_position+0xbe>
80002d00:	c0 08       	rjmp	80002d00 <dip204_set_cursor_position+0xbc>
 *  \param  byte  Input. byte read from the LCD (D7 .. D0)
 *
 */
static void dip204_read_byte(unsigned char *byte)
{
  unsigned short reverse = 0x00;
80002d02:	18 95       	mov	r5,r12
80002d04:	fa c7 ff fe 	sub	r7,sp,-2

  /* dummy write */
#ifdef _ASSERT_ENABLE_
  spi_status =
80002d08:	49 34       	lddpc	r4,80002d54 <dip204_set_cursor_position+0x110>
  dip204_write_byte(DIP204_READ_COMMAND);
  /* read next byte */
  do {
  dip204_read_byte(&status);
  /* keep D7 to know status */
  }while (status & 0x80);
80002d0a:	18 93       	mov	r3,r12
 *  \param  byte  Input. byte read from the LCD (D7 .. D0)
 *
 */
static void dip204_read_byte(unsigned char *byte)
{
  unsigned short reverse = 0x00;
80002d0c:	ba 15       	st.h	sp[0x2],r5

  /* dummy write */
#ifdef _ASSERT_ENABLE_
  spi_status =
80002d0e:	30 0b       	mov	r11,0
80002d10:	fe 7c 28 00 	mov	r12,-55296
80002d14:	e0 a0 08 bd 	rcall	80003e8e <spi_write>
80002d18:	8d 0c       	st.w	r6[0x0],r12
#endif
  spi_write(DIP204_SPI, 0x00);
  Assert( SPI_OK==spi_status );
80002d1a:	c0 20       	breq	80002d1e <dip204_set_cursor_position+0xda>
80002d1c:	c0 08       	rjmp	80002d1c <dip204_set_cursor_position+0xd8>
  /* read RSR register */
#ifdef _ASSERT_ENABLE_
  spi_status =
80002d1e:	0e 9b       	mov	r11,r7
80002d20:	fe 7c 28 00 	mov	r12,-55296
80002d24:	e0 a0 08 c2 	rcall	80003ea8 <spi_read>
80002d28:	89 0c       	st.w	r4[0x0],r12
#endif
  spi_read(DIP204_SPI, &reverse);
  Assert( SPI_OK==spi_status );
80002d2a:	c0 20       	breq	80002d2e <dip204_set_cursor_position+0xea>
80002d2c:	c0 08       	rjmp	80002d2c <dip204_set_cursor_position+0xe8>
  /* Revert received byte (issued LSB first by the LCD) */
  *byte = bit_reverse8(reverse);
80002d2e:	1b b8       	ld.ub	r8,sp[0x3]
80002d30:	5c 98       	brev	r8
  dip204_write_byte(DIP204_READ_COMMAND);
  /* read next byte */
  do {
  dip204_read_byte(&status);
  /* keep D7 to know status */
  }while (status & 0x80);
80002d32:	b9 88       	lsr	r8,0x18
80002d34:	e6 08 18 00 	cp.b	r8,r3
80002d38:	ce a5       	brlt	80002d0c <dip204_set_cursor_position+0xc8>
 *
 */
static void dip204_unselect(void)
{
#ifdef _ASSERT_ENABLE_
  spi_status =
80002d3a:	30 2b       	mov	r11,2
80002d3c:	fe 7c 28 00 	mov	r12,-55296
80002d40:	e0 a0 08 31 	rcall	80003da2 <spi_unselectChip>
80002d44:	48 48       	lddpc	r8,80002d54 <dip204_set_cursor_position+0x110>
80002d46:	91 0c       	st.w	r8[0x0],r12
#endif
  spi_unselectChip(DIP204_SPI, DIP204_SPI_NPCS);
  Assert( SPI_OK==spi_status );
80002d48:	58 0c       	cp.w	r12,0
80002d4a:	c0 20       	breq	80002d4e <dip204_set_cursor_position+0x10a>
80002d4c:	c0 08       	rjmp	80002d4c <dip204_set_cursor_position+0x108>
  dip204_write_byte(DIP204_WRITE_COMMAND);
  /* Send Adress lower Nibble */
  dip204_write_byte(address);
  dip204_wait_busy();
  dip204_unselect();
}
80002d4e:	2f fd       	sub	sp,-4
80002d50:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80002d54:	00 00       	add	r0,r0
80002d56:	05 78       	ld.ub	r8,--r2

80002d58 <dip204_hide_cursor>:
  dip204_unselect();
}


void dip204_hide_cursor(void)
{
80002d58:	eb cd 40 f8 	pushm	r3-r7,lr
80002d5c:	20 1d       	sub	sp,4
/*! \brief function to select the LCD
 *
 */
static void dip204_select(void)
{
  spi_selectChip(DIP204_SPI, DIP204_SPI_NPCS);
80002d5e:	30 2b       	mov	r11,2
80002d60:	fe 7c 28 00 	mov	r12,-55296
80002d64:	e0 a0 07 f4 	rcall	80003d4c <spi_selectChip>
    case DIP204_READ_DATA:
    case DIP204_WRITE_DATA:
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002d68:	e0 6b 00 f8 	mov	r11,248
80002d6c:	fe 7c 28 00 	mov	r12,-55296
80002d70:	4a 96       	lddpc	r6,80002e14 <dip204_hide_cursor+0xbc>
80002d72:	e0 a0 08 8e 	rcall	80003e8e <spi_write>
80002d76:	8d 0c       	st.w	r6[0x0],r12
#endif
      spi_write(DIP204_SPI, byte);
      Assert( SPI_OK==spi_status );
80002d78:	c0 20       	breq	80002d7c <dip204_hide_cursor+0x24>
80002d7a:	c0 08       	rjmp	80002d7a <dip204_hide_cursor+0x22>
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002d7c:	30 c8       	mov	r8,12
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002d7e:	fe 7c 28 00 	mov	r12,-55296
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002d82:	5c 98       	brev	r8
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002d84:	f0 07 16 18 	lsr	r7,r8,0x18
80002d88:	0e 9b       	mov	r11,r7
80002d8a:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002d8e:	e0 a0 08 80 	rcall	80003e8e <spi_write>
80002d92:	8d 0c       	st.w	r6[0x0],r12
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
      Assert( SPI_OK==spi_status );
80002d94:	c0 20       	breq	80002d98 <dip204_hide_cursor+0x40>
80002d96:	c0 08       	rjmp	80002d96 <dip204_hide_cursor+0x3e>
      /* send D4 to D7 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002d98:	ee 0b 15 04 	lsl	r11,r7,0x4
80002d9c:	fe 7c 28 00 	mov	r12,-55296
80002da0:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002da4:	e0 a0 08 75 	rcall	80003e8e <spi_write>
80002da8:	8d 0c       	st.w	r6[0x0],r12
#endif
      spi_write(DIP204_SPI, ((reverse << 4) & 0xF0));
      Assert( SPI_OK==spi_status );
80002daa:	c0 20       	breq	80002dae <dip204_hide_cursor+0x56>
80002dac:	c0 08       	rjmp	80002dac <dip204_hide_cursor+0x54>
    case DIP204_READ_DATA:
    case DIP204_WRITE_DATA:
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
80002dae:	e0 6b 00 fc 	mov	r11,252
80002db2:	fe 7c 28 00 	mov	r12,-55296
80002db6:	e0 a0 08 6c 	rcall	80003e8e <spi_write>
80002dba:	8d 0c       	st.w	r6[0x0],r12
#endif
      spi_write(DIP204_SPI, byte);
      Assert( SPI_OK==spi_status );
80002dbc:	c0 20       	breq	80002dc0 <dip204_hide_cursor+0x68>
80002dbe:	c0 08       	rjmp	80002dbe <dip204_hide_cursor+0x66>
 *  \param  byte  Input. byte read from the LCD (D7 .. D0)
 *
 */
static void dip204_read_byte(unsigned char *byte)
{
  unsigned short reverse = 0x00;
80002dc0:	18 95       	mov	r5,r12
80002dc2:	fa c7 ff fe 	sub	r7,sp,-2

  /* dummy write */
#ifdef _ASSERT_ENABLE_
  spi_status =
80002dc6:	0c 94       	mov	r4,r6
  dip204_write_byte(DIP204_READ_COMMAND);
  /* read next byte */
  do {
  dip204_read_byte(&status);
  /* keep D7 to know status */
  }while (status & 0x80);
80002dc8:	18 93       	mov	r3,r12
 *  \param  byte  Input. byte read from the LCD (D7 .. D0)
 *
 */
static void dip204_read_byte(unsigned char *byte)
{
  unsigned short reverse = 0x00;
80002dca:	ba 15       	st.h	sp[0x2],r5

  /* dummy write */
#ifdef _ASSERT_ENABLE_
  spi_status =
80002dcc:	30 0b       	mov	r11,0
80002dce:	fe 7c 28 00 	mov	r12,-55296
80002dd2:	e0 a0 08 5e 	rcall	80003e8e <spi_write>
80002dd6:	8d 0c       	st.w	r6[0x0],r12
#endif
  spi_write(DIP204_SPI, 0x00);
  Assert( SPI_OK==spi_status );
80002dd8:	c0 20       	breq	80002ddc <dip204_hide_cursor+0x84>
80002dda:	c0 08       	rjmp	80002dda <dip204_hide_cursor+0x82>
  /* read RSR register */
#ifdef _ASSERT_ENABLE_
  spi_status =
80002ddc:	0e 9b       	mov	r11,r7
80002dde:	fe 7c 28 00 	mov	r12,-55296
80002de2:	e0 a0 08 63 	rcall	80003ea8 <spi_read>
80002de6:	89 0c       	st.w	r4[0x0],r12
#endif
  spi_read(DIP204_SPI, &reverse);
  Assert( SPI_OK==spi_status );
80002de8:	c0 20       	breq	80002dec <dip204_hide_cursor+0x94>
80002dea:	c0 08       	rjmp	80002dea <dip204_hide_cursor+0x92>
  /* Revert received byte (issued LSB first by the LCD) */
  *byte = bit_reverse8(reverse);
80002dec:	1b b8       	ld.ub	r8,sp[0x3]
80002dee:	5c 98       	brev	r8
  dip204_write_byte(DIP204_READ_COMMAND);
  /* read next byte */
  do {
  dip204_read_byte(&status);
  /* keep D7 to know status */
  }while (status & 0x80);
80002df0:	b9 88       	lsr	r8,0x18
80002df2:	e6 08 18 00 	cp.b	r8,r3
80002df6:	ce a5       	brlt	80002dca <dip204_hide_cursor+0x72>
 *
 */
static void dip204_unselect(void)
{
#ifdef _ASSERT_ENABLE_
  spi_status =
80002df8:	30 2b       	mov	r11,2
80002dfa:	fe 7c 28 00 	mov	r12,-55296
80002dfe:	e0 a0 07 d2 	rcall	80003da2 <spi_unselectChip>
80002e02:	48 58       	lddpc	r8,80002e14 <dip204_hide_cursor+0xbc>
80002e04:	91 0c       	st.w	r8[0x0],r12
#endif
  spi_unselectChip(DIP204_SPI, DIP204_SPI_NPCS);
  Assert( SPI_OK==spi_status );
80002e06:	58 0c       	cp.w	r12,0
80002e08:	c0 20       	breq	80002e0c <dip204_hide_cursor+0xb4>
80002e0a:	c0 08       	rjmp	80002e0a <dip204_hide_cursor+0xb2>
  /* Send "Display On Command: Display On, Cursor On, Blink On" */
  dip204_write_byte(0x0C);
  dip204_wait_busy();
  /* unselect chip */
  dip204_unselect();
}
80002e0c:	2f fd       	sub	sp,-4
80002e0e:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80002e12:	d7 03       	nop
80002e14:	00 00       	add	r0,r0
80002e16:	05 78       	ld.ub	r8,--r2

80002e18 <sensor_task_init>:
   
   return i_current_val; 
}

void sensor_task_init(void)
{
80002e18:	eb cd 40 40 	pushm	r6,lr
80002e1c:	20 4d       	sub	sp,16
    .spck_delay   = 0,
    .trans_delay  = 0,
    .stay_act     = 1,
    .spi_mode     = 0,
    .modfdis      = 1
  };
80002e1e:	4a bc       	lddpc	r12,80002ec8 <sensor_task_init+0xb0>
80002e20:	f8 e8 00 08 	ld.d	r8,r12[8]
80002e24:	fa e9 00 08 	st.d	sp[8],r8
80002e28:	f8 ea 00 00 	ld.d	r10,r12[0]

  // Assign I/Os to SPI
  gpio_enable_module(DIP204_SPI_GPIO_MAP,
80002e2c:	4a 8c       	lddpc	r12,80002ecc <sensor_task_init+0xb4>
    .spck_delay   = 0,
    .trans_delay  = 0,
    .stay_act     = 1,
    .spi_mode     = 0,
    .modfdis      = 1
  };
80002e2e:	fa eb 00 00 	st.d	sp[0],r10

  // Assign I/Os to SPI
  gpio_enable_module(DIP204_SPI_GPIO_MAP,
80002e32:	30 4b       	mov	r11,4
80002e34:	e0 a0 05 a3 	rcall	8000397a <gpio_enable_module>
                    sizeof(DIP204_SPI_GPIO_MAP) / sizeof(DIP204_SPI_GPIO_MAP[0]));

  // Initialize as master
  spi_initMaster(DIP204_SPI, &spiOptions);
80002e38:	1a 9b       	mov	r11,sp
80002e3a:	fe 7c 28 00 	mov	r12,-55296
80002e3e:	e0 a0 07 4d 	rcall	80003cd8 <spi_initMaster>

  // Set selection mode: variable_ps, pcs_decode, delay
  spi_selectionMode(DIP204_SPI, 0, 0, 0);
80002e42:	30 09       	mov	r9,0
80002e44:	fe 7c 28 00 	mov	r12,-55296
80002e48:	12 9a       	mov	r10,r9
80002e4a:	12 9b       	mov	r11,r9
80002e4c:	e0 a0 07 66 	rcall	80003d18 <spi_selectionMode>

  // Enable SPI
  spi_enable(DIP204_SPI);
80002e50:	fe 7c 28 00 	mov	r12,-55296
80002e54:	e0 a0 08 1a 	rcall	80003e88 <spi_enable>

  // setup chip registers
  spi_setupChipReg(DIP204_SPI, &spiOptions, FOSC0);
80002e58:	e0 6a 1b 00 	mov	r10,6912
80002e5c:	ea 1a 00 b7 	orh	r10,0xb7
80002e60:	1a 9b       	mov	r11,sp
80002e62:	fe 7c 28 00 	mov	r12,-55296
80002e66:	e0 a0 07 b1 	rcall	80003dc8 <spi_setupChipReg>

  // Initialize the delay driver.
  delay_init(FCPU_HZ);
80002e6a:	e0 6c de 80 	mov	r12,56960
80002e6e:	ea 1c 02 80 	orh	r12,0x280
80002e72:	fe b0 f9 3f 	rcall	800020f0 <delay_init>

  // initialize LCD
  dip204_init(backlight_PWM, TRUE);
80002e76:	30 1b       	mov	r11,1
80002e78:	16 9c       	mov	r12,r11
80002e7a:	fe b0 fd a7 	rcall	800029c8 <dip204_init>

  // Display default message.
  dip204_set_cursor_position(1,1);
80002e7e:	30 1b       	mov	r11,1
80002e80:	16 9c       	mov	r12,r11
80002e82:	ce 1e       	rcall	80002c44 <dip204_set_cursor_position>
80002e84:	49 3c       	lddpc	r12,80002ed0 <sensor_task_init+0xb8>
  dip204_write_string("SVPWM with AVR32 UC3");
80002e86:	fe b0 fd 25 	rcall	800028d0 <dip204_write_string>
80002e8a:	30 2b       	mov	r11,2
  dip204_set_cursor_position(1,2);
80002e8c:	30 1c       	mov	r12,1
80002e8e:	cd be       	rcall	80002c44 <dip204_set_cursor_position>
80002e90:	49 1c       	lddpc	r12,80002ed4 <sensor_task_init+0xbc>
80002e92:	fe b0 fd 1f 	rcall	800028d0 <dip204_write_string>
  dip204_write_string("STATE:");
80002e96:	30 3b       	mov	r11,3
80002e98:	30 1c       	mov	r12,1
  dip204_set_cursor_position(1,3);
80002e9a:	cd 5e       	rcall	80002c44 <dip204_set_cursor_position>
80002e9c:	48 fc       	lddpc	r12,80002ed8 <sensor_task_init+0xc0>
80002e9e:	fe b0 fd 19 	rcall	800028d0 <dip204_write_string>
  dip204_write_string("SPEED:");
80002ea2:	30 4b       	mov	r11,4
80002ea4:	30 1c       	mov	r12,1
80002ea6:	cc fe       	rcall	80002c44 <dip204_set_cursor_position>
  dip204_set_cursor_position(1,4);
80002ea8:	48 dc       	lddpc	r12,80002edc <sensor_task_init+0xc4>
80002eaa:	fe b0 fd 13 	rcall	800028d0 <dip204_write_string>
80002eae:	c5 5f       	rcall	80002d58 <dip204_hide_cursor>
  dip204_write_string("DIR:");
80002eb0:	30 4b       	mov	r11,4
80002eb2:	48 cc       	lddpc	r12,80002ee0 <sensor_task_init+0xc8>
80002eb4:	e0 a0 05 50 	rcall	80003954 <gpio_enable_gpio>
  dip204_hide_cursor();
80002eb8:	1a 96       	mov	r6,sp
      {GPIO_JOYSTICK_UP,  0},
      {GPIO_JOYSTICK_DOWN,  0}
  };  
  
  /*set pins as input/output function*/
  gpio_enable_gpio(JOYSTICK_GPIO_MAP,
80002eba:	30 0b       	mov	r11,0
80002ebc:	31 6c       	mov	r12,22
80002ebe:	e0 a0 04 b9 	rcall	80003830 <gpio_enable_module_pin>
    .spck_delay   = 0,
    .trans_delay  = 0,
    .stay_act     = 1,
    .spi_mode     = 0,
    .modfdis      = 1
  };
80002ec2:	2f cd       	sub	sp,-16
  /*set pins as input/output function*/
  gpio_enable_gpio(JOYSTICK_GPIO_MAP,
                   sizeof(JOYSTICK_GPIO_MAP) / sizeof(JOYSTICK_GPIO_MAP[0]));
                   
    // Potentiometer Initialization
  gpio_enable_module_pin( ADC_POTENTIOMETER_PIN , ADC_POTENTIOMETER_FUNCTION );
80002ec4:	e3 cd 80 40 	ldm	sp++,r6,pc
80002ec8:	80 00       	ld.sh	r0,r0[0x0]
80002eca:	a4 a0       	st.b	r2[0x2],r0
}
80002ecc:	80 00       	ld.sh	r0,r0[0x0]
80002ece:	a4 24       	st.h	r2[0x4],r4
80002ed0:	80 00       	ld.sh	r0,r0[0x0]
80002ed2:	a4 2c       	st.h	r2[0x4],r12
80002ed4:	80 00       	ld.sh	r0,r0[0x0]
80002ed6:	a4 44       	st.h	r2[0x8],r4
80002ed8:	80 00       	ld.sh	r0,r0[0x0]
80002eda:	a4 4c       	st.h	r2[0x8],r12
80002edc:	80 00       	ld.sh	r0,r0[0x0]
80002ede:	a4 54       	st.h	r2[0xa],r4
80002ee0:	80 00       	ld.sh	r0,r0[0x0]
80002ee2:	a4 b0       	st.b	r2[0x3],r0

80002ee4 <sensor_task>:

void sensor_task(void)
{
80002ee4:	eb cd 40 c0 	pushm	r6-r7,lr
80002ee8:	20 4d       	sub	sp,16

static volatile avr32_adc_t * adc= (volatile avr32_adc_t *) &AVR32_ADC;

void sensor_joystick_handler(void) 
{
  if(gpio_get_pin_value(GPIO_JOYSTICK_UP)==0)
80002eea:	31 ac       	mov	r12,26
80002eec:	e0 a0 04 d5 	rcall	80003896 <gpio_get_pin_value>
80002ef0:	c7 51       	brne	80002fda <sensor_task+0xf6>
80002ef2:	4c f7       	lddpc	r7,8000302c <sensor_task+0x148>
  {
    sensor_Cmd = DV_JOYSTICK_JS_UP;
80002ef4:	30 18       	mov	r8,1
80002ef6:	8f 08       	st.w	r7[0x0],r8
80002ef8:	6e 08       	ld.w	r8,r7[0x0]
void sensor_task(void)
{
   char chaine[13];
    // Acknowledge new inputs
   sensor_joystick_handler();
    switch (sensor_Cmd)
80002efa:	58 28       	cp.w	r8,2
80002efc:	c7 90       	breq	80002fee <sensor_task+0x10a>
80002efe:	58 28       	cp.w	r8,2
80002f00:	e0 89 00 66 	brgt	80002fcc <sensor_task+0xe8>
80002f04:	58 18       	cp.w	r8,1
80002f06:	c0 21       	brne	80002f0a <sensor_task+0x26>
80002f08:	cb ec       	rcall	80003084 <mc_run>
80002f0a:	30 1b       	mov	r11,1
    {
       case DV_JOYSTICK_JS_UP:
          mci_run();
80002f0c:	fe 7c 3c 00 	mov	r12,-50176
int sensor_potentiometer_value(void)
{
   int i_current_val;
   
   /* enable channel for sensor */
   adc_enable( adc, ADC_POTENTIOMETER_CHANNEL );
80002f10:	e0 a0 04 57 	rcall	800037be <adc_enable>
80002f14:	fe 7c 3c 00 	mov	r12,-50176
80002f18:	e0 a0 04 4d 	rcall	800037b2 <adc_start>
   /* start conversion */
   adc_start( adc );
80002f1c:	30 1b       	mov	r11,1
80002f1e:	fe 7c 3c 00 	mov	r12,-50176
   /* get value for sensor */
   i_current_val = adc_get_value( adc, ADC_POTENTIOMETER_CHANNEL ) * 100 / ADC_MAX_VALUE;
80002f22:	e0 a0 04 5c 	rcall	800037da <adc_get_value>
80002f26:	30 1b       	mov	r11,1
80002f28:	18 96       	mov	r6,r12
80002f2a:	fe 7c 3c 00 	mov	r12,-50176
80002f2e:	e0 a0 04 6b 	rcall	80003804 <adc_disable>
   /* Disable channel for sensor */
   adc_disable( adc, ADC_POTENTIOMETER_CHANNEL );
80002f32:	ec 06 10 64 	mul	r6,r6,100
80002f36:	e0 69 10 05 	mov	r9,4101
          break;
       default:
          break;
    }
    // Get Potentiometer values
    mci_set_speed(sensor_potentiometer_value());
80002f3a:	ea 19 00 40 	orh	r9,0x40
80002f3e:	ec 09 06 48 	mulu.d	r8,r6,r9
80002f42:	12 16       	sub	r6,r9
80002f44:	a1 96       	lsr	r6,0x1
80002f46:	12 06       	add	r6,r9
80002f48:	f9 d6 c1 28 	bfextu	r12,r6,0x9,0x8
80002f4c:	c7 ec       	rcall	80003048 <mc_set_reference_speed>
80002f4e:	30 2b       	mov	r11,2
80002f50:	30 7c       	mov	r12,7
80002f52:	c7 9e       	rcall	80002c44 <dip204_set_cursor_position>
80002f54:	4b 7c       	lddpc	r12,80003030 <sensor_task+0x14c>

    // Display Motor State
    dip204_set_cursor_position(7,2);
80002f56:	fe b0 fc bd 	rcall	800028d0 <dip204_write_string>
80002f5a:	30 2b       	mov	r11,2
80002f5c:	30 7c       	mov	r12,7
    dip204_write_string("            ");
80002f5e:	c7 3e       	rcall	80002c44 <dip204_set_cursor_position>
80002f60:	c8 0c       	rcall	80003060 <mc_get_run_stop>
80002f62:	c4 c0       	breq	80002ffa <sensor_task+0x116>
    dip204_set_cursor_position(7,2);    
80002f64:	30 18       	mov	r8,1
80002f66:	f0 0c 18 00 	cp.b	r12,r8
80002f6a:	c0 41       	brne	80002f72 <sensor_task+0x8e>
    switch (mci_get_run_stop())
80002f6c:	4b 2c       	lddpc	r12,80003034 <sensor_task+0x150>
80002f6e:	fe b0 fc b1 	rcall	800028d0 <dip204_write_string>
80002f72:	30 3b       	mov	r11,3
80002f74:	30 7c       	mov	r12,7
80002f76:	c6 7e       	rcall	80002c44 <dip204_set_cursor_position>
80002f78:	4a ec       	lddpc	r12,80003030 <sensor_task+0x14c>
    {
      case 0:
        dip204_write_string("<<STOP>>");
        break;
      case 1:
        dip204_write_string("<<RUN>>");
80002f7a:	fe b0 fc ab 	rcall	800028d0 <dip204_write_string>
80002f7e:	30 3b       	mov	r11,3
        break;
     }
  
    // Speed Value
    dip204_set_cursor_position(7,3);
80002f80:	30 7c       	mov	r12,7
80002f82:	c6 1e       	rcall	80002c44 <dip204_set_cursor_position>
80002f84:	c8 8c       	rcall	80003094 <mc_get_motor_measured_speed>
80002f86:	4a db       	lddpc	r11,80003038 <sensor_task+0x154>
    dip204_write_string("            ");    
80002f88:	1a dc       	st.w	--sp,r12
80002f8a:	fa c6 ff fc 	sub	r6,sp,-4
    dip204_set_cursor_position(7,3);    
80002f8e:	0c 9c       	mov	r12,r6
80002f90:	e0 a0 10 d4 	rcall	80005138 <sprintf>
80002f94:	0c 9c       	mov	r12,r6
    sprintf(chaine,"%d",mci_get_measured_speed());
80002f96:	fe b0 fc 9d 	rcall	800028d0 <dip204_write_string>
80002f9a:	30 4b       	mov	r11,4
80002f9c:	30 7c       	mov	r12,7
80002f9e:	c5 3e       	rcall	80002c44 <dip204_set_cursor_position>
80002fa0:	4a 4c       	lddpc	r12,80003030 <sensor_task+0x14c>
80002fa2:	fe b0 fc 97 	rcall	800028d0 <dip204_write_string>
80002fa6:	30 4b       	mov	r11,4
    dip204_write_string(chaine);
80002fa8:	30 7c       	mov	r12,7
80002faa:	c4 de       	rcall	80002c44 <dip204_set_cursor_position>
80002fac:	c6 0c       	rcall	8000306c <mc_get_direction>
  
    // Current Direction Value
    dip204_set_cursor_position(7,4);
80002fae:	2f fd       	sub	sp,-4
80002fb0:	58 0c       	cp.w	r12,0
80002fb2:	c2 00       	breq	80002ff2 <sensor_task+0x10e>
80002fb4:	30 18       	mov	r8,1
    dip204_write_string("            ");
80002fb6:	f0 0c 18 00 	cp.b	r12,r8
80002fba:	c0 41       	brne	80002fc2 <sensor_task+0xde>
    dip204_set_cursor_position(7,4);    
80002fbc:	4a 0c       	lddpc	r12,8000303c <sensor_task+0x158>
80002fbe:	fe b0 fc 89 	rcall	800028d0 <dip204_write_string>
80002fc2:	30 08       	mov	r8,0
    switch (mci_get_direction())
80002fc4:	8f 08       	st.w	r7[0x0],r8
80002fc6:	2f cd       	sub	sp,-16
80002fc8:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002fcc:	58 38       	cp.w	r8,3
80002fce:	c1 a0       	breq	80003002 <sensor_task+0x11e>
80002fd0:	58 48       	cp.w	r8,4
80002fd2:	c9 c1       	brne	80002f0a <sensor_task+0x26>
80002fd4:	c5 0c       	rcall	80003074 <mc_stop>
    {
      case 0:
        dip204_write_string("<<FORWARD>>");
        break;
      case 1:
        dip204_write_string("<<BACKWARD>>");
80002fd6:	c7 fc       	rcall	800030d4 <mc_backward>
80002fd8:	c9 9b       	rjmp	80002f0a <sensor_task+0x26>
80002fda:	31 bc       	mov	r12,27
        break;
     }  
     
     sensor_Cmd = DV_JOYSTICK_JS_NONE;
80002fdc:	e0 a0 04 5d 	rcall	80003896 <gpio_get_pin_value>
}
80002fe0:	c1 41       	brne	80003008 <sensor_task+0x124>
80002fe2:	49 37       	lddpc	r7,8000302c <sensor_task+0x148>
80002fe4:	30 28       	mov	r8,2
void sensor_task(void)
{
   char chaine[13];
    // Acknowledge new inputs
   sensor_joystick_handler();
    switch (sensor_Cmd)
80002fe6:	8f 08       	st.w	r7[0x0],r8
80002fe8:	6e 08       	ld.w	r8,r7[0x0]
80002fea:	58 28       	cp.w	r8,2
80002fec:	c8 91       	brne	80002efe <sensor_task+0x1a>
       case DV_JOYSTICK_JS_LEFT:
          mci_stop();
          mci_forward();
          break;
       case DV_JOYSTICK_JS_RIGHT:
          mci_stop();
80002fee:	c4 3c       	rcall	80003074 <mc_stop>
80002ff0:	c8 db       	rjmp	80002f0a <sensor_task+0x26>
          mci_backward();
80002ff2:	49 4c       	lddpc	r12,80003040 <sensor_task+0x15c>
80002ff4:	fe b0 fc 6e 	rcall	800028d0 <dip204_write_string>
  {
    sensor_Cmd = DV_JOYSTICK_JS_UP;
  }
  else
  {
    if(gpio_get_pin_value(GPIO_JOYSTICK_DOWN)==0)
80002ff8:	ce 5b       	rjmp	80002fc2 <sensor_task+0xde>
80002ffa:	49 3c       	lddpc	r12,80003044 <sensor_task+0x160>
80002ffc:	fe b0 fc 6a 	rcall	800028d0 <dip204_write_string>
    {
      sensor_Cmd = DV_JOYSTICK_JS_DOWN;
80003000:	cb 9b       	rjmp	80002f72 <sensor_task+0x8e>
80003002:	c3 9c       	rcall	80003074 <mc_stop>
80003004:	c5 ec       	rcall	800030c0 <mc_forward>
void sensor_task(void)
{
   char chaine[13];
    // Acknowledge new inputs
   sensor_joystick_handler();
    switch (sensor_Cmd)
80003006:	c8 2b       	rjmp	80002f0a <sensor_task+0x26>
80003008:	31 9c       	mov	r12,25
8000300a:	e0 a0 04 46 	rcall	80003896 <gpio_get_pin_value>
    {
       case DV_JOYSTICK_JS_UP:
          mci_run();
          break;
       case DV_JOYSTICK_JS_DOWN:
          mci_stop();
8000300e:	c0 51       	brne	80003018 <sensor_task+0x134>
80003010:	48 77       	lddpc	r7,8000302c <sensor_task+0x148>
80003012:	30 38       	mov	r8,3
    dip204_write_string("            ");
    dip204_set_cursor_position(7,4);    
    switch (mci_get_direction())
    {
      case 0:
        dip204_write_string("<<FORWARD>>");
80003014:	8f 08       	st.w	r7[0x0],r8
80003016:	c7 1b       	rjmp	80002ef8 <sensor_task+0x14>
80003018:	31 cc       	mov	r12,28
8000301a:	e0 a0 04 3e 	rcall	80003896 <gpio_get_pin_value>
    dip204_write_string("            ");
    dip204_set_cursor_position(7,2);    
    switch (mci_get_run_stop())
    {
      case 0:
        dip204_write_string("<<STOP>>");
8000301e:	c0 51       	brne	80003028 <sensor_task+0x144>
80003020:	48 37       	lddpc	r7,8000302c <sensor_task+0x148>
80003022:	30 48       	mov	r8,4
          break;
       case DV_JOYSTICK_JS_DOWN:
          mci_stop();
          break;
       case DV_JOYSTICK_JS_LEFT:
          mci_stop();
80003024:	8f 08       	st.w	r7[0x0],r8
80003026:	c6 9b       	rjmp	80002ef8 <sensor_task+0x14>
          mci_forward();
80003028:	48 17       	lddpc	r7,8000302c <sensor_task+0x148>
8000302a:	c6 7b       	rjmp	80002ef8 <sensor_task+0x14>
8000302c:	00 00       	add	r0,r0
    {
      sensor_Cmd = DV_JOYSTICK_JS_DOWN;
    }
    else
    {
        if(gpio_get_pin_value(GPIO_JOYSTICK_LEFT)==0)
8000302e:	05 a0       	ld.ub	r0,r2[0x2]
80003030:	80 00       	ld.sh	r0,r0[0x0]
80003032:	a4 5c       	st.h	r2[0xa],r12
80003034:	80 00       	ld.sh	r0,r0[0x0]
        {
            sensor_Cmd = DV_JOYSTICK_JS_LEFT;
80003036:	a4 78       	st.h	r2[0xe],r8
80003038:	80 00       	ld.sh	r0,r0[0x0]
8000303a:	a4 80       	st.b	r2[0x0],r0
8000303c:	80 00       	ld.sh	r0,r0[0x0]
        }
        else
        {
            if(gpio_get_pin_value(GPIO_JOYSTICK_RIGHT)==0)
8000303e:	a4 90       	st.b	r2[0x1],r0
80003040:	80 00       	ld.sh	r0,r0[0x0]
80003042:	a4 84       	st.b	r2[0x0],r4
80003044:	80 00       	ld.sh	r0,r0[0x0]
            {
              sensor_Cmd = DV_JOYSTICK_JS_RIGHT;
80003046:	a4 6c       	st.h	r2[0xc],r12

80003048 <mc_set_reference_speed>:
      return 0;
  }
}
void mc_set_reference_speed(U8 speed)
{
  speed_reference = speed;
80003048:	48 28       	lddpc	r8,80003050 <mc_set_reference_speed+0x8>
8000304a:	b0 8c       	st.b	r8[0x0],r12
}
8000304c:	5e fc       	retal	r12
8000304e:	d7 03       	nop
80003050:	00 00       	add	r0,r0
80003052:	00 2d       	rsub	sp,r0

80003054 <mc_set_speed_loop>:
  }
}

void mc_set_open_loop(){loop_type = OPEN_LOOP;}

void mc_set_speed_loop(){loop_type = SPEED_LOOP;}
80003054:	30 19       	mov	r9,1
80003056:	48 28       	lddpc	r8,8000305c <mc_set_speed_loop+0x8>
80003058:	b0 89       	st.b	r8[0x0],r9
8000305a:	5e fc       	retal	r12
8000305c:	00 00       	add	r0,r0
8000305e:	00 2c       	rsub	r12,r0

80003060 <mc_get_run_stop>:
{
  return (U8)(mc_get_motor_direction());
}
U8 mc_get_run_stop(void)
{
  return (U8)(motor_state);
80003060:	48 28       	lddpc	r8,80003068 <mc_get_run_stop+0x8>
80003062:	70 0c       	ld.w	r12,r8[0x0]
}
80003064:	5c 5c       	castu.b	r12
80003066:	5e fc       	retal	r12
80003068:	00 00       	add	r0,r0
8000306a:	05 ac       	ld.ub	r12,r2[0x2]

8000306c <mc_get_direction>:
  mc_set_motor_direction(MC_CCW);   
  mc_run();
}

U8 mc_get_direction(void) 
{
8000306c:	d4 01       	pushm	lr
  return (U8)(mc_get_motor_direction());
8000306e:	cd dc       	rcall	80003228 <mc_get_motor_direction>
80003070:	5c 5c       	castu.b	r12
}
80003072:	d8 02       	popm	pc

80003074 <mc_stop>:
   mc_run_motor();
   motor_state = RUN;
}

void mc_stop()
{
80003074:	d4 01       	pushm	lr
  mc_stop_motor();
80003076:	ce 7c       	rcall	80003244 <mc_stop_motor>
80003078:	30 09       	mov	r9,0
  motor_state = STOP;
8000307a:	48 28       	lddpc	r8,80003080 <mc_stop+0xc>
8000307c:	91 09       	st.w	r8[0x0],r9
8000307e:	d8 02       	popm	pc
}
80003080:	00 00       	add	r0,r0
80003082:	05 ac       	ld.ub	r12,r2[0x2]

80003084 <mc_run>:
void mc_set_open_loop(){loop_type = OPEN_LOOP;}

void mc_set_speed_loop(){loop_type = SPEED_LOOP;}

void mc_run()
{
80003084:	d4 01       	pushm	lr
   mc_run_motor();
80003086:	cd 7c       	rcall	80003234 <mc_run_motor>
80003088:	30 19       	mov	r9,1
   motor_state = RUN;
8000308a:	48 28       	lddpc	r8,80003090 <mc_run+0xc>
8000308c:	91 09       	st.w	r8[0x0],r9
8000308e:	d8 02       	popm	pc
}
80003090:	00 00       	add	r0,r0
80003092:	05 ac       	ld.ub	r12,r2[0x2]

80003094 <mc_get_motor_measured_speed>:
volatile U8 speed_reference = 150;    //!<Speed reference value

volatile mc_motor_state_t motor_state=STOP; //!<Current Motor State value

U8 mc_get_motor_measured_speed(void)
{
80003094:	d4 01       	pushm	lr

  if (motor_state==RUN)
80003096:	48 a8       	lddpc	r8,800030bc <mc_get_motor_measured_speed+0x28>
80003098:	70 09       	ld.w	r9,r8[0x0]
8000309a:	58 19       	cp.w	r9,1
8000309c:	c0 20       	breq	800030a0 <mc_get_motor_measured_speed+0xc>
    {
      return 0;
    }
    else
    {
      return (U8)((FCPU_HZ/(4*2*7000)*60*255*n_SAMPLE)/mc_get_hall_period());
8000309e:	d8 0a       	popm	pc,r12=0
U8 mc_get_motor_measured_speed(void)
{

  if (motor_state==RUN)
  {
    if (mc_get_hall_period()==1)
800030a0:	cf 0c       	rcall	80003280 <mc_get_hall_period>
800030a2:	58 1c       	cp.w	r12,1
800030a4:	cf d0       	breq	8000309e <mc_get_motor_measured_speed+0xa>
800030a6:	ce dc       	rcall	80003280 <mc_get_hall_period>
    {
      return 0;
    }
    else
    {
      return (U8)((FCPU_HZ/(4*2*7000)*60*255*n_SAMPLE)/mc_get_hall_period());
800030a8:	e0 69 c1 c0 	mov	r9,49600
800030ac:	ea 19 05 78 	orh	r9,0x578
800030b0:	f2 0c 0d 08 	divu	r8,r9,r12
800030b4:	f9 d8 c0 08 	bfextu	r12,r8,0x0,0x8
800030b8:	d8 02       	popm	pc
800030ba:	d7 03       	nop
800030bc:	00 00       	add	r0,r0
800030be:	05 ac       	ld.ub	r12,r2[0x2]

800030c0 <mc_forward>:
  mc_stop_motor();
  motor_state = STOP;
}

void mc_forward()
{
800030c0:	d4 01       	pushm	lr
  mc_set_motor_direction(MC_CW);  
800030c2:	30 0c       	mov	r12,0
800030c4:	ca cc       	rcall	8000321c <mc_set_motor_direction>
800030c6:	cb 7c       	rcall	80003234 <mc_run_motor>

void mc_set_speed_loop(){loop_type = SPEED_LOOP;}

void mc_run()
{
   mc_run_motor();
800030c8:	30 19       	mov	r9,1
800030ca:	48 28       	lddpc	r8,800030d0 <mc_forward+0x10>
   motor_state = RUN;
800030cc:	91 09       	st.w	r8[0x0],r9
800030ce:	d8 02       	popm	pc
800030d0:	00 00       	add	r0,r0

void mc_forward()
{
  mc_set_motor_direction(MC_CW);  
  mc_run();
}
800030d2:	05 ac       	ld.ub	r12,r2[0x2]

800030d4 <mc_backward>:

void mc_backward()
{
800030d4:	d4 01       	pushm	lr
  mc_set_motor_direction(MC_CCW);   
800030d6:	30 1c       	mov	r12,1
800030d8:	ca 2c       	rcall	8000321c <mc_set_motor_direction>
800030da:	ca dc       	rcall	80003234 <mc_run_motor>

void mc_set_speed_loop(){loop_type = SPEED_LOOP;}

void mc_run()
{
   mc_run_motor();
800030dc:	30 19       	mov	r9,1
800030de:	48 28       	lddpc	r8,800030e4 <mc_backward+0x10>
   motor_state = RUN;
800030e0:	91 09       	st.w	r8[0x0],r9
800030e2:	d8 02       	popm	pc
800030e4:	00 00       	add	r0,r0

void mc_backward()
{
  mc_set_motor_direction(MC_CCW);   
  mc_run();
}
800030e6:	05 ac       	ld.ub	r12,r2[0x2]

800030e8 <mc_regulation_task>:
}

volatile unsigned long g_regulation_period =0;

void mc_regulation_task()
{
800030e8:	eb cd 40 80 	pushm	r7,lr
 if (tick) {
800030ec:	4b e9       	lddpc	r9,800031e4 <mc_regulation_task+0xfc>
800030ee:	92 08       	ld.sh	r8,r9[0x0]
800030f0:	58 08       	cp.w	r8,0
800030f2:	c0 a0       	breq	80003106 <mc_regulation_task+0x1e>
      tick = 0;
800030f4:	30 08       	mov	r8,0
800030f6:	b2 08       	st.h	r9[0x0],r8
      g_regulation_period++;
800030f8:	4b ca       	lddpc	r10,800031e8 <mc_regulation_task+0x100>
800030fa:	74 08       	ld.w	r8,r10[0x0]
800030fc:	2f f8       	sub	r8,-1
800030fe:	95 08       	st.w	r10[0x0],r8
      if (g_regulation_period>=PRESCALER_REGULATION_LOOP)
80003100:	74 09       	ld.w	r9,r10[0x0]
80003102:	58 09       	cp.w	r9,0
80003104:	c0 31       	brne	8000310a <mc_regulation_task+0x22>
80003106:	e3 cd 80 80 	ldm	sp++,r7,pc
      {
          g_regulation_period=0;    
8000310a:	30 08       	mov	r8,0
{
  speed_reference = speed;
}
U8 mc_get_reference_speed(void)
{
  return speed_reference;
8000310c:	4b 89       	lddpc	r9,800031ec <mc_regulation_task+0x104>
 if (tick) {
      tick = 0;
      g_regulation_period++;
      if (g_regulation_period>=PRESCALER_REGULATION_LOOP)
      {
          g_regulation_period=0;    
8000310e:	95 08       	st.w	r10[0x0],r8
{
  speed_reference = speed;
}
U8 mc_get_reference_speed(void)
{
  return speed_reference;
80003110:	13 88       	ld.ub	r8,r9[0x0]
volatile mc_motor_state_t motor_state=STOP; //!<Current Motor State value

U8 mc_get_motor_measured_speed(void)
{

  if (motor_state==RUN)
80003112:	4b 89       	lddpc	r9,800031f0 <mc_regulation_task+0x108>
{
  speed_reference = speed;
}
U8 mc_get_reference_speed(void)
{
  return speed_reference;
80003114:	10 97       	mov	r7,r8
volatile mc_motor_state_t motor_state=STOP; //!<Current Motor State value

U8 mc_get_motor_measured_speed(void)
{

  if (motor_state==RUN)
80003116:	72 08       	ld.w	r8,r9[0x0]
80003118:	58 18       	cp.w	r8,1
8000311a:	c5 90       	breq	800031cc <mc_regulation_task+0xe4>
    {
      return 0;
    }
    else
    {
      return (U8)((FCPU_HZ/(4*2*7000)*60*255*n_SAMPLE)/mc_get_hall_period());
8000311c:	30 08       	mov	r8,0
{
  U8 Duty = 0;
  S32 increment = 0;

  // Error calculation
  speed_error = speed_cmd - mc_get_motor_measured_speed();
8000311e:	4b 6c       	lddpc	r12,800031f4 <mc_regulation_task+0x10c>
80003120:	ee 08 01 08 	sub	r8,r7,r8
80003124:	99 08       	st.w	r12[0x0],r8

  // proportional term calculation
  speed_proportional = Kp_speed*speed_error;
80003126:	4b 5a       	lddpc	r10,800031f8 <mc_regulation_task+0x110>
80003128:	78 08       	ld.w	r8,r12[0x0]
8000312a:	f0 08 00 28 	add	r8,r8,r8<<0x2
8000312e:	a1 78       	lsl	r8,0x1
80003130:	95 08       	st.w	r10[0x0],r8

  // integral term calculation
  speed_integral = speed_integral + speed_error;
80003132:	4b 3b       	lddpc	r11,800031fc <mc_regulation_task+0x114>
80003134:	76 09       	ld.w	r9,r11[0x0]
80003136:	78 08       	ld.w	r8,r12[0x0]
80003138:	12 08       	add	r8,r9
8000313a:	97 08       	st.w	r11[0x0],r8

  if(speed_integral >  255) speed_integral =  255;
8000313c:	76 09       	ld.w	r9,r11[0x0]
8000313e:	e0 49 00 ff 	cp.w	r9,255
80003142:	e0 8a 00 05 	brle	8000314c <mc_regulation_task+0x64>
80003146:	e0 68 00 ff 	mov	r8,255
8000314a:	97 08       	st.w	r11[0x0],r8
  if(speed_integral < -255) speed_integral = -255;
8000314c:	76 08       	ld.w	r8,r11[0x0]
8000314e:	fe 58 ff 01 	cp.w	r8,-255
80003152:	c0 54       	brge	8000315c <mc_regulation_task+0x74>
80003154:	fe 79 ff 01 	mov	r9,-255
80003158:	4a 98       	lddpc	r8,800031fc <mc_regulation_task+0x114>
8000315a:	91 09       	st.w	r8[0x0],r9

  speed_integ = Ki_speed*speed_integral;
8000315c:	76 08       	ld.w	r8,r11[0x0]
8000315e:	4a 97       	lddpc	r7,80003200 <mc_regulation_task+0x118>
80003160:	f0 08 00 18 	add	r8,r8,r8<<0x1
80003164:	8f 08       	st.w	r7[0x0],r8

  speed_derivative = speed_error - last_speed_error;
80003166:	4a 8b       	lddpc	r11,80003204 <mc_regulation_task+0x11c>
80003168:	78 08       	ld.w	r8,r12[0x0]
8000316a:	4a 8e       	lddpc	lr,80003208 <mc_regulation_task+0x120>
8000316c:	7c 09       	ld.w	r9,lr[0x0]
8000316e:	12 18       	sub	r8,r9
80003170:	97 08       	st.w	r11[0x0],r8

  if(speed_derivative >  255) speed_derivative =  255;
80003172:	76 09       	ld.w	r9,r11[0x0]
80003174:	e0 49 00 ff 	cp.w	r9,255
80003178:	e0 8a 00 05 	brle	80003182 <mc_regulation_task+0x9a>
8000317c:	e0 68 00 ff 	mov	r8,255
80003180:	97 08       	st.w	r11[0x0],r8
  if(speed_derivative < -255) speed_derivative = -255;
80003182:	76 08       	ld.w	r8,r11[0x0]
80003184:	fe 58 ff 01 	cp.w	r8,-255
80003188:	c0 54       	brge	80003192 <mc_regulation_task+0xaa>
8000318a:	fe 79 ff 01 	mov	r9,-255
8000318e:	49 e8       	lddpc	r8,80003204 <mc_regulation_task+0x11c>
80003190:	91 09       	st.w	r8[0x0],r9

  speed_der = Kd_speed*speed_derivative;
80003192:	76 09       	ld.w	r9,r11[0x0]
80003194:	49 eb       	lddpc	r11,8000320c <mc_regulation_task+0x124>
80003196:	97 09       	st.w	r11[0x0],r9

  last_speed_error = speed_error;
80003198:	78 08       	ld.w	r8,r12[0x0]
8000319a:	9d 08       	st.w	lr[0x0],r8
  
  // Duty Cycle calculation
  increment = speed_proportional + speed_integ;
8000319c:	74 0a       	ld.w	r10,r10[0x0]
8000319e:	6e 08       	ld.w	r8,r7[0x0]
  increment += speed_der;
800031a0:	76 09       	ld.w	r9,r11[0x0]
  speed_der = Kd_speed*speed_derivative;

  last_speed_error = speed_error;
  
  // Duty Cycle calculation
  increment = speed_proportional + speed_integ;
800031a2:	14 08       	add	r8,r10
  increment += speed_der;
800031a4:	12 08       	add	r8,r9
  increment = increment >> K_speed_scal;
800031a6:	f0 0c 14 04 	asr	r12,r8,0x4

  // Variable saturation
  if(increment >= (S16)(MAX_AMPLITUDE)) Duty = MAX_AMPLITUDE;
800031aa:	e0 4c 00 95 	cp.w	r12,149
800031ae:	e0 89 00 0c 	brgt	800031c6 <mc_regulation_task+0xde>
  else
  {
    if(increment <= (S16)(0)) Duty =   1;
800031b2:	58 0c       	cp.w	r12,0
800031b4:	f9 bc 0a 01 	movle	r12,1
800031b8:	e0 68 00 ff 	mov	r8,255
800031bc:	f9 d8 e9 2c 	andgt	r12,r12,r8
      tick = 0;
      g_regulation_period++;
      if (g_regulation_period>=PRESCALER_REGULATION_LOOP)
      {
          g_regulation_period=0;    
          mc_set_amplitude(mc_control_speed(mc_get_reference_speed()));
800031c0:	c2 8c       	rcall	80003210 <mc_set_amplitude>
800031c2:	e3 cd 80 80 	ldm	sp++,r7,pc
800031c6:	e0 6c 00 96 	mov	r12,150
  increment = speed_proportional + speed_integ;
  increment += speed_der;
  increment = increment >> K_speed_scal;

  // Variable saturation
  if(increment >= (S16)(MAX_AMPLITUDE)) Duty = MAX_AMPLITUDE;
800031ca:	cf bb       	rjmp	800031c0 <mc_regulation_task+0xd8>
800031cc:	c5 ac       	rcall	80003280 <mc_get_hall_period>
U8 mc_get_motor_measured_speed(void)
{

  if (motor_state==RUN)
  {
    if (mc_get_hall_period()==1)
800031ce:	58 1c       	cp.w	r12,1
800031d0:	ca 60       	breq	8000311c <mc_regulation_task+0x34>
800031d2:	c5 7c       	rcall	80003280 <mc_get_hall_period>
800031d4:	e0 69 c1 c0 	mov	r9,49600
    {
      return 0;
    }
    else
    {
      return (U8)((FCPU_HZ/(4*2*7000)*60*255*n_SAMPLE)/mc_get_hall_period());
800031d8:	ea 19 05 78 	orh	r9,0x578
800031dc:	f2 0c 0d 08 	divu	r8,r9,r12
800031e0:	5c 58       	castu.b	r8
800031e2:	c9 eb       	rjmp	8000311e <mc_regulation_task+0x36>
800031e4:	00 00       	add	r0,r0
800031e6:	07 40       	ld.w	r0,--r3
800031e8:	00 00       	add	r0,r0
800031ea:	05 bc       	ld.ub	r12,r2[0x3]
800031ec:	00 00       	add	r0,r0
800031ee:	00 2d       	rsub	sp,r0
800031f0:	00 00       	add	r0,r0
800031f2:	05 ac       	ld.ub	r12,r2[0x2]
800031f4:	00 00       	add	r0,r0
800031f6:	05 c4       	ld.ub	r4,r2[0x4]
800031f8:	00 00       	add	r0,r0
800031fa:	05 b8       	ld.ub	r8,r2[0x3]
800031fc:	00 00       	add	r0,r0
800031fe:	05 b4       	ld.ub	r4,r2[0x3]
80003200:	00 00       	add	r0,r0
80003202:	05 a4       	ld.ub	r4,r2[0x2]
80003204:	00 00       	add	r0,r0
80003206:	05 a8       	ld.ub	r8,r2[0x2]
80003208:	00 00       	add	r0,r0
8000320a:	05 b0       	ld.ub	r0,r2[0x3]
8000320c:	00 00       	add	r0,r0
8000320e:	05 c0       	ld.ub	r0,r2[0x4]

80003210 <mc_set_amplitude>:
/*! \name Set amplitude
 */
//! @{
void mc_set_amplitude (U8 val)
{
  amplitude = val;
80003210:	48 28       	lddpc	r8,80003218 <mc_set_amplitude+0x8>
80003212:	b0 0c       	st.h	r8[0x0],r12
}
80003214:	5e fc       	retal	r12
80003216:	d7 03       	nop
80003218:	00 00       	add	r0,r0
8000321a:	05 c8       	ld.ub	r8,r2[0x4]

8000321c <mc_set_motor_direction>:
/*! \name Set Motor Direction
 */
//! @{
void mc_set_motor_direction(mc_motor_direction_t direction)
{
  mc_direction = direction;
8000321c:	48 28       	lddpc	r8,80003224 <mc_set_motor_direction+0x8>
8000321e:	91 0c       	st.w	r8[0x0],r12
}
80003220:	5e fc       	retal	r12
80003222:	d7 03       	nop
80003224:	00 00       	add	r0,r0
80003226:	07 44       	ld.w	r4,--r3

80003228 <mc_get_motor_direction>:
/*! \name Get Motor Direction
 */
//! @{
mc_motor_direction_t mc_get_motor_direction(void)
{
  return mc_direction;
80003228:	48 28       	lddpc	r8,80003230 <mc_get_motor_direction+0x8>
8000322a:	70 0c       	ld.w	r12,r8[0x0]
}
8000322c:	5e fc       	retal	r12
8000322e:	d7 03       	nop
80003230:	00 00       	add	r0,r0
80003232:	07 44       	ld.w	r4,--r3

80003234 <mc_run_motor>:
//------------------------------------------------------------------------------
/*! \name Run Motor
 */
//! @{
void mc_run_motor(void)
{ 
80003234:	d4 01       	pushm	lr
   // enable all GPIO alternate control 
   pwm_drv_enable_pwm_fct();
80003236:	fe b0 f9 7e 	rcall	80002532 <pwm_drv_enable_pwm_fct>
   hall_estimator_do_interrupt();
8000323a:	fe b0 f7 93 	rcall	80002160 <hall_estimator_do_interrupt>
   Enable_global_interrupt();   
8000323e:	d5 03       	csrf	0x10
}
80003240:	d8 02       	popm	pc
80003242:	d7 03       	nop

80003244 <mc_stop_motor>:
//------------------------------------------------------------------------------
/*! \name Stop Motor
 */
//! @{
void mc_stop_motor(void)
{
80003244:	eb cd 40 40 	pushm	r6,lr
  Disable_global_interrupt();  
80003248:	d3 03       	ssrf	0x10
  mc_duty_cycle(svpwm_options.max_frequency / 2);
8000324a:	48 b8       	lddpc	r8,80003274 <mc_stop_motor+0x30>
/*! \name Set Duty Cycle
 */
//! @{
void mc_duty_cycle(U8 duty)
{
  pwm_drv_duty_cycle(&pwm_drv_options,duty,duty,duty,duty,duty,duty);
8000324c:	48 bc       	lddpc	r12,80003278 <mc_stop_motor+0x34>
 */
//! @{
void mc_stop_motor(void)
{
  Disable_global_interrupt();  
  mc_duty_cycle(svpwm_options.max_frequency / 2);
8000324e:	70 16       	ld.w	r6,r8[0x4]
/*! \name Set Duty Cycle
 */
//! @{
void mc_duty_cycle(U8 duty)
{
  pwm_drv_duty_cycle(&pwm_drv_options,duty,duty,duty,duty,duty,duty);
80003250:	ed d6 c0 28 	bfextu	r6,r6,0x1,0x8
80003254:	1a d6       	st.w	--sp,r6
80003256:	0c 98       	mov	r8,r6
80003258:	1a d6       	st.w	--sp,r6
8000325a:	0c 99       	mov	r9,r6
8000325c:	0c 9a       	mov	r10,r6
8000325e:	0c 9b       	mov	r11,r6
80003260:	fe b0 f9 77 	rcall	8000254e <pwm_drv_duty_cycle>
//! @{
void mc_stop_motor(void)
{
  Disable_global_interrupt();  
  mc_duty_cycle(svpwm_options.max_frequency / 2);
  hall_estimator_options.speed = 0;  
80003264:	30 09       	mov	r9,0
80003266:	48 68       	lddpc	r8,8000327c <mc_stop_motor+0x38>
80003268:	91 19       	st.w	r8[0x4],r9
  pwm_drv_disable_pwm_fct();   
8000326a:	fe b0 f9 6b 	rcall	80002540 <pwm_drv_disable_pwm_fct>
8000326e:	2f ed       	sub	sp,-8
}
80003270:	e3 cd 80 40 	ldm	sp++,r6,pc
80003274:	00 00       	add	r0,r0
80003276:	07 18       	ld.sh	r8,r3++
80003278:	00 00       	add	r0,r0
8000327a:	07 14       	ld.sh	r4,r3++
8000327c:	00 00       	add	r0,r0
8000327e:	07 34       	ld.ub	r4,r3++

80003280 <mc_get_hall_period>:
//------------------------------------------------------------------------------
/*! \name Get Hall Period
 */
//! @{
U32 mc_get_hall_period(void)
{
80003280:	eb cd 40 40 	pushm	r6,lr
  hall_estimator_update_speed(&hall_estimator_options);
80003284:	48 46       	lddpc	r6,80003294 <mc_get_hall_period+0x14>
80003286:	0c 9c       	mov	r12,r6
80003288:	fe b0 f8 4a 	rcall	8000231c <hall_estimator_update_speed>
  return hall_estimator_options.speed;
8000328c:	6c 1c       	ld.w	r12,r6[0x4]
}
8000328e:	e3 cd 80 40 	ldm	sp++,r6,pc
80003292:	d7 03       	nop
80003294:	00 00       	add	r0,r0
80003296:	07 34       	ld.ub	r4,r3++

80003298 <compare_int_handler>:
#elif __ICCAVR32__
/* TC Interrupt  */
#pragma handler = AVR32_TC_IRQ_GROUP, 1
__interrupt void compare_int_handler( void )
#endif
{	
80003298:	eb cd 40 c0 	pushm	r6-r7,lr
     // clear the interrupt flag
     AVR32_TC.channel[TC_CHANNEL].sr;
8000329c:	fe 78 38 00 	mov	r8,-51200
800032a0:	70 88       	ld.w	r8,r8[0x20]
     hall_estimator_update_teta(&hall_estimator_options,svpwm_options.resolution);
800032a2:	49 e7       	lddpc	r7,80003318 <compare_int_handler+0x80>
800032a4:	49 e6       	lddpc	r6,8000331c <compare_int_handler+0x84>
800032a6:	6e 0b       	ld.w	r11,r7[0x0]
800032a8:	0c 9c       	mov	r12,r6
800032aa:	fe b0 f7 e5 	rcall	80002274 <hall_estimator_update_teta>
     svpwm_options.teta = hall_estimator_options.teta;
800032ae:	8c 08       	ld.sh	r8,r6[0x0]
800032b0:	ae 58       	st.h	r7[0xa],r8
     // If overflow
     if (svpwm_options.teta>svpwm_options.resolution)
800032b2:	8e 59       	ld.sh	r9,r7[0xa]
800032b4:	6e 08       	ld.w	r8,r7[0x0]
800032b6:	5c 79       	castu.h	r9
800032b8:	10 39       	cp.w	r9,r8
800032ba:	e0 88 00 04 	brls	800032c2 <compare_int_handler+0x2a>
     {
       svpwm_options.teta = svpwm_options.resolution;
800032be:	6e 08       	ld.w	r8,r7[0x0]
800032c0:	ae 58       	st.h	r7[0xa],r8
     }   
     // Prepare the next svpwm calculation
     svpwm_options.sector_number = hall_estimator_options.sector_number;
800032c2:	8c 48       	ld.sh	r8,r6[0x8]
     svpwm_options.amplitude = amplitude;
800032c4:	49 79       	lddpc	r9,80003320 <compare_int_handler+0x88>
     if (svpwm_options.teta>svpwm_options.resolution)
     {
       svpwm_options.teta = svpwm_options.resolution;
     }   
     // Prepare the next svpwm calculation
     svpwm_options.sector_number = hall_estimator_options.sector_number;
800032c6:	ae 48       	st.h	r7[0x8],r8
     svpwm_options.amplitude = amplitude;
800032c8:	92 08       	ld.sh	r8,r9[0x0]
     // Launch svpwm calculation
     svpwm_calc(&svpwm_options,mc_direction);
800032ca:	49 79       	lddpc	r9,80003324 <compare_int_handler+0x8c>
     {
       svpwm_options.teta = svpwm_options.resolution;
     }   
     // Prepare the next svpwm calculation
     svpwm_options.sector_number = hall_estimator_options.sector_number;
     svpwm_options.amplitude = amplitude;
800032cc:	5c 78       	castu.h	r8
     // Launch svpwm calculation
     svpwm_calc(&svpwm_options,mc_direction);
800032ce:	49 3c       	lddpc	r12,80003318 <compare_int_handler+0x80>
     {
       svpwm_options.teta = svpwm_options.resolution;
     }   
     // Prepare the next svpwm calculation
     svpwm_options.sector_number = hall_estimator_options.sector_number;
     svpwm_options.amplitude = amplitude;
800032d0:	8f 38       	st.w	r7[0xc],r8
     // Launch svpwm calculation
     svpwm_calc(&svpwm_options,mc_direction);
800032d2:	72 0b       	ld.w	r11,r9[0x0]
800032d4:	5c 5b       	castu.b	r11
800032d6:	fe b0 f9 b5 	rcall	80002640 <svpwm_calc>
     // Update duty cycle
     pwm_drv_duty_cycle(&pwm_drv_options,svpwm_options.PWM0, svpwm_options.PWM0+DEAD_TIME, svpwm_options.PWM1, svpwm_options.PWM1+DEAD_TIME, svpwm_options.PWM2, svpwm_options.PWM2+DEAD_TIME);
800032da:	6e 68       	ld.w	r8,r7[0x18]
800032dc:	2f 68       	sub	r8,-10
800032de:	1a d8       	st.w	--sp,r8
800032e0:	6e 69       	ld.w	r9,r7[0x18]
800032e2:	49 2c       	lddpc	r12,80003328 <compare_int_handler+0x90>
800032e4:	1a d9       	st.w	--sp,r9
800032e6:	6e 58       	ld.w	r8,r7[0x14]
800032e8:	6e 59       	ld.w	r9,r7[0x14]
800032ea:	2f 68       	sub	r8,-10
800032ec:	6e 4a       	ld.w	r10,r7[0x10]
800032ee:	6e 4b       	ld.w	r11,r7[0x10]
800032f0:	2f 6a       	sub	r10,-10
800032f2:	fe b0 f9 2e 	rcall	8000254e <pwm_drv_duty_cycle>
     // Generate the main Tick 
     Prescaler_Main_Tick -= 1;
800032f6:	48 e9       	lddpc	r9,8000332c <compare_int_handler+0x94>
800032f8:	13 88       	ld.ub	r8,r9[0x0]
800032fa:	20 18       	sub	r8,1
800032fc:	b2 88       	st.b	r9[0x0],r8
     if (Prescaler_Main_Tick == 0)
800032fe:	2f ed       	sub	sp,-8
80003300:	13 88       	ld.ub	r8,r9[0x0]
80003302:	58 08       	cp.w	r8,0
80003304:	c0 61       	brne	80003310 <compare_int_handler+0x78>
     {
        Prescaler_Main_Tick = PRESCALER_TICK; 
80003306:	30 38       	mov	r8,3
80003308:	b2 88       	st.b	r9[0x0],r8
        tick=1;
8000330a:	30 19       	mov	r9,1
8000330c:	48 98       	lddpc	r8,80003330 <compare_int_handler+0x98>
8000330e:	b0 09       	st.h	r8[0x0],r9
     }
}
80003310:	e3 cd 40 c0 	ldm	sp++,r6-r7,lr
80003314:	d6 03       	rete
80003316:	d7 03       	nop
80003318:	00 00       	add	r0,r0
8000331a:	07 18       	ld.sh	r8,r3++
8000331c:	00 00       	add	r0,r0
8000331e:	07 34       	ld.ub	r4,r3++
80003320:	00 00       	add	r0,r0
80003322:	05 c8       	ld.ub	r8,r2[0x4]
80003324:	00 00       	add	r0,r0
80003326:	07 44       	ld.w	r4,--r3
80003328:	00 00       	add	r0,r0
8000332a:	07 14       	ld.sh	r4,r3++
8000332c:	00 00       	add	r0,r0
8000332e:	00 2e       	rsub	lr,r0
80003330:	00 00       	add	r0,r0
80003332:	07 40       	ld.w	r0,--r3

80003334 <mc_init_motor>:
//------------------------------------------------------------------------------
/*! \name Global Low level initialization
 */
//! @{
void mc_init_motor(void)
{   
80003334:	eb cd 40 60 	pushm	r5-r6,lr
  /* initialise the cpu count to generate a tick */
   tick = 0;
80003338:	30 09       	mov	r9,0
8000333a:	4a 08       	lddpc	r8,800033b8 <mc_init_motor+0x84>
    .cpbs  = 0,
    .cpas  = 0,
    .lovrs = 0,
    .covfs = 0
  };
  INTC_register_interrupt(&compare_int_handler, AVR32_TC_IRQ0, AVR32_INTC_INT1);
8000333c:	30 1a       	mov	r10,1
 */
//! @{
void mc_init_motor(void)
{   
  /* initialise the cpu count to generate a tick */
   tick = 0;
8000333e:	b0 09       	st.h	r8[0x0],r9
    .cpbs  = 0,
    .cpas  = 0,
    .lovrs = 0,
    .covfs = 0
  };
  INTC_register_interrupt(&compare_int_handler, AVR32_TC_IRQ0, AVR32_INTC_INT1);
80003340:	e0 6b 01 c0 	mov	r11,448
80003344:	fe cc 00 ac 	sub	r12,pc,172
80003348:	e0 a0 03 d8 	rcall	80003af8 <INTC_register_interrupt>

  // Initialize the timer/counter.
  tc_init_waveform(tc, &WAVEFORM_OPT);         // Initialize the timer/counter waveform.
8000334c:	49 cb       	lddpc	r11,800033bc <mc_init_motor+0x88>
8000334e:	fe 7c 38 00 	mov	r12,-51200
80003352:	e0 a0 05 bc 	rcall	80003eca <tc_init_waveform>

  // Set the compare triggers.
  // Remember TC counter is 16-bits, so counting second is not possible.
  // We configure it to count ms.
  // We want: (1/(FPBA/4)) * RC = 1000 Hz => RC = (FPBA/4) / 1000 = 3000 to get an interrupt every 1ms
  tc_write_rc(tc, TC_CHANNEL, (FPBA_HZ/4)/FTICK_HZ);  // Set RC value.
80003356:	e0 6a 01 50 	mov	r10,336
8000335a:	30 0b       	mov	r11,0
8000335c:	fe 7c 38 00 	mov	r12,-51200
80003360:	e0 a0 06 11 	rcall	80003f82 <tc_write_rc>

  tc_configure_interrupts(tc, TC_CHANNEL, &TC_INTERRUPT);
80003364:	49 7a       	lddpc	r10,800033c0 <mc_init_motor+0x8c>
80003366:	30 0b       	mov	r11,0
80003368:	fe 7c 38 00 	mov	r12,-51200
8000336c:	e0 a0 06 22 	rcall	80003fb0 <tc_configure_interrupts>

  // Start the timer/counter.
  tc_start(tc, TC_CHANNEL);                    // And start the timer/counter.
80003370:	30 0b       	mov	r11,0
80003372:	fe 7c 38 00 	mov	r12,-51200
80003376:	e0 a0 05 f8 	rcall	80003f66 <tc_start>
  /* initialise the cpu count to generate a tick */
   tick = 0;
   mc_init_tc();
   pwm_drv_options.max_pwm_value = TOP_PWM;
   
   pwm_drv_init(&pwm_drv_options);
8000337a:	49 38       	lddpc	r8,800033c4 <mc_init_motor+0x90>
void mc_init_motor(void)
{   
  /* initialise the cpu count to generate a tick */
   tick = 0;
   mc_init_tc();
   pwm_drv_options.max_pwm_value = TOP_PWM;
8000337c:	10 9c       	mov	r12,r8
8000337e:	e0 65 00 fa 	mov	r5,250
   
   pwm_drv_init(&pwm_drv_options);
80003382:	91 05       	st.w	r8[0x0],r5
80003384:	fe b0 f9 08 	rcall	80002594 <pwm_drv_init>
   pwm_drv_enable_pwm_channel();
80003388:	fe b0 f8 d0 	rcall	80002528 <pwm_drv_enable_pwm_channel>

   svpwm_options.resolution    = FTICK_HZ/((RESOLUTION)-1);
8000338c:	48 f9       	lddpc	r9,800033c8 <mc_init_motor+0x94>
8000338e:	33 d8       	mov	r8,61
   svpwm_options.max_frequency = TOP_PWM;
80003390:	93 08       	st.w	r9[0x0],r8
   
   hall_estimator_options.speed = 0;
80003392:	93 15       	st.w	r9[0x4],r5
80003394:	48 e6       	lddpc	r6,800033cc <mc_init_motor+0x98>
80003396:	30 05       	mov	r5,0
   hall_estimator_options.teta = 0;
   hall_estimator_init(&hall_estimator_options);    
80003398:	8d 15       	st.w	r6[0x4],r5

   svpwm_options.resolution    = FTICK_HZ/((RESOLUTION)-1);
   svpwm_options.max_frequency = TOP_PWM;
   
   hall_estimator_options.speed = 0;
   hall_estimator_options.teta = 0;
8000339a:	0c 9c       	mov	r12,r6
   hall_estimator_init(&hall_estimator_options);    
8000339c:	ac 05       	st.h	r6[0x0],r5
8000339e:	fe b0 f8 b9 	rcall	80002510 <hall_estimator_init>

   hall_estimator_init_interrupt(&hall_estimator_options);
800033a2:	0c 9c       	mov	r12,r6
800033a4:	fe b0 f7 c2 	rcall	80002328 <hall_estimator_init_interrupt>
/*! \name Set amplitude
 */
//! @{
void mc_set_amplitude (U8 val)
{
  amplitude = val;
800033a8:	30 aa       	mov	r10,10
800033aa:	48 a8       	lddpc	r8,800033d0 <mc_init_motor+0x9c>
/*! \name Set Motor Direction
 */
//! @{
void mc_set_motor_direction(mc_motor_direction_t direction)
{
  mc_direction = direction;
800033ac:	b0 0a       	st.h	r8[0x0],r10
800033ae:	48 a9       	lddpc	r9,800033d4 <mc_init_motor+0xa0>
   hall_estimator_init(&hall_estimator_options);    

   hall_estimator_init_interrupt(&hall_estimator_options);
   mc_set_amplitude (MIN_AMPLITUDE);   
   mc_set_motor_direction(MC_CW);
}
800033b0:	93 05       	st.w	r9[0x0],r5
800033b2:	e3 cd 80 60 	ldm	sp++,r5-r6,pc
800033b6:	d7 03       	nop
800033b8:	00 00       	add	r0,r0
800033ba:	07 40       	ld.w	r0,--r3
800033bc:	80 00       	ld.sh	r0,r0[0x0]
800033be:	a4 b8       	st.b	r2[0x3],r8
800033c0:	80 00       	ld.sh	r0,r0[0x0]
800033c2:	a4 c0       	st.b	r2[0x4],r0
800033c4:	00 00       	add	r0,r0
800033c6:	07 14       	ld.sh	r4,r3++
800033c8:	00 00       	add	r0,r0
800033ca:	07 18       	ld.sh	r8,r3++
800033cc:	00 00       	add	r0,r0
800033ce:	07 34       	ld.ub	r4,r3++
800033d0:	00 00       	add	r0,r0
800033d2:	05 c8       	ld.ub	r8,r2[0x4]
800033d4:	00 00       	add	r0,r0
800033d6:	07 44       	ld.w	r4,--r3

800033d8 <main>:
  return 1;
}


int main(void)
{
800033d8:	eb cd 40 40 	pushm	r6,lr
  // Configure standard I/O streams as unbuffered.
#if __GNUC__ && __AVR32__
  setbuf(stdin, NULL);
800033dc:	48 a6       	lddpc	r6,80003404 <main+0x2c>
800033de:	6c 08       	ld.w	r8,r6[0x0]
800033e0:	30 0b       	mov	r11,0
800033e2:	70 0c       	ld.w	r12,r8[0x0]
800033e4:	e0 a0 0e 12 	rcall	80005008 <setbuf>
#endif
  setbuf(stdout, NULL);
800033e8:	6c 08       	ld.w	r8,r6[0x0]
800033ea:	30 0b       	mov	r11,0
800033ec:	70 1c       	ld.w	r12,r8[0x4]
800033ee:	e0 a0 0e 0d 	rcall	80005008 <setbuf>

   // Low level initialization routine for motor control
   mc_init_motor();
800033f2:	ca 1f       	rcall	80003334 <mc_init_motor>
800033f4:	c2 8f       	rcall	80003244 <mc_stop_motor>
   // Force motor in stop position
   mc_stop_motor();
800033f6:	c2 fe       	rcall	80003054 <mc_set_speed_loop>
800033f8:	fe b0 fd 10 	rcall	80002e18 <sensor_task_init>
   // Set speed loop for regulation
   mc_set_speed_loop();
800033fc:	c7 6e       	rcall	800030e8 <mc_regulation_task>
   // Initialize Task Support
#ifdef SENSOR_TASK_SUPPORT
   sensor_task_init();
800033fe:	fe b0 fd 73 	rcall	80002ee4 <sensor_task>
#endif

   while(1)
   {
      // Regulation_task
      mc_regulation_task();
80003402:	cf db       	rjmp	800033fc <main+0x24>
80003404:	00 00       	add	r0,r0
      // Call Task routine
      #ifdef SENSOR_TASK_SUPPORT
         sensor_task();
80003406:	01 28       	ld.uh	r8,r0++

80003408 <_init_startup>:
#if __GNUC__ && __AVR32__
int _init_startup(void)
#elif __ICCAVR32__
int __low_level_init(void)
#endif
{
80003408:	eb cd 40 40 	pushm	r6,lr
  // Import the Exception Vector Base Address.
  extern void _evba;

  // Load the Exception Vector Base Address in the corresponding system
  // register.
  Set_system_register(AVR32_EVBA, (int)&_evba);
8000340c:	fe c8 92 0c 	sub	r8,pc,-28148
80003410:	e3 b8 00 01 	mtsr	0x4,r8
  union
  {
    unsigned long                 scfg;
    avr32_hmatrix_scfg_t          SCFG;
  } u_avr32_hmatrix_scfg = {AVR32_HMATRIX.scfg[AVR32_HMATRIX_SLAVE_FLASH]};
  u_avr32_hmatrix_scfg.SCFG.defmstr_type = AVR32_HMATRIX_DEFMSTR_TYPE_LAST_DEFAULT;
80003414:	d5 53       	csrf	0x15
  // For the internal-flash HMATRIX slave, use last master as default.
  union
  {
    unsigned long                 scfg;
    avr32_hmatrix_scfg_t          SCFG;
  } u_avr32_hmatrix_scfg = {AVR32_HMATRIX.scfg[AVR32_HMATRIX_SLAVE_FLASH]};
80003416:	30 16       	mov	r6,1
80003418:	fe 69 10 00 	mov	r9,-126976
  u_avr32_hmatrix_scfg.SCFG.defmstr_type = AVR32_HMATRIX_DEFMSTR_TYPE_LAST_DEFAULT;
8000341c:	73 08       	ld.w	r8,r9[0x40]
8000341e:	f1 d6 d2 02 	bfins	r8,r6,0x10,0x2
  AVR32_HMATRIX.scfg[AVR32_HMATRIX_SLAVE_FLASH] = u_avr32_hmatrix_scfg.scfg;
80003422:	30 3a       	mov	r10,3
80003424:	f3 48 00 40 	st.w	r9[64],r8
static void init_sys_clocks(void)
{
volatile avr32_pm_t* pm = &AVR32_PM;

  /* Switch the main clock to OSC0 */
  pm_switch_to_osc0(pm, FOSC0, OSC0_STARTUP);
80003428:	e0 6b 1b 00 	mov	r11,6912
8000342c:	ea 1b 00 b7 	orh	r11,0xb7
80003430:	fe 7c 0c 00 	mov	r12,-62464
80003434:	e0 a0 03 e3 	rcall	80003bfa <pm_switch_to_osc0>
  /* Setup PLL0 on OSC0 */
  pm_pll_setup(pm,  // volatile avr32_pm_t* pm
80003438:	31 0a       	mov	r10,16
8000343a:	30 08       	mov	r8,0
8000343c:	1a da       	st.w	--sp,r10
8000343e:	0c 99       	mov	r9,r6
80003440:	10 9b       	mov	r11,r8
80003442:	30 6a       	mov	r10,6
80003444:	fe 7c 0c 00 	mov	r12,-62464
80003448:	e0 a0 03 af 	rcall	80003ba6 <pm_pll_setup>
               0,   // unsigned int pll
               6,   // unsigned int mul
               1,   // unsigned int div, Sel Osc0/PLL0 or Osc1/Pll1
               0,   // unsigned int osc
               16); // unsigned int lockcount
  pm_pll_set_option(pm, 0, 1, 1, 0);//60MHz
8000344c:	30 08       	mov	r8,0
8000344e:	0c 99       	mov	r9,r6
80003450:	0c 9a       	mov	r10,r6
80003452:	10 9b       	mov	r11,r8
80003454:	fe 7c 0c 00 	mov	r12,-62464
80003458:	e0 a0 03 b6 	rcall	80003bc4 <pm_pll_set_option>

  /* Enable PLL0 */
  pm_pll_enable(pm,0);
8000345c:	30 0b       	mov	r11,0
8000345e:	fe 7c 0c 00 	mov	r12,-62464
80003462:	e0 a0 03 bc 	rcall	80003bda <pm_pll_enable>
  /* Wait for PLL0 locked */
  pm_wait_for_pll0_locked(pm) ;
80003466:	fe 7c 0c 00 	mov	r12,-62464
8000346a:	e0 a0 03 be 	rcall	80003be6 <pm_wait_for_pll0_locked>
  /* set divider to 4 for PBA bus */
  pm_cksel(pm,1,0,0,0,0,0);
8000346e:	30 09       	mov	r9,0
80003470:	0c 9b       	mov	r11,r6
80003472:	1a d9       	st.w	--sp,r9
80003474:	12 98       	mov	r8,r9
80003476:	1a d9       	st.w	--sp,r9
80003478:	12 9a       	mov	r10,r9
8000347a:	fe 7c 0c 00 	mov	r12,-62464
8000347e:	e0 a0 03 71 	rcall	80003b60 <pm_cksel>
  /* switch to clock */
  pm_switch_to_clock(pm, AVR32_PM_MCCTRL_MCSEL_PLL0);
80003482:	30 2b       	mov	r11,2
80003484:	fe 7c 0c 00 	mov	r12,-62464
80003488:	e0 a0 03 b4 	rcall	80003bf0 <pm_switch_to_clock>

#if __GNUC__ && __AVR32__
  // Give the used PBA clock frequency to Newlib, so it can work properly.
  set_cpu_hz(FPBA_HZ);
8000348c:	e0 6c 6f 40 	mov	r12,28480
80003490:	ea 1c 01 40 	orh	r12,0x140
80003494:	e0 a0 05 fe 	rcall	80004090 <set_cpu_hz>
    {STDIO_USART_RX_PIN, STDIO_USART_RX_FUNCTION},
    {STDIO_USART_TX_PIN, STDIO_USART_TX_FUNCTION}
  };

  // Initialize the USART used for STDIO.
  set_usart_base((void *)STDIO_USART);
80003498:	fe 7c 18 00 	mov	r12,-59392
8000349c:	e0 a0 06 84 	rcall	800041a4 <set_usart_base>
  gpio_enable_module(STDIO_USART_GPIO_MAP,
800034a0:	30 2b       	mov	r11,2
800034a2:	48 8c       	lddpc	r12,800034c0 <_init_startup+0xb8>
800034a4:	e0 a0 02 6b 	rcall	8000397a <gpio_enable_module>
                     sizeof(STDIO_USART_GPIO_MAP) / sizeof(STDIO_USART_GPIO_MAP[0]));
  usart_init(STDIO_USART_BAUDRATE);
800034a8:	e0 6c e1 00 	mov	r12,57600
800034ac:	e0 a0 06 9e 	rcall	800041e8 <usart_init>
/*! \brief Initializes MCU interrupts.
 */
static void init_interrupts(void)
{
  // Initialize interrupt handling.
  INTC_init_interrupts();
800034b0:	e0 a0 02 fe 	rcall	80003aac <INTC_init_interrupts>
  init_interrupts();

  // EWAVR32: Request initialization of data segments.
  // GCC: Don't-care value.
  return 1;
}
800034b4:	d5 03       	csrf	0x10
{
  // Initialize interrupt handling.
  INTC_init_interrupts();

  // Enable interrupts globally.
  Enable_global_interrupt();
800034b6:	30 1c       	mov	r12,1
  init_interrupts();

  // EWAVR32: Request initialization of data segments.
  // GCC: Don't-care value.
  return 1;
}
800034b8:	2f dd       	sub	sp,-12
800034ba:	e3 cd 80 40 	ldm	sp++,r6,pc
800034be:	d7 03       	nop
800034c0:	80 00       	ld.sh	r0,r0[0x0]
800034c2:	a4 c4       	st.b	r2[0x4],r4

800034c4 <dsp32_op_sin>:
800034c4:	d4 01       	pushm	lr
800034c6:	fc 18 20 00 	movh	r8,0x2000
800034ca:	f8 08 00 08 	add	r8,r12,r8
800034ce:	bf 88       	lsr	r8,0x1e
800034d0:	f0 09 15 1e 	lsl	r9,r8,0x1e
800034d4:	12 1c       	sub	r12,r9
800034d6:	58 18       	cp.w	r8,1
800034d8:	c0 90       	breq	800034ea <dsp32_op_sin+0x26>
800034da:	c0 63       	brcs	800034e6 <dsp32_op_sin+0x22>
800034dc:	58 28       	cp.w	r8,2
800034de:	c0 80       	breq	800034ee <dsp32_op_sin+0x2a>
800034e0:	c0 ac       	rcall	800034f4 <dsp32_op_kernel_cosfix>
800034e2:	5c 3c       	neg	r12
800034e4:	d8 02       	popm	pc
800034e6:	cb 5c       	rcall	80003650 <dsp32_op_kernel_sinfix>
800034e8:	d8 02       	popm	pc
800034ea:	c0 5c       	rcall	800034f4 <dsp32_op_kernel_cosfix>
800034ec:	d8 02       	popm	pc
800034ee:	cb 1c       	rcall	80003650 <dsp32_op_kernel_sinfix>
800034f0:	5c 3c       	neg	r12
800034f2:	d8 02       	popm	pc

800034f4 <dsp32_op_kernel_cosfix>:
800034f4:	eb cd 40 ef 	pushm	r0-r3,r5-r7,lr
800034f8:	fe 7e 93 58 	mov	lr,-27816
800034fc:	f8 0c 06 42 	mulu.d	r2,r12,r12
80003500:	f8 08 14 1f 	asr	r8,r12,0x1f
80003504:	e4 06 16 1f 	lsr	r6,r2,0x1f
80003508:	b9 38       	mul	r8,r12
8000350a:	e6 08 00 13 	add	r3,r3,r8<<0x1
8000350e:	ed e3 10 16 	or	r6,r6,r3<<0x1
80003512:	e6 05 14 1f 	asr	r5,r3,0x1f
80003516:	ec 0e 06 4a 	mulu.d	r10,r6,lr
8000351a:	ea 0e 02 4e 	mul	lr,r5,lr
8000351e:	0c 1e       	sub	lr,r6
80003520:	fc 0b 00 0b 	add	r11,lr,r11
80003524:	f4 08 16 1f 	lsr	r8,r10,0x1f
80003528:	f6 09 14 1f 	asr	r9,r11,0x1f
8000352c:	f1 eb 10 18 	or	r8,r8,r11<<0x1
80003530:	e6 72 e7 34 	mov	r2,517940
80003534:	30 03       	mov	r3,0
80003536:	f0 02 00 08 	add	r8,r8,r2
8000353a:	f2 03 00 49 	adc	r9,r9,r3
8000353e:	f0 06 06 4a 	mulu.d	r10,r8,r6
80003542:	f2 06 02 4c 	mul	r12,r9,r6
80003546:	ea 08 03 4c 	mac	r12,r5,r8
8000354a:	f4 08 16 1f 	lsr	r8,r10,0x1f
8000354e:	f8 0b 00 0b 	add	r11,r12,r11
80003552:	e0 6a 4b 85 	mov	r10,19333
80003556:	ea 1a ff 96 	orh	r10,0xff96
8000355a:	f1 eb 10 18 	or	r8,r8,r11<<0x1
8000355e:	f6 09 14 1f 	asr	r9,r11,0x1f
80003562:	3f fb       	mov	r11,-1
80003564:	f0 0a 00 08 	add	r8,r8,r10
80003568:	f2 0b 00 49 	adc	r9,r9,r11
8000356c:	f0 06 06 42 	mulu.d	r2,r8,r6
80003570:	f2 06 02 4a 	mul	r10,r9,r6
80003574:	ea 08 03 4a 	mac	r10,r5,r8
80003578:	f4 03 00 03 	add	r3,r10,r3
8000357c:	e4 08 16 1f 	lsr	r8,r2,0x1f
80003580:	e6 09 14 1f 	asr	r9,r3,0x1f
80003584:	f1 e3 10 18 	or	r8,r8,r3<<0x1
80003588:	e0 62 ea 0d 	mov	r2,59917
8000358c:	ea 12 03 c3 	orh	r2,0x3c3
80003590:	30 03       	mov	r3,0
80003592:	f0 02 00 08 	add	r8,r8,r2
80003596:	f2 03 00 49 	adc	r9,r9,r3
8000359a:	f0 06 06 4a 	mulu.d	r10,r8,r6
8000359e:	f2 06 02 4c 	mul	r12,r9,r6
800035a2:	ea 08 03 4c 	mac	r12,r5,r8
800035a6:	f8 0b 00 0b 	add	r11,r12,r11
800035aa:	f4 08 16 1f 	lsr	r8,r10,0x1f
800035ae:	f6 09 14 1f 	asr	r9,r11,0x1f
800035b2:	f1 eb 10 18 	or	r8,r8,r11<<0x1
800035b6:	e0 62 c3 7a 	mov	r2,50042
800035ba:	ea 12 ea a2 	orh	r2,0xeaa2
800035be:	3f f3       	mov	r3,-1
800035c0:	f0 02 00 08 	add	r8,r8,r2
800035c4:	f2 03 00 49 	adc	r9,r9,r3
800035c8:	f0 06 06 4a 	mulu.d	r10,r8,r6
800035cc:	f2 06 02 4c 	mul	r12,r9,r6
800035d0:	ea 08 03 4c 	mac	r12,r5,r8
800035d4:	f8 0b 00 0b 	add	r11,r12,r11
800035d8:	f4 08 16 1f 	lsr	r8,r10,0x1f
800035dc:	f6 09 14 1f 	asr	r9,r11,0x1f
800035e0:	f1 eb 10 18 	or	r8,r8,r11<<0x1
800035e4:	e0 6a 7c 40 	mov	r10,31808
800035e8:	ea 1a 40 f0 	orh	r10,0x40f0
800035ec:	30 0b       	mov	r11,0
800035ee:	f0 0a 00 08 	add	r8,r8,r10
800035f2:	f2 0b 00 49 	adc	r9,r9,r11
800035f6:	f0 06 06 42 	mulu.d	r2,r8,r6
800035fa:	f2 06 02 4a 	mul	r10,r9,r6
800035fe:	e4 09 16 1f 	lsr	r9,r2,0x1f
80003602:	ea 08 03 4a 	mac	r10,r5,r8
80003606:	f4 03 00 03 	add	r3,r10,r3
8000360a:	f3 e3 10 19 	or	r9,r9,r3<<0x1
8000360e:	e6 0b 14 1f 	asr	r11,r3,0x1f
80003612:	ad 3b       	mul	r11,r6
80003614:	ea 09 03 4b 	mac	r11,r5,r9
80003618:	f2 06 06 48 	mulu.d	r8,r9,r6
8000361c:	e0 67 f3 26 	mov	r7,62246
80003620:	ea 17 4e f4 	orh	r7,0x4ef4
80003624:	f6 09 00 09 	add	r9,r11,r9
80003628:	ec 07 06 40 	mulu.d	r0,r6,r7
8000362c:	ea 07 03 41 	mac	r1,r5,r7
80003630:	e0 08 01 00 	sub	r0,r0,r8
80003634:	e2 09 01 41 	sbc	r1,r1,r9
80003638:	e0 68 ff ff 	mov	r8,65535
8000363c:	ea 18 7f ff 	orh	r8,0x7fff
80003640:	e0 0c 16 1c 	lsr	r12,r0,0x1c
80003644:	f9 e1 10 4c 	or	r12,r12,r1<<0x4
80003648:	f0 0c 01 0c 	sub	r12,r8,r12
8000364c:	e3 cd 80 ef 	ldm	sp++,r0-r3,r5-r7,pc

80003650 <dsp32_op_kernel_sinfix>:
80003650:	eb cd 40 ef 	pushm	r0-r3,r5-r7,lr
80003654:	20 2d       	sub	sp,8
80003656:	e0 68 ed 51 	mov	r8,60753
8000365a:	ea 18 64 87 	orh	r8,0x6487
8000365e:	18 91       	mov	r1,r12
80003660:	e2 0b 14 1f 	asr	r11,r1,0x1f
80003664:	f6 01 02 4a 	mul	r10,r11,r1
80003668:	e2 08 06 46 	mulu.d	r6,r1,r8
8000366c:	fa e7 00 00 	st.d	sp[0],r6
80003670:	f6 08 03 47 	mac	r7,r11,r8
80003674:	e2 01 06 48 	mulu.d	r8,r1,r1
80003678:	f2 0a 00 19 	add	r9,r9,r10<<0x1
8000367c:	f0 0e 16 1f 	lsr	lr,r8,0x1f
80003680:	f2 05 14 1f 	asr	r5,r9,0x1f
80003684:	fd e9 10 1e 	or	lr,lr,r9<<0x1
80003688:	ea 01 02 4a 	mul	r10,r5,r1
8000368c:	f6 0e 03 4a 	mac	r10,r11,lr
80003690:	fc 01 06 40 	mulu.d	r0,lr,r1
80003694:	e0 7c e4 04 	mov	r12,123908
80003698:	f4 01 00 01 	add	r1,r10,r1
8000369c:	fc 0c 06 4a 	mulu.d	r10,lr,r12
800036a0:	ea 0c 03 4b 	mac	r11,r5,r12
800036a4:	f4 08 16 1f 	lsr	r8,r10,0x1f
800036a8:	f6 09 14 1f 	asr	r9,r11,0x1f
800036ac:	f1 eb 10 18 	or	r8,r8,r11<<0x1
800036b0:	e0 62 cf f6 	mov	r2,53238
800036b4:	ea 12 ff e1 	orh	r2,0xffe1
800036b8:	3f f3       	mov	r3,-1
800036ba:	f0 02 00 08 	add	r8,r8,r2
800036be:	f2 03 00 49 	adc	r9,r9,r3
800036c2:	f0 0e 06 4a 	mulu.d	r10,r8,lr
800036c6:	f2 0e 02 4c 	mul	r12,r9,lr
800036ca:	ea 08 03 4c 	mac	r12,r5,r8
800036ce:	f4 08 16 1f 	lsr	r8,r10,0x1f
800036d2:	f8 0b 00 0b 	add	r11,r12,r11
800036d6:	e0 6a 78 30 	mov	r10,30768
800036da:	ea 1a 01 50 	orh	r10,0x150
800036de:	f1 eb 10 18 	or	r8,r8,r11<<0x1
800036e2:	f6 09 14 1f 	asr	r9,r11,0x1f
800036e6:	30 0b       	mov	r11,0
800036e8:	f0 0a 00 08 	add	r8,r8,r10
800036ec:	f2 0b 00 49 	adc	r9,r9,r11
800036f0:	f2 0e 02 4a 	mul	r10,r9,lr
800036f4:	ea 08 03 4a 	mac	r10,r5,r8
800036f8:	f0 0e 06 42 	mulu.d	r2,r8,lr
800036fc:	3f fb       	mov	r11,-1
800036fe:	f4 03 00 03 	add	r3,r10,r3
80003702:	e4 08 16 1f 	lsr	r8,r2,0x1f
80003706:	e6 09 14 1f 	asr	r9,r3,0x1f
8000370a:	f1 e3 10 18 	or	r8,r8,r3<<0x1
8000370e:	e0 6a 69 97 	mov	r10,27031
80003712:	ea 1a f6 69 	orh	r10,0xf669
80003716:	f0 0a 00 08 	add	r8,r8,r10
8000371a:	f2 0b 00 49 	adc	r9,r9,r11
8000371e:	50 07       	stdsp	sp[0x0],r7
80003720:	f0 0e 06 42 	mulu.d	r2,r8,lr
80003724:	f2 0e 02 4a 	mul	r10,r9,lr
80003728:	40 09       	lddsp	r9,sp[0x0]
8000372a:	ea 08 03 4a 	mac	r10,r5,r8
8000372e:	f4 03 00 03 	add	r3,r10,r3
80003732:	40 16       	lddsp	r6,sp[0x4]
80003734:	e4 08 16 1f 	lsr	r8,r2,0x1f
80003738:	bd 96       	lsr	r6,0x1d
8000373a:	f1 e3 10 18 	or	r8,r8,r3<<0x1
8000373e:	ed e9 10 36 	or	r6,r6,r9<<0x3
80003742:	e0 62 78 f2 	mov	r2,30962
80003746:	ea 12 28 cd 	orh	r2,0x28cd
8000374a:	e6 09 14 1f 	asr	r9,r3,0x1f
8000374e:	30 03       	mov	r3,0
80003750:	f0 02 00 08 	add	r8,r8,r2
80003754:	f2 03 00 49 	adc	r9,r9,r3
80003758:	f0 0e 06 4a 	mulu.d	r10,r8,lr
8000375c:	f2 0e 02 4e 	mul	lr,r9,lr
80003760:	ea 08 03 4e 	mac	lr,r5,r8
80003764:	fc 0b 00 0b 	add	r11,lr,r11
80003768:	e2 07 14 1f 	asr	r7,r1,0x1f
8000376c:	e0 0c 16 1f 	lsr	r12,r0,0x1f
80003770:	f4 08 16 1f 	lsr	r8,r10,0x1f
80003774:	f9 e1 10 1c 	or	r12,r12,r1<<0x1
80003778:	f1 eb 10 18 	or	r8,r8,r11<<0x1
8000377c:	f6 09 14 1f 	asr	r9,r11,0x1f
80003780:	e0 62 0c 3f 	mov	r2,3135
80003784:	ea 12 ad 51 	orh	r2,0xad51
80003788:	3f f3       	mov	r3,-1
8000378a:	f0 02 00 08 	add	r8,r8,r2
8000378e:	f2 03 00 49 	adc	r9,r9,r3
80003792:	f0 0c 06 4a 	mulu.d	r10,r8,r12
80003796:	f2 0c 02 4c 	mul	r12,r9,r12
8000379a:	ee 08 03 4c 	mac	r12,r7,r8
8000379e:	f8 0b 00 0b 	add	r11,r12,r11
800037a2:	f4 0c 16 1c 	lsr	r12,r10,0x1c
800037a6:	f9 eb 10 4c 	or	r12,r12,r11<<0x4
800037aa:	0c 0c       	add	r12,r6
800037ac:	2f ed       	sub	sp,-8
800037ae:	e3 cd 80 ef 	ldm	sp++,r0-r3,r5-r7,pc

800037b2 <adc_start>:
800037b2:	58 0c       	cp.w	r12,0
800037b4:	c0 40       	breq	800037bc <adc_start+0xa>
800037b6:	30 28       	mov	r8,2
800037b8:	99 08       	st.w	r12[0x0],r8
800037ba:	5e fc       	retal	r12
800037bc:	c0 08       	rjmp	800037bc <adc_start+0xa>

800037be <adc_enable>:
800037be:	58 0c       	cp.w	r12,0
800037c0:	c0 c0       	breq	800037d8 <adc_enable+0x1a>
800037c2:	30 78       	mov	r8,7
800037c4:	f0 0b 19 00 	cp.h	r11,r8
800037c8:	e0 8b 00 07 	brhi	800037d6 <adc_enable+0x18>
800037cc:	30 18       	mov	r8,1
800037ce:	f0 0b 09 48 	lsl	r8,r8,r11
800037d2:	99 48       	st.w	r12[0x10],r8
800037d4:	5e fc       	retal	r12
800037d6:	c0 08       	rjmp	800037d6 <adc_enable+0x18>
800037d8:	c0 08       	rjmp	800037d8 <adc_enable+0x1a>

800037da <adc_get_value>:
800037da:	58 0c       	cp.w	r12,0
800037dc:	c1 30       	breq	80003802 <adc_get_value+0x28>
800037de:	30 78       	mov	r8,7
800037e0:	f0 0b 19 00 	cp.h	r11,r8
800037e4:	e0 8b 00 0e 	brhi	80003800 <adc_get_value+0x26>
800037e8:	30 18       	mov	r8,1
800037ea:	f0 0b 09 49 	lsl	r9,r8,r11
800037ee:	78 78       	ld.w	r8,r12[0x1c]
800037f0:	f3 e8 00 08 	and	r8,r9,r8
800037f4:	cf d0       	breq	800037ee <adc_get_value+0x14>
800037f6:	f8 c8 ff d0 	sub	r8,r12,-48
800037fa:	f0 0b 03 2c 	ld.w	r12,r8[r11<<0x2]
800037fe:	5e fc       	retal	r12
80003800:	c0 08       	rjmp	80003800 <adc_get_value+0x26>
80003802:	c0 08       	rjmp	80003802 <adc_get_value+0x28>

80003804 <adc_disable>:
80003804:	58 0c       	cp.w	r12,0
80003806:	c1 40       	breq	8000382e <adc_disable+0x2a>
80003808:	30 78       	mov	r8,7
8000380a:	f0 0b 19 00 	cp.h	r11,r8
8000380e:	e0 8b 00 0f 	brhi	8000382c <adc_disable+0x28>
80003812:	78 68       	ld.w	r8,r12[0x18]
80003814:	30 19       	mov	r9,1
80003816:	f2 0b 09 4b 	lsl	r11,r9,r11
8000381a:	f7 e8 00 08 	and	r8,r11,r8
8000381e:	f9 f8 10 05 	ld.wne	r8,r12[0x14]
80003822:	f7 d8 e1 38 	orne	r8,r11,r8
80003826:	f9 f8 1a 05 	st.wne	r12[0x14],r8
8000382a:	5e fc       	retal	r12
8000382c:	c0 08       	rjmp	8000382c <adc_disable+0x28>
8000382e:	c0 08       	rjmp	8000382e <adc_disable+0x2a>

80003830 <gpio_enable_module_pin>:
80003830:	f8 08 16 05 	lsr	r8,r12,0x5
80003834:	f0 09 15 08 	lsl	r9,r8,0x8
80003838:	e0 29 f0 00 	sub	r9,61440
8000383c:	58 1b       	cp.w	r11,1
8000383e:	c1 50       	breq	80003868 <gpio_enable_module_pin+0x38>
80003840:	c0 82       	brcc	80003850 <gpio_enable_module_pin+0x20>
80003842:	30 18       	mov	r8,1
80003844:	f0 0c 09 4c 	lsl	r12,r8,r12
80003848:	93 6c       	st.w	r9[0x18],r12
8000384a:	93 ac       	st.w	r9[0x28],r12
8000384c:	93 2c       	st.w	r9[0x8],r12
8000384e:	5e fd       	retal	0
80003850:	58 2b       	cp.w	r11,2
80003852:	c1 10       	breq	80003874 <gpio_enable_module_pin+0x44>
80003854:	58 3b       	cp.w	r11,3
80003856:	c0 20       	breq	8000385a <gpio_enable_module_pin+0x2a>
80003858:	5e ff       	retal	1
8000385a:	30 18       	mov	r8,1
8000385c:	f0 0c 09 4c 	lsl	r12,r8,r12
80003860:	93 5c       	st.w	r9[0x14],r12
80003862:	93 9c       	st.w	r9[0x24],r12
80003864:	93 2c       	st.w	r9[0x8],r12
80003866:	5e fd       	retal	0
80003868:	f6 0c 09 4c 	lsl	r12,r11,r12
8000386c:	93 5c       	st.w	r9[0x14],r12
8000386e:	93 ac       	st.w	r9[0x28],r12
80003870:	93 2c       	st.w	r9[0x8],r12
80003872:	5e fd       	retal	0
80003874:	30 18       	mov	r8,1
80003876:	f0 0c 09 4c 	lsl	r12,r8,r12
8000387a:	93 6c       	st.w	r9[0x18],r12
8000387c:	93 9c       	st.w	r9[0x24],r12
8000387e:	93 2c       	st.w	r9[0x8],r12
80003880:	5e fd       	retal	0

80003882 <gpio_enable_pin_pull_up>:
80003882:	30 18       	mov	r8,1
80003884:	f0 0c 09 48 	lsl	r8,r8,r12
80003888:	a5 9c       	lsr	r12,0x5
8000388a:	a9 6c       	lsl	r12,0x8
8000388c:	e0 2c f0 00 	sub	r12,61440
80003890:	f9 48 00 74 	st.w	r12[116],r8
80003894:	5e fc       	retal	r12

80003896 <gpio_get_pin_value>:
80003896:	f8 08 16 05 	lsr	r8,r12,0x5
8000389a:	a9 68       	lsl	r8,0x8
8000389c:	e0 28 f0 00 	sub	r8,61440
800038a0:	71 89       	ld.w	r9,r8[0x60]
800038a2:	f2 0c 0a 49 	lsr	r9,r9,r12
800038a6:	f9 d9 c0 01 	bfextu	r12,r9,0x0,0x1
800038aa:	5e fc       	retal	r12

800038ac <gpio_set_gpio_pin>:
800038ac:	30 18       	mov	r8,1
800038ae:	f0 0c 09 48 	lsl	r8,r8,r12
800038b2:	a5 9c       	lsr	r12,0x5
800038b4:	a9 6c       	lsl	r12,0x8
800038b6:	e0 2c f0 00 	sub	r12,61440
800038ba:	f9 48 00 54 	st.w	r12[84],r8
800038be:	f9 48 00 44 	st.w	r12[68],r8
800038c2:	99 18       	st.w	r12[0x4],r8
800038c4:	5e fc       	retal	r12

800038c6 <gpio_clr_gpio_pin>:
800038c6:	30 18       	mov	r8,1
800038c8:	f0 0c 09 48 	lsl	r8,r8,r12
800038cc:	a5 9c       	lsr	r12,0x5
800038ce:	a9 6c       	lsl	r12,0x8
800038d0:	e0 2c f0 00 	sub	r12,61440
800038d4:	f9 48 00 58 	st.w	r12[88],r8
800038d8:	f9 48 00 44 	st.w	r12[68],r8
800038dc:	99 18       	st.w	r12[0x4],r8
800038de:	5e fc       	retal	r12

800038e0 <gpio_enable_pin_interrupt>:
800038e0:	30 19       	mov	r9,1
800038e2:	f2 0c 09 48 	lsl	r8,r9,r12
800038e6:	a5 9c       	lsr	r12,0x5
800038e8:	a9 6c       	lsl	r12,0x8
800038ea:	e0 2c f0 00 	sub	r12,61440
800038ee:	f9 48 00 c4 	st.w	r12[196],r8
800038f2:	12 3b       	cp.w	r11,r9
800038f4:	c0 c0       	breq	8000390c <gpio_enable_pin_interrupt+0x2c>
800038f6:	c0 82       	brcc	80003906 <gpio_enable_pin_interrupt+0x26>
800038f8:	f9 48 00 a8 	st.w	r12[168],r8
800038fc:	f9 48 00 b8 	st.w	r12[184],r8
80003900:	f9 48 00 94 	st.w	r12[148],r8
80003904:	5e fd       	retal	0
80003906:	58 2b       	cp.w	r11,2
80003908:	c0 90       	breq	8000391a <gpio_enable_pin_interrupt+0x3a>
8000390a:	5e f9       	retal	r9
8000390c:	f9 48 00 a4 	st.w	r12[164],r8
80003910:	f9 48 00 b8 	st.w	r12[184],r8
80003914:	f9 48 00 94 	st.w	r12[148],r8
80003918:	5e fd       	retal	0
8000391a:	f9 48 00 a8 	st.w	r12[168],r8
8000391e:	f9 48 00 b4 	st.w	r12[180],r8
80003922:	f9 48 00 94 	st.w	r12[148],r8
80003926:	5e fd       	retal	0

80003928 <gpio_get_pin_interrupt_flag>:
80003928:	f8 08 16 05 	lsr	r8,r12,0x5
8000392c:	a9 68       	lsl	r8,0x8
8000392e:	e0 28 f0 00 	sub	r8,61440
80003932:	f0 f9 00 d0 	ld.w	r9,r8[208]
80003936:	f2 0c 0a 49 	lsr	r9,r9,r12
8000393a:	f9 d9 c0 01 	bfextu	r12,r9,0x0,0x1
8000393e:	5e fc       	retal	r12

80003940 <gpio_clear_pin_interrupt_flag>:
80003940:	30 18       	mov	r8,1
80003942:	f0 0c 09 48 	lsl	r8,r8,r12
80003946:	a5 9c       	lsr	r12,0x5
80003948:	a9 6c       	lsl	r12,0x8
8000394a:	e0 2c f0 00 	sub	r12,61440
8000394e:	f9 48 00 d8 	st.w	r12[216],r8
80003952:	5e fc       	retal	r12

80003954 <gpio_enable_gpio>:
80003954:	58 0b       	cp.w	r11,0
80003956:	5e 0c       	reteq	r12
80003958:	30 0a       	mov	r10,0
8000395a:	19 88       	ld.ub	r8,r12[0x0]
8000395c:	30 19       	mov	r9,1
8000395e:	f2 08 09 49 	lsl	r9,r9,r8
80003962:	a5 98       	lsr	r8,0x5
80003964:	a9 68       	lsl	r8,0x8
80003966:	e0 28 f0 00 	sub	r8,61440
8000396a:	f1 49 00 48 	st.w	r8[72],r9
8000396e:	91 19       	st.w	r8[0x4],r9
80003970:	2f ec       	sub	r12,-2
80003972:	2f fa       	sub	r10,-1
80003974:	16 3a       	cp.w	r10,r11
80003976:	cf 21       	brne	8000395a <gpio_enable_gpio+0x6>
80003978:	5e fc       	retal	r12

8000397a <gpio_enable_module>:
8000397a:	eb cd 40 c0 	pushm	r6-r7,lr
8000397e:	16 97       	mov	r7,r11
80003980:	58 0b       	cp.w	r11,0
80003982:	c3 f0       	breq	80003a00 <gpio_enable_module+0x86>
80003984:	30 06       	mov	r6,0
80003986:	0c 9e       	mov	lr,r6
80003988:	c0 d8       	rjmp	800039a2 <gpio_enable_module+0x28>
8000398a:	30 18       	mov	r8,1
8000398c:	f0 0b 09 48 	lsl	r8,r8,r11
80003990:	93 68       	st.w	r9[0x18],r8
80003992:	93 a8       	st.w	r9[0x28],r8
80003994:	93 28       	st.w	r9[0x8],r8
80003996:	2f fe       	sub	lr,-1
80003998:	30 08       	mov	r8,0
8000399a:	10 46       	or	r6,r8
8000399c:	0e 3e       	cp.w	lr,r7
8000399e:	c1 c0       	breq	800039d6 <gpio_enable_module+0x5c>
800039a0:	2f ec       	sub	r12,-2
800039a2:	19 8b       	ld.ub	r11,r12[0x0]
800039a4:	f6 08 16 05 	lsr	r8,r11,0x5
800039a8:	19 9a       	ld.ub	r10,r12[0x1]
800039aa:	f0 09 15 08 	lsl	r9,r8,0x8
800039ae:	30 18       	mov	r8,1
800039b0:	e0 29 f0 00 	sub	r9,61440
800039b4:	f0 0a 18 00 	cp.b	r10,r8
800039b8:	c1 20       	breq	800039dc <gpio_enable_module+0x62>
800039ba:	ce 83       	brcs	8000398a <gpio_enable_module+0x10>
800039bc:	30 28       	mov	r8,2
800039be:	f0 0a 18 00 	cp.b	r10,r8
800039c2:	c1 90       	breq	800039f4 <gpio_enable_module+0x7a>
800039c4:	30 38       	mov	r8,3
800039c6:	f0 0a 18 00 	cp.b	r10,r8
800039ca:	c0 f0       	breq	800039e8 <gpio_enable_module+0x6e>
800039cc:	30 18       	mov	r8,1
800039ce:	2f fe       	sub	lr,-1
800039d0:	10 46       	or	r6,r8
800039d2:	0e 3e       	cp.w	lr,r7
800039d4:	ce 61       	brne	800039a0 <gpio_enable_module+0x26>
800039d6:	0c 9c       	mov	r12,r6
800039d8:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800039dc:	30 18       	mov	r8,1
800039de:	f0 0b 09 48 	lsl	r8,r8,r11
800039e2:	93 58       	st.w	r9[0x14],r8
800039e4:	93 a8       	st.w	r9[0x28],r8
800039e6:	cd 7b       	rjmp	80003994 <gpio_enable_module+0x1a>
800039e8:	30 18       	mov	r8,1
800039ea:	f0 0b 09 48 	lsl	r8,r8,r11
800039ee:	93 58       	st.w	r9[0x14],r8
800039f0:	93 98       	st.w	r9[0x24],r8
800039f2:	cd 1b       	rjmp	80003994 <gpio_enable_module+0x1a>
800039f4:	30 18       	mov	r8,1
800039f6:	f0 0b 09 48 	lsl	r8,r8,r11
800039fa:	93 68       	st.w	r9[0x18],r8
800039fc:	93 98       	st.w	r9[0x24],r8
800039fe:	cc bb       	rjmp	80003994 <gpio_enable_module+0x1a>
80003a00:	16 96       	mov	r6,r11
80003a02:	0c 9c       	mov	r12,r6
80003a04:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc

80003a08 <_int_handler_table>:
80003a08:	00 00 00 01 00 00 05 cc 00 00 00 0b 00 00 05 d0     ................
80003a18:	00 00 00 0e 00 00 05 fc 00 00 00 0f 00 00 06 34     ...............4
80003a28:	00 00 00 01 00 00 06 70 00 00 00 01 00 00 06 74     .......p.......t
80003a38:	00 00 00 01 00 00 06 78 00 00 00 01 00 00 06 7c     .......x.......|
80003a48:	00 00 00 01 00 00 06 80 00 00 00 01 00 00 06 84     ................
80003a58:	00 00 00 01 00 00 06 88 00 00 00 01 00 00 06 8c     ................
80003a68:	00 00 00 01 00 00 06 90 00 00 00 01 00 00 06 94     ................
80003a78:	00 00 00 03 00 00 06 98 00 00 00 01 00 00 06 a4     ................
80003a88:	00 00 00 01 00 00 06 a8 00 00 00 01 00 00 06 ac     ................
80003a98:	00 00 00 01 00 00 06 b0 00 00 00 01 00 00 06 b4     ................

80003aa8 <_unhandled_interrupt>:
80003aa8:	c0 08       	rjmp	80003aa8 <_unhandled_interrupt>
80003aaa:	d7 03       	nop

80003aac <INTC_init_interrupts>:
80003aac:	eb cd 40 80 	pushm	r7,lr
80003ab0:	fe ce 00 a8 	sub	lr,pc,168
80003ab4:	fe c8 97 78 	sub	r8,pc,-26760
80003ab8:	30 0a       	mov	r10,0
80003aba:	70 07       	ld.w	r7,r8[0x0]
80003abc:	7c 0c       	ld.w	r12,lr[0x0]
80003abe:	14 9b       	mov	r11,r10
80003ac0:	18 3a       	cp.w	r10,r12
80003ac2:	c0 e3       	brcs	80003ade <INTC_init_interrupts+0x32>
80003ac4:	fe 78 08 00 	mov	r8,-63488
80003ac8:	f0 0b 09 27 	st.w	r8[r11<<0x2],r7
80003acc:	2f fb       	sub	r11,-1
80003ace:	59 3b       	cp.w	r11,19
80003ad0:	e0 8b 00 11 	brhi	80003af2 <INTC_init_interrupts+0x46>
80003ad4:	fc 0b 03 3c 	ld.w	r12,lr[r11<<0x3]
80003ad8:	30 0a       	mov	r10,0
80003ada:	18 3a       	cp.w	r10,r12
80003adc:	cf 42       	brcc	80003ac4 <INTC_init_interrupts+0x18>
80003ade:	fc 0b 00 38 	add	r8,lr,r11<<0x3
80003ae2:	70 19       	ld.w	r9,r8[0x4]
80003ae4:	fe c8 00 3c 	sub	r8,pc,60
80003ae8:	f2 0a 00 29 	add	r9,r9,r10<<0x2
80003aec:	2f fa       	sub	r10,-1
80003aee:	93 08       	st.w	r9[0x0],r8
80003af0:	ce 8b       	rjmp	80003ac0 <INTC_init_interrupts+0x14>
80003af2:	e3 cd 80 80 	ldm	sp++,r7,pc
80003af6:	d7 03       	nop

80003af8 <INTC_register_interrupt>:
80003af8:	d4 01       	pushm	lr
80003afa:	fe c8 00 f2 	sub	r8,pc,242
80003afe:	fd db c0 05 	bfextu	lr,r11,0x0,0x5
80003b02:	a5 9b       	lsr	r11,0x5
80003b04:	f0 0b 00 38 	add	r8,r8,r11<<0x3
80003b08:	70 19       	ld.w	r9,r8[0x4]
80003b0a:	f2 0e 00 2e 	add	lr,r9,lr<<0x2
80003b0e:	9d 0c       	st.w	lr[0x0],r12
80003b10:	f5 da c0 02 	bfextu	r10,r10,0x0,0x2
80003b14:	fe c8 97 d8 	sub	r8,pc,-26664
80003b18:	fe 79 08 00 	mov	r9,-63488
80003b1c:	f0 0a 03 2c 	ld.w	r12,r8[r10<<0x2]
80003b20:	f2 0b 09 2c 	st.w	r9[r11<<0x2],r12
80003b24:	d8 02       	popm	pc
80003b26:	d7 03       	nop

80003b28 <_get_interrupt_handler>:
80003b28:	f8 0c 11 03 	rsub	r12,r12,3
80003b2c:	a3 6c       	lsl	r12,0x2
80003b2e:	e0 2c f8 00 	sub	r12,63488
80003b32:	f8 fa 02 00 	ld.w	r10,r12[512]
80003b36:	f4 08 15 02 	lsl	r8,r10,0x2
80003b3a:	e0 28 f8 00 	sub	r8,63488
80003b3e:	f0 fc 01 00 	ld.w	r12,r8[256]
80003b42:	58 0c       	cp.w	r12,0
80003b44:	5e 0c       	reteq	r12
80003b46:	f8 08 12 00 	clz	r8,r12
80003b4a:	fe c9 01 42 	sub	r9,pc,322
80003b4e:	f0 08 11 1f 	rsub	r8,r8,31
80003b52:	f2 0a 00 39 	add	r9,r9,r10<<0x3
80003b56:	72 1a       	ld.w	r10,r9[0x4]
80003b58:	f4 08 03 2c 	ld.w	r12,r10[r8<<0x2]
80003b5c:	5e fc       	retal	r12
80003b5e:	d7 03       	nop

80003b60 <pm_cksel>:
80003b60:	eb cd 40 e0 	pushm	r5-r7,lr
80003b64:	fa c5 ff f0 	sub	r5,sp,-16
80003b68:	18 97       	mov	r7,r12
80003b6a:	6a 16       	ld.w	r6,r5[0x4]
80003b6c:	6a 0e       	ld.w	lr,r5[0x0]
80003b6e:	ed d6 c0 03 	bfextu	r6,r6,0x0,0x3
80003b72:	fd de c0 01 	bfextu	lr,lr,0x0,0x1
80003b76:	30 0c       	mov	r12,0
80003b78:	f9 d6 d0 03 	bfins	r12,r6,0x0,0x3
80003b7c:	f9 de d0 e1 	bfins	r12,lr,0x7,0x1
80003b80:	f9 d6 d1 03 	bfins	r12,r6,0x8,0x3
80003b84:	f9 de d1 e1 	bfins	r12,lr,0xf,0x1
80003b88:	f9 da d2 03 	bfins	r12,r10,0x10,0x3
80003b8c:	f9 db d2 e1 	bfins	r12,r11,0x17,0x1
80003b90:	f9 d8 d3 03 	bfins	r12,r8,0x18,0x3
80003b94:	f9 d9 d3 e1 	bfins	r12,r9,0x1f,0x1
80003b98:	8f 1c       	st.w	r7[0x4],r12
80003b9a:	6f 58       	ld.w	r8,r7[0x54]
80003b9c:	ed b8 00 05 	bld	r8,0x5
80003ba0:	cf d1       	brne	80003b9a <pm_cksel+0x3a>
80003ba2:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80003ba6 <pm_pll_setup>:
80003ba6:	d4 01       	pushm	lr
80003ba8:	f8 0b 00 2b 	add	r11,r12,r11<<0x2
80003bac:	40 1e       	lddsp	lr,sp[0x4]
80003bae:	30 0c       	mov	r12,0
80003bb0:	f9 d8 d0 21 	bfins	r12,r8,0x1,0x1
80003bb4:	f9 d9 d1 04 	bfins	r12,r9,0x8,0x4
80003bb8:	f9 da d2 04 	bfins	r12,r10,0x10,0x4
80003bbc:	f9 de d3 06 	bfins	r12,lr,0x18,0x6
80003bc0:	97 8c       	st.w	r11[0x20],r12
80003bc2:	d8 02       	popm	pc

80003bc4 <pm_pll_set_option>:
80003bc4:	f8 0b 00 2b 	add	r11,r12,r11<<0x2
80003bc8:	f5 e9 10 19 	or	r9,r10,r9<<0x1
80003bcc:	f3 e8 10 29 	or	r9,r9,r8<<0x2
80003bd0:	76 88       	ld.w	r8,r11[0x20]
80003bd2:	f1 d9 d0 43 	bfins	r8,r9,0x2,0x3
80003bd6:	97 88       	st.w	r11[0x20],r8
80003bd8:	5e fc       	retal	r12

80003bda <pm_pll_enable>:
80003bda:	f8 0b 00 2b 	add	r11,r12,r11<<0x2
80003bde:	76 88       	ld.w	r8,r11[0x20]
80003be0:	a1 a8       	sbr	r8,0x0
80003be2:	97 88       	st.w	r11[0x20],r8
80003be4:	5e fc       	retal	r12

80003be6 <pm_wait_for_pll0_locked>:
80003be6:	79 58       	ld.w	r8,r12[0x54]
80003be8:	ed b8 00 00 	bld	r8,0x0
80003bec:	cf d1       	brne	80003be6 <pm_wait_for_pll0_locked>
80003bee:	5e fc       	retal	r12

80003bf0 <pm_switch_to_clock>:
80003bf0:	78 08       	ld.w	r8,r12[0x0]
80003bf2:	f1 db d0 02 	bfins	r8,r11,0x0,0x2
80003bf6:	99 08       	st.w	r12[0x0],r8
80003bf8:	5e fc       	retal	r12

80003bfa <pm_switch_to_osc0>:
80003bfa:	ec 5b bb 9f 	cp.w	r11,899999
80003bfe:	e0 8b 00 18 	brhi	80003c2e <pm_switch_to_osc0+0x34>
80003c02:	30 4b       	mov	r11,4
80003c04:	78 a8       	ld.w	r8,r12[0x28]
80003c06:	f1 db d0 03 	bfins	r8,r11,0x0,0x3
80003c0a:	99 a8       	st.w	r12[0x28],r8
80003c0c:	78 a9       	ld.w	r9,r12[0x28]
80003c0e:	f3 da d1 03 	bfins	r9,r10,0x8,0x3
80003c12:	99 a9       	st.w	r12[0x28],r9
80003c14:	78 08       	ld.w	r8,r12[0x0]
80003c16:	a3 a8       	sbr	r8,0x2
80003c18:	99 08       	st.w	r12[0x0],r8
80003c1a:	79 58       	ld.w	r8,r12[0x54]
80003c1c:	ed b8 00 07 	bld	r8,0x7
80003c20:	cf d1       	brne	80003c1a <pm_switch_to_osc0+0x20>
80003c22:	78 08       	ld.w	r8,r12[0x0]
80003c24:	30 19       	mov	r9,1
80003c26:	f1 d9 d0 02 	bfins	r8,r9,0x0,0x2
80003c2a:	99 08       	st.w	r12[0x0],r8
80003c2c:	5e fc       	retal	r12
80003c2e:	e0 69 c6 bf 	mov	r9,50879
80003c32:	ea 19 00 2d 	orh	r9,0x2d
80003c36:	12 3b       	cp.w	r11,r9
80003c38:	e0 88 00 0d 	brls	80003c52 <pm_switch_to_osc0+0x58>
80003c3c:	e0 69 11 ff 	mov	r9,4607
80003c40:	ea 19 00 7a 	orh	r9,0x7a
80003c44:	12 3b       	cp.w	r11,r9
80003c46:	f9 b8 0b 07 	movhi	r8,7
80003c4a:	f9 b8 08 06 	movls	r8,6
80003c4e:	10 9b       	mov	r11,r8
80003c50:	cd ab       	rjmp	80003c04 <pm_switch_to_osc0+0xa>
80003c52:	30 58       	mov	r8,5
80003c54:	10 9b       	mov	r11,r8
80003c56:	cd 7b       	rjmp	80003c04 <pm_switch_to_osc0+0xa>

80003c58 <pwm_channel_init>:
80003c58:	58 0b       	cp.w	r11,0
80003c5a:	c1 00       	breq	80003c7a <pwm_channel_init+0x22>
80003c5c:	58 6c       	cp.w	r12,6
80003c5e:	e0 8b 00 0e 	brhi	80003c7a <pwm_channel_init+0x22>
80003c62:	76 09       	ld.w	r9,r11[0x0]
80003c64:	f8 08 15 05 	lsl	r8,r12,0x5
80003c68:	76 1a       	ld.w	r10,r11[0x4]
80003c6a:	e0 28 ce 00 	sub	r8,52736
80003c6e:	30 0c       	mov	r12,0
80003c70:	10 a9       	st.w	r8++,r9
80003c72:	76 29       	ld.w	r9,r11[0x8]
80003c74:	10 aa       	st.w	r8++,r10
80003c76:	91 09       	st.w	r8[0x0],r9
80003c78:	5e fc       	retal	r12
80003c7a:	5e ff       	retal	1

80003c7c <pwm_start_channels>:
80003c7c:	18 99       	mov	r9,r12
80003c7e:	e0 1c ff 80 	andl	r12,0xff80
80003c82:	c0 51       	brne	80003c8c <pwm_start_channels+0x10>
80003c84:	fe 78 30 00 	mov	r8,-53248
80003c88:	91 19       	st.w	r8[0x4],r9
80003c8a:	5e fc       	retal	r12
80003c8c:	5e ff       	retal	1

80003c8e <pwm_init>:
80003c8e:	e1 b8 00 00 	mfsr	r8,0x0
80003c92:	58 0c       	cp.w	r12,0
80003c94:	c2 10       	breq	80003cd6 <pwm_init+0x48>
80003c96:	ed b8 00 10 	bld	r8,0x10
80003c9a:	c1 61       	brne	80003cc6 <pwm_init+0x38>
80003c9c:	fe 78 30 00 	mov	r8,-53248
80003ca0:	37 f9       	mov	r9,127
80003ca2:	91 59       	st.w	r8[0x14],r9
80003ca4:	70 7a       	ld.w	r10,r8[0x1c]
80003ca6:	78 0b       	ld.w	r11,r12[0x0]
80003ca8:	78 19       	ld.w	r9,r12[0x4]
80003caa:	78 2a       	ld.w	r10,r12[0x8]
80003cac:	78 38       	ld.w	r8,r12[0xc]
80003cae:	b9 6a       	lsl	r10,0x18
80003cb0:	a9 68       	lsl	r8,0x8
80003cb2:	30 0c       	mov	r12,0
80003cb4:	f1 eb 11 08 	or	r8,r8,r11<<0x10
80003cb8:	fe 7b 30 00 	mov	r11,-53248
80003cbc:	12 48       	or	r8,r9
80003cbe:	f5 e8 10 09 	or	r9,r10,r8
80003cc2:	97 09       	st.w	r11[0x0],r9
80003cc4:	5e fc       	retal	r12
80003cc6:	d3 03       	ssrf	0x10
80003cc8:	fe 78 30 00 	mov	r8,-53248
80003ccc:	37 f9       	mov	r9,127
80003cce:	91 59       	st.w	r8[0x14],r9
80003cd0:	70 7a       	ld.w	r10,r8[0x1c]
80003cd2:	d5 03       	csrf	0x10
80003cd4:	ce 9b       	rjmp	80003ca6 <pwm_init+0x18>
80003cd6:	5e ff       	retal	1

80003cd8 <spi_initMaster>:
80003cd8:	d4 01       	pushm	lr
80003cda:	30 18       	mov	r8,1
80003cdc:	f7 39 00 0d 	ld.ub	r9,r11[13]
80003ce0:	f0 09 18 00 	cp.b	r9,r8
80003ce4:	e0 88 00 05 	brls	80003cee <spi_initMaster+0x16>
80003ce8:	30 2e       	mov	lr,2
80003cea:	1c 9c       	mov	r12,lr
80003cec:	d8 02       	popm	pc
80003cee:	e0 68 00 80 	mov	r8,128
80003cf2:	30 19       	mov	r9,1
80003cf4:	99 08       	st.w	r12[0x0],r8
80003cf6:	30 0a       	mov	r10,0
80003cf8:	78 18       	ld.w	r8,r12[0x4]
80003cfa:	f7 3b 00 0d 	ld.ub	r11,r11[13]
80003cfe:	14 9e       	mov	lr,r10
80003d00:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80003d04:	30 f9       	mov	r9,15
80003d06:	f1 db d0 81 	bfins	r8,r11,0x4,0x1
80003d0a:	f1 da d0 e1 	bfins	r8,r10,0x7,0x1
80003d0e:	f1 d9 d2 04 	bfins	r8,r9,0x10,0x4
80003d12:	99 18       	st.w	r12[0x4],r8
80003d14:	1c 9c       	mov	r12,lr
80003d16:	d8 02       	popm	pc

80003d18 <spi_selectionMode>:
80003d18:	eb cd 40 80 	pushm	r7,lr
80003d1c:	30 18       	mov	r8,1
80003d1e:	14 9e       	mov	lr,r10
80003d20:	12 97       	mov	r7,r9
80003d22:	f0 0a 18 00 	cp.b	r10,r8
80003d26:	5f ba       	srhi	r10
80003d28:	f0 0b 18 00 	cp.b	r11,r8
80003d2c:	5f b9       	srhi	r9
80003d2e:	14 49       	or	r9,r10
80003d30:	c0 b1       	brne	80003d46 <spi_selectionMode+0x2e>
80003d32:	78 18       	ld.w	r8,r12[0x4]
80003d34:	f1 db d0 21 	bfins	r8,r11,0x1,0x1
80003d38:	f1 de d0 41 	bfins	r8,lr,0x2,0x1
80003d3c:	f1 d7 d3 08 	bfins	r8,r7,0x18,0x8
80003d40:	99 18       	st.w	r12[0x4],r8
80003d42:	e3 cf 80 80 	ldm	sp++,r7,pc,r12=0
80003d46:	30 2c       	mov	r12,2
80003d48:	e3 cd 80 80 	ldm	sp++,r7,pc

80003d4c <spi_selectChip>:
80003d4c:	d4 01       	pushm	lr
80003d4e:	78 18       	ld.w	r8,r12[0x4]
80003d50:	18 9e       	mov	lr,r12
80003d52:	ea 18 00 0f 	orh	r8,0xf
80003d56:	99 18       	st.w	r12[0x4],r8
80003d58:	78 1c       	ld.w	r12,r12[0x4]
80003d5a:	e2 1c 00 04 	andl	r12,0x4,COH
80003d5e:	c1 10       	breq	80003d80 <spi_selectChip+0x34>
80003d60:	30 e8       	mov	r8,14
80003d62:	f0 0b 18 00 	cp.b	r11,r8
80003d66:	e0 8b 00 1c 	brhi	80003d9e <spi_selectChip+0x52>
80003d6a:	7c 19       	ld.w	r9,lr[0x4]
80003d6c:	f6 08 15 10 	lsl	r8,r11,0x10
80003d70:	30 0c       	mov	r12,0
80003d72:	ea 18 ff f0 	orh	r8,0xfff0
80003d76:	e8 18 ff ff 	orl	r8,0xffff
80003d7a:	12 68       	and	r8,r9
80003d7c:	9d 18       	st.w	lr[0x4],r8
80003d7e:	d8 02       	popm	pc
80003d80:	30 38       	mov	r8,3
80003d82:	f0 0b 18 00 	cp.b	r11,r8
80003d86:	e0 8b 00 0c 	brhi	80003d9e <spi_selectChip+0x52>
80003d8a:	7c 1a       	ld.w	r10,lr[0x4]
80003d8c:	f6 c8 ff f0 	sub	r8,r11,-16
80003d90:	30 19       	mov	r9,1
80003d92:	f2 08 09 49 	lsl	r9,r9,r8
80003d96:	5c d9       	com	r9
80003d98:	14 69       	and	r9,r10
80003d9a:	9d 19       	st.w	lr[0x4],r9
80003d9c:	d8 02       	popm	pc
80003d9e:	30 2c       	mov	r12,2
80003da0:	d8 02       	popm	pc

80003da2 <spi_unselectChip>:
80003da2:	e0 69 27 10 	mov	r9,10000
80003da6:	c0 48       	rjmp	80003dae <spi_unselectChip+0xc>
80003da8:	20 19       	sub	r9,1
80003daa:	5b f9       	cp.w	r9,-1
80003dac:	c0 d0       	breq	80003dc6 <spi_unselectChip+0x24>
80003dae:	78 48       	ld.w	r8,r12[0x10]
80003db0:	ed b8 00 09 	bld	r8,0x9
80003db4:	cf a1       	brne	80003da8 <spi_unselectChip+0x6>
80003db6:	78 18       	ld.w	r8,r12[0x4]
80003db8:	ea 18 00 0f 	orh	r8,0xf
80003dbc:	99 18       	st.w	r12[0x4],r8
80003dbe:	fc 19 01 00 	movh	r9,0x100
80003dc2:	99 09       	st.w	r12[0x0],r9
80003dc4:	5e fd       	retal	0
80003dc6:	5e ff       	retal	1

80003dc8 <spi_setupChipReg>:
80003dc8:	eb cd 40 fc 	pushm	r2-r7,lr
80003dcc:	30 32       	mov	r2,3
80003dce:	18 93       	mov	r3,r12
80003dd0:	f7 3e 00 0c 	ld.ub	lr,r11[12]
80003dd4:	e4 0e 18 00 	cp.b	lr,r2
80003dd8:	e0 8b 00 4f 	brhi	80003e76 <spi_setupChipReg+0xae>
80003ddc:	f7 35 00 0b 	ld.ub	r5,r11[11]
80003de0:	30 14       	mov	r4,1
80003de2:	e8 05 18 00 	cp.b	r5,r4
80003de6:	e0 8b 00 48 	brhi	80003e76 <spi_setupChipReg+0xae>
80003dea:	f7 3c 00 08 	ld.ub	r12,r11[8]
80003dee:	30 78       	mov	r8,7
80003df0:	f0 0c 18 00 	cp.b	r12,r8
80003df4:	e0 88 00 41 	brls	80003e76 <spi_setupChipReg+0xae>
80003df8:	31 08       	mov	r8,16
80003dfa:	f0 0c 18 00 	cp.b	r12,r8
80003dfe:	e0 8b 00 3c 	brhi	80003e76 <spi_setupChipReg+0xae>
80003e02:	76 18       	ld.w	r8,r11[0x4]
80003e04:	f0 09 16 01 	lsr	r9,r8,0x1
80003e08:	f4 09 00 09 	add	r9,r10,r9
80003e0c:	f2 08 0d 06 	divu	r6,r9,r8
80003e10:	ec ca 00 01 	sub	r10,r6,1
80003e14:	e0 4a 00 fe 	cp.w	r10,254
80003e18:	e0 8b 00 2f 	brhi	80003e76 <spi_setupChipReg+0xae>
80003e1c:	58 06       	cp.w	r6,0
80003e1e:	c2 c5       	brlt	80003e76 <spi_setupChipReg+0xae>
80003e20:	f8 c9 00 08 	sub	r9,r12,8
80003e24:	fc 08 16 01 	lsr	r8,lr,0x1
80003e28:	30 0a       	mov	r10,0
80003e2a:	ec 1e 00 01 	eorl	lr,0x1
80003e2e:	f5 d8 d0 01 	bfins	r10,r8,0x0,0x1
80003e32:	17 8c       	ld.ub	r12,r11[0x0]
80003e34:	f5 de d0 21 	bfins	r10,lr,0x1,0x1
80003e38:	f7 38 00 09 	ld.ub	r8,r11[9]
80003e3c:	f5 d5 d0 61 	bfins	r10,r5,0x3,0x1
80003e40:	f5 d9 d0 84 	bfins	r10,r9,0x4,0x4
80003e44:	f7 39 00 0a 	ld.ub	r9,r11[10]
80003e48:	f5 d6 d1 08 	bfins	r10,r6,0x8,0x8
80003e4c:	f5 d8 d2 08 	bfins	r10,r8,0x10,0x8
80003e50:	f5 d9 d3 08 	bfins	r10,r9,0x18,0x8
80003e54:	e8 0c 18 00 	cp.b	r12,r4
80003e58:	c1 50       	breq	80003e82 <spi_setupChipReg+0xba>
80003e5a:	c0 42       	brcc	80003e62 <spi_setupChipReg+0x9a>
80003e5c:	87 ca       	st.w	r3[0x30],r10
80003e5e:	e3 cf 80 fc 	ldm	sp++,r2-r7,pc,r12=0
80003e62:	30 28       	mov	r8,2
80003e64:	f0 0c 18 00 	cp.b	r12,r8
80003e68:	c0 a0       	breq	80003e7c <spi_setupChipReg+0xb4>
80003e6a:	e4 0c 18 00 	cp.b	r12,r2
80003e6e:	c0 41       	brne	80003e76 <spi_setupChipReg+0xae>
80003e70:	87 fa       	st.w	r3[0x3c],r10
80003e72:	e3 cf 80 fc 	ldm	sp++,r2-r7,pc,r12=0
80003e76:	30 2c       	mov	r12,2
80003e78:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
80003e7c:	87 ea       	st.w	r3[0x38],r10
80003e7e:	e3 cf 80 fc 	ldm	sp++,r2-r7,pc,r12=0
80003e82:	87 da       	st.w	r3[0x34],r10
80003e84:	e3 cf 80 fc 	ldm	sp++,r2-r7,pc,r12=0

80003e88 <spi_enable>:
80003e88:	30 18       	mov	r8,1
80003e8a:	99 08       	st.w	r12[0x0],r8
80003e8c:	5e fc       	retal	r12

80003e8e <spi_write>:
80003e8e:	e0 69 27 10 	mov	r9,10000
80003e92:	c0 48       	rjmp	80003e9a <spi_write+0xc>
80003e94:	20 19       	sub	r9,1
80003e96:	5b f9       	cp.w	r9,-1
80003e98:	c0 70       	breq	80003ea6 <spi_write+0x18>
80003e9a:	78 48       	ld.w	r8,r12[0x10]
80003e9c:	ed b8 00 01 	bld	r8,0x1
80003ea0:	cf a1       	brne	80003e94 <spi_write+0x6>
80003ea2:	99 3b       	st.w	r12[0xc],r11
80003ea4:	5e fd       	retal	0
80003ea6:	5e ff       	retal	1

80003ea8 <spi_read>:
80003ea8:	e0 69 27 10 	mov	r9,10000
80003eac:	c0 48       	rjmp	80003eb4 <spi_read+0xc>
80003eae:	20 19       	sub	r9,1
80003eb0:	5b f9       	cp.w	r9,-1
80003eb2:	c0 b0       	breq	80003ec8 <spi_read+0x20>
80003eb4:	78 48       	ld.w	r8,r12[0x10]
80003eb6:	e2 18 02 01 	andl	r8,0x201,COH
80003eba:	e0 48 02 01 	cp.w	r8,513
80003ebe:	cf 81       	brne	80003eae <spi_read+0x6>
80003ec0:	78 28       	ld.w	r8,r12[0x8]
80003ec2:	30 0c       	mov	r12,0
80003ec4:	b6 08       	st.h	r11[0x0],r8
80003ec6:	5e fc       	retal	r12
80003ec8:	5e ff       	retal	1

80003eca <tc_init_waveform>:
80003eca:	18 98       	mov	r8,r12
80003ecc:	76 0c       	ld.w	r12,r11[0x0]
80003ece:	58 2c       	cp.w	r12,2
80003ed0:	e0 8b 00 4a 	brhi	80003f64 <tc_init_waveform+0x9a>
80003ed4:	76 19       	ld.w	r9,r11[0x4]
80003ed6:	12 9a       	mov	r10,r9
80003ed8:	e6 1a c0 00 	andh	r10,0xc000,COH
80003edc:	12 9b       	mov	r11,r9
80003ede:	a7 6c       	lsl	r12,0x6
80003ee0:	e6 1b 30 00 	andh	r11,0x3000,COH
80003ee4:	10 0c       	add	r12,r8
80003ee6:	f1 d9 c0 03 	bfextu	r8,r9,0x0,0x3
80003eea:	af b8       	sbr	r8,0xf
80003eec:	14 48       	or	r8,r10
80003eee:	12 9a       	mov	r10,r9
80003ef0:	e6 1a 0c 00 	andh	r10,0xc00,COH
80003ef4:	16 48       	or	r8,r11
80003ef6:	12 9b       	mov	r11,r9
80003ef8:	14 48       	or	r8,r10
80003efa:	e6 1b 03 00 	andh	r11,0x300,COH
80003efe:	12 9a       	mov	r10,r9
80003f00:	e6 1a 00 c0 	andh	r10,0xc0,COH
80003f04:	16 48       	or	r8,r11
80003f06:	12 9b       	mov	r11,r9
80003f08:	14 48       	or	r8,r10
80003f0a:	e6 1b 00 30 	andh	r11,0x30,COH
80003f0e:	12 9a       	mov	r10,r9
80003f10:	e6 1a 00 0c 	andh	r10,0xc,COH
80003f14:	16 48       	or	r8,r11
80003f16:	12 9b       	mov	r11,r9
80003f18:	14 48       	or	r8,r10
80003f1a:	e6 1b 00 03 	andh	r11,0x3,COH
80003f1e:	12 9a       	mov	r10,r9
80003f20:	e2 1a 60 00 	andl	r10,0x6000,COH
80003f24:	16 48       	or	r8,r11
80003f26:	12 9b       	mov	r11,r9
80003f28:	14 48       	or	r8,r10
80003f2a:	e2 1b 10 00 	andl	r11,0x1000,COH
80003f2e:	12 9a       	mov	r10,r9
80003f30:	e2 1a 0c 00 	andl	r10,0xc00,COH
80003f34:	2f cc       	sub	r12,-4
80003f36:	16 48       	or	r8,r11
80003f38:	12 9b       	mov	r11,r9
80003f3a:	14 48       	or	r8,r10
80003f3c:	e2 1b 03 00 	andl	r11,0x300,COH
80003f40:	12 9a       	mov	r10,r9
80003f42:	e2 1a 00 80 	andl	r10,0x80,COH
80003f46:	16 48       	or	r8,r11
80003f48:	12 9b       	mov	r11,r9
80003f4a:	14 48       	or	r8,r10
80003f4c:	e2 1b 00 40 	andl	r11,0x40,COH
80003f50:	12 9a       	mov	r10,r9
80003f52:	16 48       	or	r8,r11
80003f54:	e2 1a 00 30 	andl	r10,0x30,COH
80003f58:	e2 19 00 08 	andl	r9,0x8,COH
80003f5c:	14 48       	or	r8,r10
80003f5e:	12 48       	or	r8,r9
80003f60:	99 08       	st.w	r12[0x0],r8
80003f62:	5e fd       	retal	0
80003f64:	5e fe       	retal	-1

80003f66 <tc_start>:
80003f66:	f6 09 15 06 	lsl	r9,r11,0x6
80003f6a:	58 2b       	cp.w	r11,2
80003f6c:	f9 bc 0b ff 	movhi	r12,-1
80003f70:	f3 dc e8 09 	addls	r9,r9,r12
80003f74:	f9 b8 08 05 	movls	r8,5
80003f78:	f3 f8 8a 00 	st.wls	r9[0x0],r8
80003f7c:	f9 bc 08 00 	movls	r12,0
80003f80:	5e fc       	retal	r12

80003f82 <tc_write_rc>:
80003f82:	58 2b       	cp.w	r11,2
80003f84:	e0 8b 00 15 	brhi	80003fae <tc_write_rc+0x2c>
80003f88:	f6 08 15 06 	lsl	r8,r11,0x6
80003f8c:	f0 0c 00 0c 	add	r12,r8,r12
80003f90:	f8 c9 ff fc 	sub	r9,r12,-4
80003f94:	78 18       	ld.w	r8,r12[0x4]
80003f96:	ed b8 00 0f 	bld	r8,0xf
80003f9a:	c0 91       	brne	80003fac <tc_write_rc+0x2a>
80003f9c:	78 78       	ld.w	r8,r12[0x1c]
80003f9e:	f8 c9 ff e4 	sub	r9,r12,-28
80003fa2:	e0 18 00 00 	andl	r8,0x0
80003fa6:	f5 e8 10 08 	or	r8,r10,r8
80003faa:	93 08       	st.w	r9[0x0],r8
80003fac:	5e fa       	retal	r10
80003fae:	5e fe       	retal	-1

80003fb0 <tc_configure_interrupts>:
80003fb0:	eb cd 40 fe 	pushm	r1-r7,lr
80003fb4:	e1 be 00 00 	mfsr	lr,0x0
80003fb8:	58 2b       	cp.w	r11,2
80003fba:	e0 8b 00 69 	brhi	8000408c <tc_configure_interrupts+0xdc>
80003fbe:	f6 08 15 06 	lsl	r8,r11,0x6
80003fc2:	74 09       	ld.w	r9,r10[0x0]
80003fc4:	f0 0c 00 03 	add	r3,r8,r12
80003fc8:	ef d9 c0 01 	bfextu	r7,r9,0x0,0x1
80003fcc:	e3 d9 c0 e1 	bfextu	r1,r9,0x7,0x1
80003fd0:	e5 d9 c0 c1 	bfextu	r2,r9,0x6,0x1
80003fd4:	f5 d9 c0 a1 	bfextu	r10,r9,0x5,0x1
80003fd8:	f7 d9 c0 81 	bfextu	r11,r9,0x4,0x1
80003fdc:	f9 d9 c0 61 	bfextu	r12,r9,0x3,0x1
80003fe0:	eb d9 c0 41 	bfextu	r5,r9,0x2,0x1
80003fe4:	ed d9 c0 21 	bfextu	r6,r9,0x1,0x1
80003fe8:	e4 08 15 06 	lsl	r8,r2,0x6
80003fec:	f1 e1 10 78 	or	r8,r8,r1<<0x7
80003ff0:	0e 48       	or	r8,r7
80003ff2:	f1 ea 10 58 	or	r8,r8,r10<<0x5
80003ff6:	f1 eb 10 48 	or	r8,r8,r11<<0x4
80003ffa:	f1 ec 10 38 	or	r8,r8,r12<<0x3
80003ffe:	f1 e5 10 28 	or	r8,r8,r5<<0x2
80004002:	f1 e6 10 18 	or	r8,r8,r6<<0x1
80004006:	87 98       	st.w	r3[0x24],r8
80004008:	ee 1e 00 01 	eorh	lr,0x1
8000400c:	e6 c9 ff dc 	sub	r9,r3,-36
80004010:	e9 de c2 01 	bfextu	r4,lr,0x10,0x1
80004014:	c0 20       	breq	80004018 <tc_configure_interrupts+0x68>
80004016:	d3 03       	ssrf	0x10
80004018:	58 0a       	cp.w	r10,0
8000401a:	f9 ba 00 20 	moveq	r10,32
8000401e:	f9 ba 01 00 	movne	r10,0
80004022:	58 02       	cp.w	r2,0
80004024:	f9 b9 00 40 	moveq	r9,64
80004028:	f9 b9 01 00 	movne	r9,0
8000402c:	58 05       	cp.w	r5,0
8000402e:	f9 be 00 04 	moveq	lr,4
80004032:	f9 be 01 00 	movne	lr,0
80004036:	58 0b       	cp.w	r11,0
80004038:	f9 bb 00 10 	moveq	r11,16
8000403c:	f9 bb 01 00 	movne	r11,0
80004040:	58 0c       	cp.w	r12,0
80004042:	f9 bc 00 08 	moveq	r12,8
80004046:	f9 bc 01 00 	movne	r12,0
8000404a:	58 06       	cp.w	r6,0
8000404c:	f9 b6 00 02 	moveq	r6,2
80004050:	f9 b6 01 00 	movne	r6,0
80004054:	ec 17 00 01 	eorl	r7,0x1
80004058:	e6 c5 ff e0 	sub	r5,r3,-32
8000405c:	e0 68 00 80 	mov	r8,128
80004060:	58 01       	cp.w	r1,0
80004062:	f9 b8 01 00 	movne	r8,0
80004066:	0e 48       	or	r8,r7
80004068:	12 48       	or	r8,r9
8000406a:	14 48       	or	r8,r10
8000406c:	16 48       	or	r8,r11
8000406e:	18 48       	or	r8,r12
80004070:	1c 48       	or	r8,lr
80004072:	0c 48       	or	r8,r6
80004074:	87 a8       	st.w	r3[0x28],r8
80004076:	6a 0a       	ld.w	r10,r5[0x0]
80004078:	e6 c9 ff d8 	sub	r9,r3,-40
8000407c:	58 04       	cp.w	r4,0
8000407e:	c0 40       	breq	80004086 <tc_configure_interrupts+0xd6>
80004080:	d5 03       	csrf	0x10
80004082:	e3 cf 80 fe 	ldm	sp++,r1-r7,pc,r12=0
80004086:	08 9c       	mov	r12,r4
80004088:	e3 cd 80 fe 	ldm	sp++,r1-r7,pc
8000408c:	e3 cf c0 fe 	ldm	sp++,r1-r7,pc,r12=-1

80004090 <set_cpu_hz>:
80004090:	48 28       	lddpc	r8,80004098 <set_cpu_hz+0x8>
80004092:	91 0c       	st.w	r8[0x0],r12
80004094:	5e fc       	retal	r12
80004096:	d7 03       	nop
80004098:	00 00       	add	r0,r0
8000409a:	00 30       	cp.w	r0,r0

8000409c <get_cpu_hz>:
8000409c:	48 28       	lddpc	r8,800040a4 <get_cpu_hz+0x8>
8000409e:	70 0c       	ld.w	r12,r8[0x0]
800040a0:	5e fc       	retal	r12
800040a2:	d7 03       	nop
800040a4:	00 00       	add	r0,r0
800040a6:	00 30       	cp.w	r0,r0

800040a8 <unimplemented_syscall>:
800040a8:	5e fe       	retal	-1

800040aa <isatty>:
800040aa:	5e fd       	retal	0

800040ac <_fstat>:
800040ac:	5e fe       	retal	-1

800040ae <_init_argv>:
800040ae:	5e fc       	retal	r12

800040b0 <_close>:
800040b0:	d4 01       	pushm	lr
800040b2:	48 2c       	lddpc	r12,800040b8 <_close+0x8>
800040b4:	cf af       	rcall	800040a8 <unimplemented_syscall>
800040b6:	d8 02       	popm	pc
800040b8:	80 00       	ld.sh	r0,r0[0x0]
800040ba:	a5 38       	mul	r8,r2

800040bc <_lseek>:
800040bc:	d4 01       	pushm	lr
800040be:	48 2c       	lddpc	r12,800040c4 <_lseek+0x8>
800040c0:	cf 4f       	rcall	800040a8 <unimplemented_syscall>
800040c2:	d8 02       	popm	pc
800040c4:	80 00       	ld.sh	r0,r0[0x0]
800040c6:	a5 40       	asr	r0,0x4

800040c8 <_write>:
800040c8:	eb cd 40 e0 	pushm	r5-r7,lr
800040cc:	16 95       	mov	r5,r11
800040ce:	14 96       	mov	r6,r10
800040d0:	20 1c       	sub	r12,1
800040d2:	58 2c       	cp.w	r12,2
800040d4:	e0 8b 00 0f 	brhi	800040f2 <_write+0x2a>
800040d8:	58 0a       	cp.w	r10,0
800040da:	e0 8a 00 09 	brle	800040ec <_write+0x24>
800040de:	30 07       	mov	r7,0
800040e0:	ee 05 07 0c 	ld.ub	r12,r7[r5]
800040e4:	c6 6c       	rcall	800041b0 <usart_putc>
800040e6:	2f f7       	sub	r7,-1
800040e8:	0c 37       	cp.w	r7,r6
800040ea:	cf b1       	brne	800040e0 <_write+0x18>
800040ec:	0c 9c       	mov	r12,r6
800040ee:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
800040f2:	48 4c       	lddpc	r12,80004100 <_write+0x38>
800040f4:	cd af       	rcall	800040a8 <unimplemented_syscall>
800040f6:	18 96       	mov	r6,r12
800040f8:	0c 9c       	mov	r12,r6
800040fa:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
800040fe:	d7 03       	nop
80004100:	80 00       	ld.sh	r0,r0[0x0]
80004102:	a5 48       	asr	r8,0x4

80004104 <_read>:
80004104:	eb cd 40 e0 	pushm	r5-r7,lr
80004108:	16 95       	mov	r5,r11
8000410a:	14 96       	mov	r6,r10
8000410c:	58 0c       	cp.w	r12,0
8000410e:	c0 e1       	brne	8000412a <_read+0x26>
80004110:	58 0a       	cp.w	r10,0
80004112:	e0 8a 00 09 	brle	80004124 <_read+0x20>
80004116:	18 97       	mov	r7,r12
80004118:	c5 ac       	rcall	800041cc <usart_getc>
8000411a:	ee 05 0b 0c 	st.b	r7[r5],r12
8000411e:	2f f7       	sub	r7,-1
80004120:	0c 37       	cp.w	r7,r6
80004122:	cf b1       	brne	80004118 <_read+0x14>
80004124:	0c 9c       	mov	r12,r6
80004126:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
8000412a:	48 4c       	lddpc	r12,80004138 <_read+0x34>
8000412c:	cb ef       	rcall	800040a8 <unimplemented_syscall>
8000412e:	18 96       	mov	r6,r12
80004130:	0c 9c       	mov	r12,r6
80004132:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80004136:	d7 03       	nop
80004138:	80 00       	ld.sh	r0,r0[0x0]
8000413a:	a5 64       	lsl	r4,0x4

8000413c <_exit>:
8000413c:	eb cd 40 40 	pushm	r6,lr
80004140:	1a dc       	st.w	--sp,r12
80004142:	48 8c       	lddpc	r12,80004160 <_exit+0x24>
80004144:	e0 a0 07 38 	rcall	80004fb4 <printf>
80004148:	48 76       	lddpc	r6,80004164 <_exit+0x28>
8000414a:	6c 08       	ld.w	r8,r6[0x0]
8000414c:	70 2c       	ld.w	r12,r8[0x8]
8000414e:	e0 a0 03 eb 	rcall	80004924 <fflush>
80004152:	6c 08       	ld.w	r8,r6[0x0]
80004154:	70 3c       	ld.w	r12,r8[0xc]
80004156:	e0 a0 03 e7 	rcall	80004924 <fflush>
8000415a:	2f fd       	sub	sp,-4
8000415c:	c0 08       	rjmp	8000415c <_exit+0x20>
8000415e:	d7 03       	nop
80004160:	80 00       	ld.sh	r0,r0[0x0]
80004162:	a5 7c       	lsl	r12,0x5
80004164:	00 00       	add	r0,r0
80004166:	01 28       	ld.uh	r8,r0++

80004168 <_sbrk>:
80004168:	d4 01       	pushm	lr
8000416a:	48 ca       	lddpc	r10,80004198 <_sbrk+0x30>
8000416c:	18 99       	mov	r9,r12
8000416e:	74 08       	ld.w	r8,r10[0x0]
80004170:	58 08       	cp.w	r8,0
80004172:	c0 f0       	breq	80004190 <_sbrk+0x28>
80004174:	74 0c       	ld.w	r12,r10[0x0]
80004176:	48 a8       	lddpc	r8,8000419c <_sbrk+0x34>
80004178:	f8 09 00 09 	add	r9,r12,r9
8000417c:	10 39       	cp.w	r9,r8
8000417e:	e0 8b 00 04 	brhi	80004186 <_sbrk+0x1e>
80004182:	95 09       	st.w	r10[0x0],r9
80004184:	d8 02       	popm	pc
80004186:	e0 a0 03 2f 	rcall	800047e4 <__errno>
8000418a:	30 c8       	mov	r8,12
8000418c:	99 08       	st.w	r12[0x0],r8
8000418e:	dc 0a       	popm	pc,r12=-1
80004190:	48 48       	lddpc	r8,800041a0 <_sbrk+0x38>
80004192:	95 08       	st.w	r10[0x0],r8
80004194:	cf 0b       	rjmp	80004174 <_sbrk+0xc>
80004196:	d7 03       	nop
80004198:	00 00       	add	r0,r0
8000419a:	06 b8       	st.h	r3++,r8
8000419c:	00 00       	add	r0,r0
8000419e:	f0 00 00 00 	add	r0,r8,r0
800041a2:	07 50       	ld.sh	r0,--r3

800041a4 <set_usart_base>:
800041a4:	48 28       	lddpc	r8,800041ac <set_usart_base+0x8>
800041a6:	91 0c       	st.w	r8[0x0],r12
800041a8:	5e fc       	retal	r12
800041aa:	d7 03       	nop
800041ac:	00 00       	add	r0,r0
800041ae:	00 34       	cp.w	r4,r0

800041b0 <usart_putc>:
800041b0:	48 68       	lddpc	r8,800041c8 <usart_putc+0x18>
800041b2:	70 0a       	ld.w	r10,r8[0x0]
800041b4:	f4 c9 ff ec 	sub	r9,r10,-20
800041b8:	72 08       	ld.w	r8,r9[0x0]
800041ba:	ed b8 00 01 	bld	r8,0x1
800041be:	cf d1       	brne	800041b8 <usart_putc+0x8>
800041c0:	f4 c8 ff e4 	sub	r8,r10,-28
800041c4:	95 7c       	st.w	r10[0x1c],r12
800041c6:	5e fc       	retal	r12
800041c8:	00 00       	add	r0,r0
800041ca:	00 34       	cp.w	r4,r0

800041cc <usart_getc>:
800041cc:	48 68       	lddpc	r8,800041e4 <usart_getc+0x18>
800041ce:	70 0a       	ld.w	r10,r8[0x0]
800041d0:	f4 c9 ff ec 	sub	r9,r10,-20
800041d4:	72 08       	ld.w	r8,r9[0x0]
800041d6:	ed b8 00 00 	bld	r8,0x0
800041da:	cf d1       	brne	800041d4 <usart_getc+0x8>
800041dc:	f4 c8 ff e8 	sub	r8,r10,-24
800041e0:	74 6c       	ld.w	r12,r10[0x18]
800041e2:	5e fc       	retal	r12
800041e4:	00 00       	add	r0,r0
800041e6:	00 34       	cp.w	r4,r0

800041e8 <usart_init>:
800041e8:	eb cd 40 e0 	pushm	r5-r7,lr
800041ec:	3f f8       	mov	r8,-1
800041ee:	49 f5       	lddpc	r5,80004268 <usart_init+0x80>
800041f0:	6a 06       	ld.w	r6,r5[0x0]
800041f2:	ec c9 ff f4 	sub	r9,r6,-12
800041f6:	93 08       	st.w	r9[0x0],r8
800041f8:	e0 6a 08 c0 	mov	r10,2240
800041fc:	0c 98       	mov	r8,r6
800041fe:	30 c9       	mov	r9,12
80004200:	10 a9       	st.w	r8++,r9
80004202:	18 97       	mov	r7,r12
80004204:	91 0a       	st.w	r8[0x0],r10
80004206:	c4 bf       	rcall	8000409c <get_cpu_hz>
80004208:	ef ec 10 08 	or	r8,r7,r12
8000420c:	58 08       	cp.w	r8,0
8000420e:	c2 85       	brlt	8000425e <usart_init+0x76>
80004210:	ee 08 15 04 	lsl	r8,r7,0x4
80004214:	6a 0b       	ld.w	r11,r5[0x0]
80004216:	10 3c       	cp.w	r12,r8
80004218:	f9 b5 05 08 	movlt	r5,8
8000421c:	f9 b5 04 10 	movge	r5,16
80004220:	ea 07 02 4a 	mul	r10,r5,r7
80004224:	f4 09 16 01 	lsr	r9,r10,0x1
80004228:	f2 0c 00 39 	add	r9,r9,r12<<0x3
8000422c:	f2 0a 0d 08 	divu	r8,r9,r10
80004230:	10 9e       	mov	lr,r8
80004232:	f0 0c 16 03 	lsr	r12,r8,0x3
80004236:	f8 c8 00 01 	sub	r8,r12,1
8000423a:	e0 48 ff fe 	cp.w	r8,65534
8000423e:	e0 8b 00 10 	brhi	8000425e <usart_init+0x76>
80004242:	76 19       	ld.w	r9,r11[0x4]
80004244:	b3 d9       	cbr	r9,0x13
80004246:	e8 68 00 00 	mov	r8,524288
8000424a:	59 05       	cp.w	r5,16
8000424c:	f9 b8 00 00 	moveq	r8,0
80004250:	12 48       	or	r8,r9
80004252:	f3 de c0 03 	bfextu	r9,lr,0x0,0x3
80004256:	97 18       	st.w	r11[0x4],r8
80004258:	f9 e9 11 09 	or	r9,r12,r9<<0x10
8000425c:	97 89       	st.w	r11[0x20],r9
8000425e:	35 08       	mov	r8,80
80004260:	30 0c       	mov	r12,0
80004262:	8d 08       	st.w	r6[0x0],r8
80004264:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80004268:	00 00       	add	r0,r0
8000426a:	00 34       	cp.w	r4,r0

8000426c <__avr32_sdiv64>:
8000426c:	eb cd 40 ef 	pushm	r0-r3,r5-r7,lr
80004270:	1a 97       	mov	r7,sp
80004272:	20 1d       	sub	sp,4
80004274:	10 92       	mov	r2,r8
80004276:	12 93       	mov	r3,r9
80004278:	10 90       	mov	r0,r8
8000427a:	12 91       	mov	r1,r9
8000427c:	58 0b       	cp.w	r11,0
8000427e:	c7 05       	brlt	8000435e <__avr32_sdiv64+0xf2>
80004280:	30 08       	mov	r8,0
80004282:	ef 48 ff fc 	st.w	r7[-4],r8
80004286:	58 03       	cp.w	r3,0
80004288:	c5 f5       	brlt	80004346 <__avr32_sdiv64+0xda>
8000428a:	14 95       	mov	r5,r10
8000428c:	16 98       	mov	r8,r11
8000428e:	16 92       	mov	r2,r11
80004290:	00 96       	mov	r6,r0
80004292:	00 93       	mov	r3,r0
80004294:	02 9e       	mov	lr,r1
80004296:	58 01       	cp.w	r1,0
80004298:	c4 11       	brne	8000431a <__avr32_sdiv64+0xae>
8000429a:	10 30       	cp.w	r0,r8
8000429c:	e0 8b 00 b7 	brhi	8000440a <__avr32_sdiv64+0x19e>
800042a0:	58 00       	cp.w	r0,0
800042a2:	c0 51       	brne	800042ac <__avr32_sdiv64+0x40>
800042a4:	30 19       	mov	r9,1
800042a6:	f2 00 0d 08 	divu	r8,r9,r0
800042aa:	10 93       	mov	r3,r8
800042ac:	e6 0e 12 00 	clz	lr,r3
800042b0:	c6 11       	brne	80004372 <__avr32_sdiv64+0x106>
800042b2:	e4 03 01 0c 	sub	r12,r2,r3
800042b6:	e6 06 16 10 	lsr	r6,r3,0x10
800042ba:	e5 d3 c0 10 	bfextu	r2,r3,0x0,0x10
800042be:	30 1e       	mov	lr,1
800042c0:	f8 06 0d 08 	divu	r8,r12,r6
800042c4:	ea 0a 16 10 	lsr	r10,r5,0x10
800042c8:	10 9b       	mov	r11,r8
800042ca:	f5 e9 11 09 	or	r9,r10,r9<<0x10
800042ce:	a5 38       	mul	r8,r2
800042d0:	12 38       	cp.w	r8,r9
800042d2:	e0 88 00 0c 	brls	800042ea <__avr32_sdiv64+0x7e>
800042d6:	20 1b       	sub	r11,1
800042d8:	06 09       	add	r9,r3
800042da:	12 33       	cp.w	r3,r9
800042dc:	e0 8b 00 07 	brhi	800042ea <__avr32_sdiv64+0x7e>
800042e0:	12 38       	cp.w	r8,r9
800042e2:	f7 bb 0b 01 	subhi	r11,1
800042e6:	f3 d3 eb 09 	addhi	r9,r9,r3
800042ea:	10 19       	sub	r9,r8
800042ec:	f5 d5 c0 10 	bfextu	r10,r5,0x0,0x10
800042f0:	f2 06 0d 08 	divu	r8,r9,r6
800042f4:	10 9c       	mov	r12,r8
800042f6:	f5 e9 11 0a 	or	r10,r10,r9<<0x10
800042fa:	a5 38       	mul	r8,r2
800042fc:	14 38       	cp.w	r8,r10
800042fe:	e0 88 00 0a 	brls	80004312 <__avr32_sdiv64+0xa6>
80004302:	20 1c       	sub	r12,1
80004304:	06 0a       	add	r10,r3
80004306:	14 33       	cp.w	r3,r10
80004308:	e0 8b 00 05 	brhi	80004312 <__avr32_sdiv64+0xa6>
8000430c:	14 38       	cp.w	r8,r10
8000430e:	f7 bc 0b 01 	subhi	r12,1
80004312:	f9 eb 11 0b 	or	r11,r12,r11<<0x10
80004316:	1c 9c       	mov	r12,lr
80004318:	c0 68       	rjmp	80004324 <__avr32_sdiv64+0xb8>
8000431a:	10 31       	cp.w	r1,r8
8000431c:	e0 88 00 69 	brls	800043ee <__avr32_sdiv64+0x182>
80004320:	30 0c       	mov	r12,0
80004322:	18 9b       	mov	r11,r12
80004324:	16 92       	mov	r2,r11
80004326:	18 93       	mov	r3,r12
80004328:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000432c:	58 08       	cp.w	r8,0
8000432e:	c0 70       	breq	8000433c <__avr32_sdiv64+0xd0>
80004330:	30 08       	mov	r8,0
80004332:	30 09       	mov	r9,0
80004334:	f0 02 01 02 	sub	r2,r8,r2
80004338:	f2 03 01 43 	sbc	r3,r9,r3
8000433c:	04 9a       	mov	r10,r2
8000433e:	06 9b       	mov	r11,r3
80004340:	2f fd       	sub	sp,-4
80004342:	e3 cd 80 ef 	ldm	sp++,r0-r3,r5-r7,pc
80004346:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000434a:	5c d8       	com	r8
8000434c:	30 09       	mov	r9,0
8000434e:	ef 48 ff fc 	st.w	r7[-4],r8
80004352:	30 08       	mov	r8,0
80004354:	f0 02 01 00 	sub	r0,r8,r2
80004358:	f2 03 01 41 	sbc	r1,r9,r3
8000435c:	c9 7b       	rjmp	8000428a <__avr32_sdiv64+0x1e>
8000435e:	30 08       	mov	r8,0
80004360:	30 09       	mov	r9,0
80004362:	f0 0a 01 0a 	sub	r10,r8,r10
80004366:	f2 0b 01 4b 	sbc	r11,r9,r11
8000436a:	3f f8       	mov	r8,-1
8000436c:	ef 48 ff fc 	st.w	r7[-4],r8
80004370:	c8 bb       	rjmp	80004286 <__avr32_sdiv64+0x1a>
80004372:	fc 09 11 20 	rsub	r9,lr,32
80004376:	ea 09 0a 4a 	lsr	r10,r5,r9
8000437a:	e6 0e 09 43 	lsl	r3,r3,lr
8000437e:	e4 0e 09 4b 	lsl	r11,r2,lr
80004382:	e4 09 0a 49 	lsr	r9,r2,r9
80004386:	f5 eb 10 0b 	or	r11,r10,r11
8000438a:	e6 06 16 10 	lsr	r6,r3,0x10
8000438e:	e5 d3 c0 10 	bfextu	r2,r3,0x0,0x10
80004392:	f2 06 0d 08 	divu	r8,r9,r6
80004396:	f6 0a 16 10 	lsr	r10,r11,0x10
8000439a:	10 91       	mov	r1,r8
8000439c:	f5 e9 11 0c 	or	r12,r10,r9<<0x10
800043a0:	a5 38       	mul	r8,r2
800043a2:	18 38       	cp.w	r8,r12
800043a4:	e0 88 00 07 	brls	800043b2 <__avr32_sdiv64+0x146>
800043a8:	20 11       	sub	r1,1
800043aa:	06 0c       	add	r12,r3
800043ac:	18 33       	cp.w	r3,r12
800043ae:	e0 88 00 c3 	brls	80004534 <__avr32_sdiv64+0x2c8>
800043b2:	f8 08 01 09 	sub	r9,r12,r8
800043b6:	f5 db c0 10 	bfextu	r10,r11,0x0,0x10
800043ba:	f2 06 0d 08 	divu	r8,r9,r6
800043be:	f5 e9 11 0c 	or	r12,r10,r9<<0x10
800043c2:	f0 02 02 4b 	mul	r11,r8,r2
800043c6:	10 99       	mov	r9,r8
800043c8:	18 3b       	cp.w	r11,r12
800043ca:	e0 88 00 0c 	brls	800043e2 <__avr32_sdiv64+0x176>
800043ce:	20 19       	sub	r9,1
800043d0:	06 0c       	add	r12,r3
800043d2:	18 33       	cp.w	r3,r12
800043d4:	e0 8b 00 07 	brhi	800043e2 <__avr32_sdiv64+0x176>
800043d8:	18 3b       	cp.w	r11,r12
800043da:	f7 b9 0b 01 	subhi	r9,1
800043de:	f9 d3 eb 0c 	addhi	r12,r12,r3
800043e2:	ea 0e 09 45 	lsl	r5,r5,lr
800043e6:	16 1c       	sub	r12,r11
800043e8:	f3 e1 11 0e 	or	lr,r9,r1<<0x10
800043ec:	c6 ab       	rjmp	800042c0 <__avr32_sdiv64+0x54>
800043ee:	e2 03 12 00 	clz	r3,r1
800043f2:	c4 91       	brne	80004484 <__avr32_sdiv64+0x218>
800043f4:	10 31       	cp.w	r1,r8
800043f6:	5f 38       	srlo	r8
800043f8:	14 30       	cp.w	r0,r10
800043fa:	5f 89       	srls	r9
800043fc:	12 48       	or	r8,r9
800043fe:	e6 08 18 00 	cp.b	r8,r3
80004402:	c8 f0       	breq	80004320 <__avr32_sdiv64+0xb4>
80004404:	06 9c       	mov	r12,r3
80004406:	30 1b       	mov	r11,1
80004408:	c8 eb       	rjmp	80004324 <__avr32_sdiv64+0xb8>
8000440a:	e0 0a 12 00 	clz	r10,r0
8000440e:	c0 d0       	breq	80004428 <__avr32_sdiv64+0x1bc>
80004410:	f0 0a 09 49 	lsl	r9,r8,r10
80004414:	e0 0a 09 43 	lsl	r3,r0,r10
80004418:	f4 08 11 20 	rsub	r8,r10,32
8000441c:	ea 08 0a 48 	lsr	r8,r5,r8
80004420:	ea 0a 09 45 	lsl	r5,r5,r10
80004424:	f1 e9 10 02 	or	r2,r8,r9
80004428:	ea 08 16 10 	lsr	r8,r5,0x10
8000442c:	e6 06 16 10 	lsr	r6,r3,0x10
80004430:	e4 06 0d 0a 	divu	r10,r2,r6
80004434:	e5 d3 c0 10 	bfextu	r2,r3,0x0,0x10
80004438:	f1 eb 11 0c 	or	r12,r8,r11<<0x10
8000443c:	14 9e       	mov	lr,r10
8000443e:	f4 02 02 48 	mul	r8,r10,r2
80004442:	18 38       	cp.w	r8,r12
80004444:	e0 88 00 07 	brls	80004452 <__avr32_sdiv64+0x1e6>
80004448:	20 1e       	sub	lr,1
8000444a:	06 0c       	add	r12,r3
8000444c:	18 33       	cp.w	r3,r12
8000444e:	e0 88 00 79 	brls	80004540 <__avr32_sdiv64+0x2d4>
80004452:	f8 08 01 09 	sub	r9,r12,r8
80004456:	f5 d5 c0 10 	bfextu	r10,r5,0x0,0x10
8000445a:	f2 06 0d 08 	divu	r8,r9,r6
8000445e:	10 9c       	mov	r12,r8
80004460:	f5 e9 11 0a 	or	r10,r10,r9<<0x10
80004464:	a5 38       	mul	r8,r2
80004466:	14 38       	cp.w	r8,r10
80004468:	e0 88 00 0a 	brls	8000447c <__avr32_sdiv64+0x210>
8000446c:	20 1c       	sub	r12,1
8000446e:	06 0a       	add	r10,r3
80004470:	14 33       	cp.w	r3,r10
80004472:	e0 8b 00 05 	brhi	8000447c <__avr32_sdiv64+0x210>
80004476:	14 38       	cp.w	r8,r10
80004478:	f7 bc 0b 01 	subhi	r12,1
8000447c:	f9 ee 11 0b 	or	r11,r12,lr<<0x10
80004480:	30 0c       	mov	r12,0
80004482:	c5 1b       	rjmp	80004324 <__avr32_sdiv64+0xb8>
80004484:	f0 03 09 4c 	lsl	r12,r8,r3
80004488:	e6 09 11 20 	rsub	r9,r3,32
8000448c:	ec 09 0a 4b 	lsr	r11,r6,r9
80004490:	f4 09 0a 4a 	lsr	r10,r10,r9
80004494:	e2 03 09 4e 	lsl	lr,r1,r3
80004498:	f0 09 0a 49 	lsr	r9,r8,r9
8000449c:	f7 ee 10 0e 	or	lr,r11,lr
800044a0:	f5 ec 10 01 	or	r1,r10,r12
800044a4:	fc 06 16 10 	lsr	r6,lr,0x10
800044a8:	e5 de c0 10 	bfextu	r2,lr,0x0,0x10
800044ac:	f2 06 0d 08 	divu	r8,r9,r6
800044b0:	e2 0a 16 10 	lsr	r10,r1,0x10
800044b4:	10 9b       	mov	r11,r8
800044b6:	e0 03 09 40 	lsl	r0,r0,r3
800044ba:	f5 e9 11 0c 	or	r12,r10,r9<<0x10
800044be:	a5 38       	mul	r8,r2
800044c0:	18 38       	cp.w	r8,r12
800044c2:	e0 88 00 0c 	brls	800044da <__avr32_sdiv64+0x26e>
800044c6:	20 1b       	sub	r11,1
800044c8:	1c 0c       	add	r12,lr
800044ca:	18 3e       	cp.w	lr,r12
800044cc:	e0 8b 00 07 	brhi	800044da <__avr32_sdiv64+0x26e>
800044d0:	18 38       	cp.w	r8,r12
800044d2:	f7 bb 0b 01 	subhi	r11,1
800044d6:	f9 de eb 0c 	addhi	r12,r12,lr
800044da:	f8 08 01 09 	sub	r9,r12,r8
800044de:	f5 d1 c0 10 	bfextu	r10,r1,0x0,0x10
800044e2:	f2 06 0d 08 	divu	r8,r9,r6
800044e6:	10 9c       	mov	r12,r8
800044e8:	f5 e9 11 0a 	or	r10,r10,r9<<0x10
800044ec:	a5 38       	mul	r8,r2
800044ee:	14 38       	cp.w	r8,r10
800044f0:	e0 88 00 0c 	brls	80004508 <__avr32_sdiv64+0x29c>
800044f4:	20 1c       	sub	r12,1
800044f6:	1c 0a       	add	r10,lr
800044f8:	14 3e       	cp.w	lr,r10
800044fa:	e0 8b 00 07 	brhi	80004508 <__avr32_sdiv64+0x29c>
800044fe:	14 38       	cp.w	r8,r10
80004500:	f5 de eb 0a 	addhi	r10,r10,lr
80004504:	f7 bc 0b 01 	subhi	r12,1
80004508:	f9 eb 11 0c 	or	r12,r12,r11<<0x10
8000450c:	10 1a       	sub	r10,r8
8000450e:	f8 00 06 48 	mulu.d	r8,r12,r0
80004512:	10 9b       	mov	r11,r8
80004514:	12 3a       	cp.w	r10,r9
80004516:	c0 b3       	brcs	8000452c <__avr32_sdiv64+0x2c0>
80004518:	5f 08       	sreq	r8
8000451a:	ea 03 09 49 	lsl	r9,r5,r3
8000451e:	16 39       	cp.w	r9,r11
80004520:	5f 3a       	srlo	r10
80004522:	14 68       	and	r8,r10
80004524:	c0 41       	brne	8000452c <__avr32_sdiv64+0x2c0>
80004526:	18 9b       	mov	r11,r12
80004528:	30 0c       	mov	r12,0
8000452a:	cf da       	rjmp	80004324 <__avr32_sdiv64+0xb8>
8000452c:	f8 cb 00 01 	sub	r11,r12,1
80004530:	30 0c       	mov	r12,0
80004532:	cf 9a       	rjmp	80004324 <__avr32_sdiv64+0xb8>
80004534:	18 38       	cp.w	r8,r12
80004536:	f7 b1 0b 01 	subhi	r1,1
8000453a:	f9 d3 eb 0c 	addhi	r12,r12,r3
8000453e:	c3 ab       	rjmp	800043b2 <__avr32_sdiv64+0x146>
80004540:	18 38       	cp.w	r8,r12
80004542:	f7 be 0b 01 	subhi	lr,1
80004546:	f9 d3 eb 0c 	addhi	r12,r12,r3
8000454a:	c8 4b       	rjmp	80004452 <__avr32_sdiv64+0x1e6>

8000454c <__avr32_udiv64>:
8000454c:	eb cd 40 ef 	pushm	r0-r3,r5-r7,lr
80004550:	1a 97       	mov	r7,sp
80004552:	14 92       	mov	r2,r10
80004554:	10 95       	mov	r5,r8
80004556:	16 96       	mov	r6,r11
80004558:	10 9c       	mov	r12,r8
8000455a:	12 9e       	mov	lr,r9
8000455c:	14 93       	mov	r3,r10
8000455e:	58 09       	cp.w	r9,0
80004560:	c4 31       	brne	800045e6 <__avr32_udiv64+0x9a>
80004562:	16 38       	cp.w	r8,r11
80004564:	e0 8b 00 95 	brhi	8000468e <__avr32_udiv64+0x142>
80004568:	58 08       	cp.w	r8,0
8000456a:	c0 51       	brne	80004574 <__avr32_udiv64+0x28>
8000456c:	30 19       	mov	r9,1
8000456e:	f2 08 0d 08 	divu	r8,r9,r8
80004572:	10 9c       	mov	r12,r8
80004574:	f8 0e 12 00 	clz	lr,r12
80004578:	c4 e1       	brne	80004614 <__avr32_udiv64+0xc8>
8000457a:	ec 0c 01 0b 	sub	r11,r6,r12
8000457e:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
80004582:	f8 06 16 10 	lsr	r6,r12,0x10
80004586:	30 12       	mov	r2,1
80004588:	f6 06 0d 08 	divu	r8,r11,r6
8000458c:	e6 0a 16 10 	lsr	r10,r3,0x10
80004590:	10 9e       	mov	lr,r8
80004592:	f5 e9 11 09 	or	r9,r10,r9<<0x10
80004596:	ab 38       	mul	r8,r5
80004598:	12 38       	cp.w	r8,r9
8000459a:	e0 88 00 0c 	brls	800045b2 <__avr32_udiv64+0x66>
8000459e:	20 1e       	sub	lr,1
800045a0:	18 09       	add	r9,r12
800045a2:	12 3c       	cp.w	r12,r9
800045a4:	e0 8b 00 07 	brhi	800045b2 <__avr32_udiv64+0x66>
800045a8:	12 38       	cp.w	r8,r9
800045aa:	f7 be 0b 01 	subhi	lr,1
800045ae:	f3 dc eb 09 	addhi	r9,r9,r12
800045b2:	10 19       	sub	r9,r8
800045b4:	f5 d3 c0 10 	bfextu	r10,r3,0x0,0x10
800045b8:	f2 06 0d 08 	divu	r8,r9,r6
800045bc:	10 9b       	mov	r11,r8
800045be:	f5 e9 11 0a 	or	r10,r10,r9<<0x10
800045c2:	ab 38       	mul	r8,r5
800045c4:	14 38       	cp.w	r8,r10
800045c6:	e0 88 00 0a 	brls	800045da <__avr32_udiv64+0x8e>
800045ca:	20 1b       	sub	r11,1
800045cc:	18 0a       	add	r10,r12
800045ce:	14 3c       	cp.w	r12,r10
800045d0:	e0 8b 00 05 	brhi	800045da <__avr32_udiv64+0x8e>
800045d4:	14 38       	cp.w	r8,r10
800045d6:	f7 bb 0b 01 	subhi	r11,1
800045da:	f7 ee 11 0c 	or	r12,r11,lr<<0x10
800045de:	04 9b       	mov	r11,r2
800045e0:	18 9a       	mov	r10,r12
800045e2:	e3 cd 80 ef 	ldm	sp++,r0-r3,r5-r7,pc
800045e6:	16 39       	cp.w	r9,r11
800045e8:	e0 88 00 07 	brls	800045f6 <__avr32_udiv64+0xaa>
800045ec:	30 0b       	mov	r11,0
800045ee:	16 9c       	mov	r12,r11
800045f0:	18 9a       	mov	r10,r12
800045f2:	e3 cd 80 ef 	ldm	sp++,r0-r3,r5-r7,pc
800045f6:	f2 03 12 00 	clz	r3,r9
800045fa:	e0 81 00 89 	brne	8000470c <__avr32_udiv64+0x1c0>
800045fe:	16 39       	cp.w	r9,r11
80004600:	5f 38       	srlo	r8
80004602:	14 35       	cp.w	r5,r10
80004604:	5f 89       	srls	r9
80004606:	12 48       	or	r8,r9
80004608:	e6 08 18 00 	cp.b	r8,r3
8000460c:	cf 00       	breq	800045ec <__avr32_udiv64+0xa0>
8000460e:	06 9b       	mov	r11,r3
80004610:	30 1c       	mov	r12,1
80004612:	ce fb       	rjmp	800045f0 <__avr32_udiv64+0xa4>
80004614:	ec 0e 09 4b 	lsl	r11,r6,lr
80004618:	fc 09 11 20 	rsub	r9,lr,32
8000461c:	e4 09 0a 4a 	lsr	r10,r2,r9
80004620:	f8 0e 09 4c 	lsl	r12,r12,lr
80004624:	f5 eb 10 03 	or	r3,r10,r11
80004628:	ec 09 0a 49 	lsr	r9,r6,r9
8000462c:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
80004630:	f8 06 16 10 	lsr	r6,r12,0x10
80004634:	e6 0a 16 10 	lsr	r10,r3,0x10
80004638:	f2 06 0d 08 	divu	r8,r9,r6
8000463c:	10 91       	mov	r1,r8
8000463e:	f5 e9 11 0b 	or	r11,r10,r9<<0x10
80004642:	ab 38       	mul	r8,r5
80004644:	16 38       	cp.w	r8,r11
80004646:	e0 88 00 07 	brls	80004654 <__avr32_udiv64+0x108>
8000464a:	20 11       	sub	r1,1
8000464c:	18 0b       	add	r11,r12
8000464e:	16 3c       	cp.w	r12,r11
80004650:	e0 88 00 b5 	brls	800047ba <__avr32_udiv64+0x26e>
80004654:	f6 08 01 09 	sub	r9,r11,r8
80004658:	f5 d3 c0 10 	bfextu	r10,r3,0x0,0x10
8000465c:	f2 06 0d 08 	divu	r8,r9,r6
80004660:	f5 e9 11 0b 	or	r11,r10,r9<<0x10
80004664:	f0 05 02 49 	mul	r9,r8,r5
80004668:	16 39       	cp.w	r9,r11
8000466a:	e0 88 00 0c 	brls	80004682 <__avr32_udiv64+0x136>
8000466e:	20 18       	sub	r8,1
80004670:	18 0b       	add	r11,r12
80004672:	16 3c       	cp.w	r12,r11
80004674:	e0 8b 00 07 	brhi	80004682 <__avr32_udiv64+0x136>
80004678:	16 39       	cp.w	r9,r11
8000467a:	f7 b8 0b 01 	subhi	r8,1
8000467e:	f7 dc eb 0b 	addhi	r11,r11,r12
80004682:	e4 0e 09 43 	lsl	r3,r2,lr
80004686:	12 1b       	sub	r11,r9
80004688:	f1 e1 11 02 	or	r2,r8,r1<<0x10
8000468c:	c7 eb       	rjmp	80004588 <__avr32_udiv64+0x3c>
8000468e:	f0 0a 12 00 	clz	r10,r8
80004692:	c0 d0       	breq	800046ac <__avr32_udiv64+0x160>
80004694:	f6 0a 09 49 	lsl	r9,r11,r10
80004698:	f0 0a 09 4c 	lsl	r12,r8,r10
8000469c:	e4 0a 09 43 	lsl	r3,r2,r10
800046a0:	f4 08 11 20 	rsub	r8,r10,32
800046a4:	e4 08 0a 48 	lsr	r8,r2,r8
800046a8:	f1 e9 10 06 	or	r6,r8,r9
800046ac:	e6 08 16 10 	lsr	r8,r3,0x10
800046b0:	f8 05 16 10 	lsr	r5,r12,0x10
800046b4:	ec 05 0d 0a 	divu	r10,r6,r5
800046b8:	ed dc c0 10 	bfextu	r6,r12,0x0,0x10
800046bc:	f1 eb 11 0b 	or	r11,r8,r11<<0x10
800046c0:	14 9e       	mov	lr,r10
800046c2:	f4 06 02 48 	mul	r8,r10,r6
800046c6:	16 38       	cp.w	r8,r11
800046c8:	e0 88 00 07 	brls	800046d6 <__avr32_udiv64+0x18a>
800046cc:	20 1e       	sub	lr,1
800046ce:	18 0b       	add	r11,r12
800046d0:	16 3c       	cp.w	r12,r11
800046d2:	e0 88 00 7a 	brls	800047c6 <__avr32_udiv64+0x27a>
800046d6:	f6 08 01 09 	sub	r9,r11,r8
800046da:	f5 d3 c0 10 	bfextu	r10,r3,0x0,0x10
800046de:	f2 05 0d 08 	divu	r8,r9,r5
800046e2:	10 9b       	mov	r11,r8
800046e4:	f5 e9 11 0a 	or	r10,r10,r9<<0x10
800046e8:	ad 38       	mul	r8,r6
800046ea:	14 38       	cp.w	r8,r10
800046ec:	e0 88 00 0a 	brls	80004700 <__avr32_udiv64+0x1b4>
800046f0:	20 1b       	sub	r11,1
800046f2:	18 0a       	add	r10,r12
800046f4:	14 3c       	cp.w	r12,r10
800046f6:	e0 8b 00 05 	brhi	80004700 <__avr32_udiv64+0x1b4>
800046fa:	14 38       	cp.w	r8,r10
800046fc:	f7 bb 0b 01 	subhi	r11,1
80004700:	f7 ee 11 0c 	or	r12,r11,lr<<0x10
80004704:	30 0b       	mov	r11,0
80004706:	18 9a       	mov	r10,r12
80004708:	e3 cd 80 ef 	ldm	sp++,r0-r3,r5-r7,pc
8000470c:	f6 03 09 4c 	lsl	r12,r11,r3
80004710:	f2 03 09 4e 	lsl	lr,r9,r3
80004714:	e6 09 11 20 	rsub	r9,r3,32
80004718:	f0 09 0a 4b 	lsr	r11,r8,r9
8000471c:	f4 09 0a 4a 	lsr	r10,r10,r9
80004720:	f7 ee 10 0e 	or	lr,r11,lr
80004724:	f5 ec 10 01 	or	r1,r10,r12
80004728:	ec 09 0a 49 	lsr	r9,r6,r9
8000472c:	f0 03 09 40 	lsl	r0,r8,r3
80004730:	fc 06 16 10 	lsr	r6,lr,0x10
80004734:	eb de c0 10 	bfextu	r5,lr,0x0,0x10
80004738:	f2 06 0d 08 	divu	r8,r9,r6
8000473c:	e2 0a 16 10 	lsr	r10,r1,0x10
80004740:	10 9b       	mov	r11,r8
80004742:	f5 e9 11 0c 	or	r12,r10,r9<<0x10
80004746:	ab 38       	mul	r8,r5
80004748:	18 38       	cp.w	r8,r12
8000474a:	e0 88 00 0c 	brls	80004762 <__avr32_udiv64+0x216>
8000474e:	20 1b       	sub	r11,1
80004750:	1c 0c       	add	r12,lr
80004752:	18 3e       	cp.w	lr,r12
80004754:	e0 8b 00 07 	brhi	80004762 <__avr32_udiv64+0x216>
80004758:	18 38       	cp.w	r8,r12
8000475a:	f7 bb 0b 01 	subhi	r11,1
8000475e:	f9 de eb 0c 	addhi	r12,r12,lr
80004762:	f8 08 01 09 	sub	r9,r12,r8
80004766:	f5 d1 c0 10 	bfextu	r10,r1,0x0,0x10
8000476a:	f2 06 0d 08 	divu	r8,r9,r6
8000476e:	10 9c       	mov	r12,r8
80004770:	f5 e9 11 0a 	or	r10,r10,r9<<0x10
80004774:	ab 38       	mul	r8,r5
80004776:	14 38       	cp.w	r8,r10
80004778:	e0 88 00 0c 	brls	80004790 <__avr32_udiv64+0x244>
8000477c:	20 1c       	sub	r12,1
8000477e:	1c 0a       	add	r10,lr
80004780:	14 3e       	cp.w	lr,r10
80004782:	e0 8b 00 07 	brhi	80004790 <__avr32_udiv64+0x244>
80004786:	14 38       	cp.w	r8,r10
80004788:	f5 de eb 0a 	addhi	r10,r10,lr
8000478c:	f7 bc 0b 01 	subhi	r12,1
80004790:	f9 eb 11 0c 	or	r12,r12,r11<<0x10
80004794:	10 1a       	sub	r10,r8
80004796:	f8 00 06 48 	mulu.d	r8,r12,r0
8000479a:	10 9b       	mov	r11,r8
8000479c:	12 3a       	cp.w	r10,r9
8000479e:	c0 42       	brcc	800047a6 <__avr32_udiv64+0x25a>
800047a0:	20 1c       	sub	r12,1
800047a2:	30 0b       	mov	r11,0
800047a4:	c2 6b       	rjmp	800045f0 <__avr32_udiv64+0xa4>
800047a6:	12 3a       	cp.w	r10,r9
800047a8:	5f 08       	sreq	r8
800047aa:	e4 03 09 49 	lsl	r9,r2,r3
800047ae:	16 39       	cp.w	r9,r11
800047b0:	5f 3a       	srlo	r10
800047b2:	14 68       	and	r8,r10
800047b4:	cf 70       	breq	800047a2 <__avr32_udiv64+0x256>
800047b6:	20 1c       	sub	r12,1
800047b8:	cf 5b       	rjmp	800047a2 <__avr32_udiv64+0x256>
800047ba:	16 38       	cp.w	r8,r11
800047bc:	f7 b1 0b 01 	subhi	r1,1
800047c0:	f7 dc eb 0b 	addhi	r11,r11,r12
800047c4:	c4 8b       	rjmp	80004654 <__avr32_udiv64+0x108>
800047c6:	16 38       	cp.w	r8,r11
800047c8:	f7 be 0b 01 	subhi	lr,1
800047cc:	f7 dc eb 0b 	addhi	r11,r11,r12
800047d0:	c8 3b       	rjmp	800046d6 <__avr32_udiv64+0x18a>
800047d2:	d7 03       	nop

800047d4 <atexit>:
800047d4:	d4 01       	pushm	lr
800047d6:	30 09       	mov	r9,0
800047d8:	18 9b       	mov	r11,r12
800047da:	12 9a       	mov	r10,r9
800047dc:	12 9c       	mov	r12,r9
800047de:	e0 a0 16 5f 	rcall	8000749c <__register_exitproc>
800047e2:	d8 02       	popm	pc

800047e4 <__errno>:
800047e4:	48 28       	lddpc	r8,800047ec <__errno+0x8>
800047e6:	70 0c       	ld.w	r12,r8[0x0]
800047e8:	2f 4c       	sub	r12,-12
800047ea:	5e fc       	retal	r12
800047ec:	00 00       	add	r0,r0
800047ee:	01 28       	ld.uh	r8,r0++

800047f0 <exit>:
800047f0:	d4 21       	pushm	r4-r7,lr
800047f2:	30 0b       	mov	r11,0
800047f4:	18 97       	mov	r7,r12
800047f6:	e0 a0 16 a7 	rcall	80007544 <__call_exitprocs>
800047fa:	48 58       	lddpc	r8,8000480c <exit+0x1c>
800047fc:	70 0c       	ld.w	r12,r8[0x0]
800047fe:	78 a9       	ld.w	r9,r12[0x28]
80004800:	58 09       	cp.w	r9,0
80004802:	c0 20       	breq	80004806 <exit+0x16>
80004804:	5d 19       	icall	r9
80004806:	0e 9c       	mov	r12,r7
80004808:	fe b0 fc 9a 	rcall	8000413c <_exit>
8000480c:	80 00       	ld.sh	r0,r0[0x0]
8000480e:	a5 e4       	*unknown*

80004810 <_fflush_r>:
80004810:	d4 21       	pushm	r4-r7,lr
80004812:	16 97       	mov	r7,r11
80004814:	18 94       	mov	r4,r12
80004816:	76 48       	ld.w	r8,r11[0x10]
80004818:	58 08       	cp.w	r8,0
8000481a:	c7 d0       	breq	80004914 <_fflush_r+0x104>
8000481c:	58 0c       	cp.w	r12,0
8000481e:	c0 50       	breq	80004828 <_fflush_r+0x18>
80004820:	78 68       	ld.w	r8,r12[0x18]
80004822:	58 08       	cp.w	r8,0
80004824:	c0 21       	brne	80004828 <_fflush_r+0x18>
80004826:	ce 5c       	rcall	800049f0 <__sinit>
80004828:	4b c8       	lddpc	r8,80004918 <_fflush_r+0x108>
8000482a:	10 37       	cp.w	r7,r8
8000482c:	c0 31       	brne	80004832 <_fflush_r+0x22>
8000482e:	68 07       	ld.w	r7,r4[0x0]
80004830:	c0 a8       	rjmp	80004844 <_fflush_r+0x34>
80004832:	4b b8       	lddpc	r8,8000491c <_fflush_r+0x10c>
80004834:	10 37       	cp.w	r7,r8
80004836:	c0 31       	brne	8000483c <_fflush_r+0x2c>
80004838:	68 17       	ld.w	r7,r4[0x4]
8000483a:	c0 58       	rjmp	80004844 <_fflush_r+0x34>
8000483c:	4b 98       	lddpc	r8,80004920 <_fflush_r+0x110>
8000483e:	10 37       	cp.w	r7,r8
80004840:	e9 f7 00 02 	ld.weq	r7,r4[0x8]
80004844:	8e 6a       	ld.sh	r10,r7[0xc]
80004846:	ed ba 00 03 	bld	r10,0x3
8000484a:	c4 30       	breq	800048d0 <_fflush_r+0xc0>
8000484c:	ab ba       	sbr	r10,0xb
8000484e:	ae 6a       	st.h	r7[0xc],r10
80004850:	6e 18       	ld.w	r8,r7[0x4]
80004852:	58 08       	cp.w	r8,0
80004854:	e0 89 00 06 	brgt	80004860 <_fflush_r+0x50>
80004858:	6f 08       	ld.w	r8,r7[0x40]
8000485a:	58 08       	cp.w	r8,0
8000485c:	e0 8a 00 5c 	brle	80004914 <_fflush_r+0x104>
80004860:	6e b8       	ld.w	r8,r7[0x2c]
80004862:	58 08       	cp.w	r8,0
80004864:	c5 80       	breq	80004914 <_fflush_r+0x104>
80004866:	e2 1a 10 00 	andl	r10,0x1000,COH
8000486a:	c0 30       	breq	80004870 <_fflush_r+0x60>
8000486c:	6f 56       	ld.w	r6,r7[0x54]
8000486e:	c0 f8       	rjmp	8000488c <_fflush_r+0x7c>
80004870:	30 19       	mov	r9,1
80004872:	6e 8b       	ld.w	r11,r7[0x20]
80004874:	08 9c       	mov	r12,r4
80004876:	5d 18       	icall	r8
80004878:	18 96       	mov	r6,r12
8000487a:	5b fc       	cp.w	r12,-1
8000487c:	c0 81       	brne	8000488c <_fflush_r+0x7c>
8000487e:	68 38       	ld.w	r8,r4[0xc]
80004880:	59 d8       	cp.w	r8,29
80004882:	c4 90       	breq	80004914 <_fflush_r+0x104>
80004884:	8e 68       	ld.sh	r8,r7[0xc]
80004886:	a7 a8       	sbr	r8,0x6
80004888:	ae 68       	st.h	r7[0xc],r8
8000488a:	d8 22       	popm	r4-r7,pc
8000488c:	8e 68       	ld.sh	r8,r7[0xc]
8000488e:	ed b8 00 02 	bld	r8,0x2
80004892:	c0 91       	brne	800048a4 <_fflush_r+0x94>
80004894:	6e 18       	ld.w	r8,r7[0x4]
80004896:	10 16       	sub	r6,r8
80004898:	6e d8       	ld.w	r8,r7[0x34]
8000489a:	58 08       	cp.w	r8,0
8000489c:	ef f8 10 10 	ld.wne	r8,r7[0x40]
800048a0:	ed d8 e1 16 	subne	r6,r6,r8
800048a4:	6e b8       	ld.w	r8,r7[0x2c]
800048a6:	08 9c       	mov	r12,r4
800048a8:	30 09       	mov	r9,0
800048aa:	0c 9a       	mov	r10,r6
800048ac:	6e 8b       	ld.w	r11,r7[0x20]
800048ae:	5d 18       	icall	r8
800048b0:	8e 68       	ld.sh	r8,r7[0xc]
800048b2:	0c 3c       	cp.w	r12,r6
800048b4:	c2 81       	brne	80004904 <_fflush_r+0xf4>
800048b6:	ab d8       	cbr	r8,0xb
800048b8:	30 0c       	mov	r12,0
800048ba:	ae 68       	st.h	r7[0xc],r8
800048bc:	8f 1c       	st.w	r7[0x4],r12
800048be:	6e 48       	ld.w	r8,r7[0x10]
800048c0:	8f 08       	st.w	r7[0x0],r8
800048c2:	8e 68       	ld.sh	r8,r7[0xc]
800048c4:	ed b8 00 0c 	bld	r8,0xc
800048c8:	c2 61       	brne	80004914 <_fflush_r+0x104>
800048ca:	ef 46 00 54 	st.w	r7[84],r6
800048ce:	d8 22       	popm	r4-r7,pc
800048d0:	6e 45       	ld.w	r5,r7[0x10]
800048d2:	58 05       	cp.w	r5,0
800048d4:	c2 00       	breq	80004914 <_fflush_r+0x104>
800048d6:	6e 09       	ld.w	r9,r7[0x0]
800048d8:	f1 da c0 02 	bfextu	r8,r10,0x0,0x2
800048dc:	8f 05       	st.w	r7[0x0],r5
800048de:	f9 b8 01 00 	movne	r8,0
800048e2:	ef f8 00 05 	ld.weq	r8,r7[0x14]
800048e6:	f2 05 01 06 	sub	r6,r9,r5
800048ea:	8f 28       	st.w	r7[0x8],r8
800048ec:	c1 18       	rjmp	8000490e <_fflush_r+0xfe>
800048ee:	0c 99       	mov	r9,r6
800048f0:	0a 9a       	mov	r10,r5
800048f2:	6e a8       	ld.w	r8,r7[0x28]
800048f4:	6e 8b       	ld.w	r11,r7[0x20]
800048f6:	08 9c       	mov	r12,r4
800048f8:	5d 18       	icall	r8
800048fa:	18 16       	sub	r6,r12
800048fc:	58 0c       	cp.w	r12,0
800048fe:	e0 89 00 07 	brgt	8000490c <_fflush_r+0xfc>
80004902:	8e 68       	ld.sh	r8,r7[0xc]
80004904:	a7 a8       	sbr	r8,0x6
80004906:	3f fc       	mov	r12,-1
80004908:	ae 68       	st.h	r7[0xc],r8
8000490a:	d8 22       	popm	r4-r7,pc
8000490c:	18 05       	add	r5,r12
8000490e:	58 06       	cp.w	r6,0
80004910:	fe 99 ff ef 	brgt	800048ee <_fflush_r+0xde>
80004914:	d8 2a       	popm	r4-r7,pc,r12=0
80004916:	d7 03       	nop
80004918:	80 00       	ld.sh	r0,r0[0x0]
8000491a:	a5 80       	lsr	r0,0x4
8000491c:	80 00       	ld.sh	r0,r0[0x0]
8000491e:	a5 a0       	sbr	r0,0x4
80004920:	80 00       	ld.sh	r0,r0[0x0]
80004922:	a5 c0       	cbr	r0,0x4

80004924 <fflush>:
80004924:	d4 01       	pushm	lr
80004926:	58 0c       	cp.w	r12,0
80004928:	c0 71       	brne	80004936 <fflush+0x12>
8000492a:	48 68       	lddpc	r8,80004940 <fflush+0x1c>
8000492c:	fe cb 01 1c 	sub	r11,pc,284
80004930:	70 0c       	ld.w	r12,r8[0x0]
80004932:	ca dc       	rcall	80004a8c <_fwalk_reent>
80004934:	d8 02       	popm	pc
80004936:	48 48       	lddpc	r8,80004944 <fflush+0x20>
80004938:	18 9b       	mov	r11,r12
8000493a:	70 0c       	ld.w	r12,r8[0x0]
8000493c:	c6 af       	rcall	80004810 <_fflush_r>
8000493e:	d8 02       	popm	pc
80004940:	80 00       	ld.sh	r0,r0[0x0]
80004942:	a5 e4       	*unknown*
80004944:	00 00       	add	r0,r0
80004946:	01 28       	ld.uh	r8,r0++

80004948 <__sfp_lock_acquire>:
80004948:	5e fc       	retal	r12

8000494a <__sfp_lock_release>:
8000494a:	5e fc       	retal	r12

8000494c <_cleanup_r>:
8000494c:	d4 01       	pushm	lr
8000494e:	fe cb c5 5a 	sub	r11,pc,-15014
80004952:	cc 3c       	rcall	80004ad8 <_fwalk>
80004954:	d8 02       	popm	pc
80004956:	d7 03       	nop

80004958 <__sfmoreglue>:
80004958:	d4 21       	pushm	r4-r7,lr
8000495a:	16 95       	mov	r5,r11
8000495c:	f6 06 10 5c 	mul	r6,r11,92
80004960:	ec cb ff f4 	sub	r11,r6,-12
80004964:	cf 0c       	rcall	80004b44 <_malloc_r>
80004966:	18 97       	mov	r7,r12
80004968:	c0 90       	breq	8000497a <__sfmoreglue+0x22>
8000496a:	99 15       	st.w	r12[0x4],r5
8000496c:	30 0b       	mov	r11,0
8000496e:	2f 4c       	sub	r12,-12
80004970:	0c 9a       	mov	r10,r6
80004972:	8f 2c       	st.w	r7[0x8],r12
80004974:	8f 0b       	st.w	r7[0x0],r11
80004976:	e0 a0 03 15 	rcall	80004fa0 <memset>
8000497a:	0e 9c       	mov	r12,r7
8000497c:	d8 22       	popm	r4-r7,pc
8000497e:	d7 03       	nop

80004980 <__sfp>:
80004980:	d4 21       	pushm	r4-r7,lr
80004982:	49 b8       	lddpc	r8,800049ec <__sfp+0x6c>
80004984:	18 96       	mov	r6,r12
80004986:	70 07       	ld.w	r7,r8[0x0]
80004988:	6e 68       	ld.w	r8,r7[0x18]
8000498a:	58 08       	cp.w	r8,0
8000498c:	c0 31       	brne	80004992 <__sfp+0x12>
8000498e:	0e 9c       	mov	r12,r7
80004990:	c3 0c       	rcall	800049f0 <__sinit>
80004992:	ee c7 ff 28 	sub	r7,r7,-216
80004996:	30 05       	mov	r5,0
80004998:	6e 2c       	ld.w	r12,r7[0x8]
8000499a:	6e 19       	ld.w	r9,r7[0x4]
8000499c:	c0 68       	rjmp	800049a8 <__sfp+0x28>
8000499e:	98 68       	ld.sh	r8,r12[0xc]
800049a0:	ea 08 19 00 	cp.h	r8,r5
800049a4:	c1 10       	breq	800049c6 <__sfp+0x46>
800049a6:	2a 4c       	sub	r12,-92
800049a8:	20 19       	sub	r9,1
800049aa:	cf a7       	brpl	8000499e <__sfp+0x1e>
800049ac:	6e 08       	ld.w	r8,r7[0x0]
800049ae:	58 08       	cp.w	r8,0
800049b0:	c0 61       	brne	800049bc <__sfp+0x3c>
800049b2:	30 4b       	mov	r11,4
800049b4:	0c 9c       	mov	r12,r6
800049b6:	cd 1f       	rcall	80004958 <__sfmoreglue>
800049b8:	8f 0c       	st.w	r7[0x0],r12
800049ba:	c0 30       	breq	800049c0 <__sfp+0x40>
800049bc:	6e 07       	ld.w	r7,r7[0x0]
800049be:	ce db       	rjmp	80004998 <__sfp+0x18>
800049c0:	30 c8       	mov	r8,12
800049c2:	8d 38       	st.w	r6[0xc],r8
800049c4:	d8 22       	popm	r4-r7,pc
800049c6:	30 08       	mov	r8,0
800049c8:	f9 48 00 4c 	st.w	r12[76],r8
800049cc:	99 08       	st.w	r12[0x0],r8
800049ce:	99 28       	st.w	r12[0x8],r8
800049d0:	99 18       	st.w	r12[0x4],r8
800049d2:	99 48       	st.w	r12[0x10],r8
800049d4:	99 58       	st.w	r12[0x14],r8
800049d6:	99 68       	st.w	r12[0x18],r8
800049d8:	99 d8       	st.w	r12[0x34],r8
800049da:	99 e8       	st.w	r12[0x38],r8
800049dc:	f9 48 00 48 	st.w	r12[72],r8
800049e0:	3f f8       	mov	r8,-1
800049e2:	b8 78       	st.h	r12[0xe],r8
800049e4:	30 18       	mov	r8,1
800049e6:	b8 68       	st.h	r12[0xc],r8
800049e8:	d8 22       	popm	r4-r7,pc
800049ea:	d7 03       	nop
800049ec:	80 00       	ld.sh	r0,r0[0x0]
800049ee:	a5 e4       	*unknown*

800049f0 <__sinit>:
800049f0:	d4 31       	pushm	r0-r7,lr
800049f2:	18 94       	mov	r4,r12
800049f4:	78 67       	ld.w	r7,r12[0x18]
800049f6:	58 07       	cp.w	r7,0
800049f8:	c4 91       	brne	80004a8a <__sinit+0x9a>
800049fa:	fe c8 00 ae 	sub	r8,pc,174
800049fe:	30 13       	mov	r3,1
80004a00:	99 a8       	st.w	r12[0x28],r8
80004a02:	f9 47 00 d8 	st.w	r12[216],r7
80004a06:	f9 47 00 dc 	st.w	r12[220],r7
80004a0a:	f9 47 00 e0 	st.w	r12[224],r7
80004a0e:	99 63       	st.w	r12[0x18],r3
80004a10:	cb 8f       	rcall	80004980 <__sfp>
80004a12:	89 0c       	st.w	r4[0x0],r12
80004a14:	08 9c       	mov	r12,r4
80004a16:	cb 5f       	rcall	80004980 <__sfp>
80004a18:	89 1c       	st.w	r4[0x4],r12
80004a1a:	08 9c       	mov	r12,r4
80004a1c:	cb 2f       	rcall	80004980 <__sfp>
80004a1e:	68 08       	ld.w	r8,r4[0x0]
80004a20:	30 49       	mov	r9,4
80004a22:	91 07       	st.w	r8[0x0],r7
80004a24:	b0 69       	st.h	r8[0xc],r9
80004a26:	91 17       	st.w	r8[0x4],r7
80004a28:	91 27       	st.w	r8[0x8],r7
80004a2a:	68 19       	ld.w	r9,r4[0x4]
80004a2c:	b0 77       	st.h	r8[0xe],r7
80004a2e:	91 47       	st.w	r8[0x10],r7
80004a30:	91 57       	st.w	r8[0x14],r7
80004a32:	91 67       	st.w	r8[0x18],r7
80004a34:	91 88       	st.w	r8[0x20],r8
80004a36:	fe c5 f8 5e 	sub	r5,pc,-1954
80004a3a:	fe c6 f8 92 	sub	r6,pc,-1902
80004a3e:	91 95       	st.w	r8[0x24],r5
80004a40:	91 a6       	st.w	r8[0x28],r6
80004a42:	fe cb f8 c2 	sub	r11,pc,-1854
80004a46:	fe ca f8 d2 	sub	r10,pc,-1838
80004a4a:	91 bb       	st.w	r8[0x2c],r11
80004a4c:	91 ca       	st.w	r8[0x30],r10
80004a4e:	93 07       	st.w	r9[0x0],r7
80004a50:	93 17       	st.w	r9[0x4],r7
80004a52:	93 27       	st.w	r9[0x8],r7
80004a54:	30 98       	mov	r8,9
80004a56:	b2 68       	st.h	r9[0xc],r8
80004a58:	b2 73       	st.h	r9[0xe],r3
80004a5a:	31 28       	mov	r8,18
80004a5c:	93 ca       	st.w	r9[0x30],r10
80004a5e:	b8 68       	st.h	r12[0xc],r8
80004a60:	89 2c       	st.w	r4[0x8],r12
80004a62:	93 47       	st.w	r9[0x10],r7
80004a64:	93 57       	st.w	r9[0x14],r7
80004a66:	93 67       	st.w	r9[0x18],r7
80004a68:	93 89       	st.w	r9[0x20],r9
80004a6a:	93 95       	st.w	r9[0x24],r5
80004a6c:	93 a6       	st.w	r9[0x28],r6
80004a6e:	93 bb       	st.w	r9[0x2c],r11
80004a70:	99 07       	st.w	r12[0x0],r7
80004a72:	99 17       	st.w	r12[0x4],r7
80004a74:	99 27       	st.w	r12[0x8],r7
80004a76:	30 28       	mov	r8,2
80004a78:	b8 78       	st.h	r12[0xe],r8
80004a7a:	99 ca       	st.w	r12[0x30],r10
80004a7c:	99 67       	st.w	r12[0x18],r7
80004a7e:	99 95       	st.w	r12[0x24],r5
80004a80:	99 a6       	st.w	r12[0x28],r6
80004a82:	99 bb       	st.w	r12[0x2c],r11
80004a84:	99 47       	st.w	r12[0x10],r7
80004a86:	99 57       	st.w	r12[0x14],r7
80004a88:	99 8c       	st.w	r12[0x20],r12
80004a8a:	d8 32       	popm	r0-r7,pc

80004a8c <_fwalk_reent>:
80004a8c:	d4 31       	pushm	r0-r7,lr
80004a8e:	30 04       	mov	r4,0
80004a90:	18 93       	mov	r3,r12
80004a92:	16 92       	mov	r2,r11
80004a94:	e6 c5 ff 28 	sub	r5,r3,-216
80004a98:	c5 8f       	rcall	80004948 <__sfp_lock_acquire>
80004a9a:	08 90       	mov	r0,r4
80004a9c:	3f f1       	mov	r1,-1
80004a9e:	c1 88       	rjmp	80004ace <_fwalk_reent+0x42>
80004aa0:	6a 28       	ld.w	r8,r5[0x8]
80004aa2:	6a 16       	ld.w	r6,r5[0x4]
80004aa4:	f0 c7 ff f4 	sub	r7,r8,-12
80004aa8:	c0 d8       	rjmp	80004ac2 <_fwalk_reent+0x36>
80004aaa:	8e 08       	ld.sh	r8,r7[0x0]
80004aac:	e0 08 19 00 	cp.h	r8,r0
80004ab0:	c0 80       	breq	80004ac0 <_fwalk_reent+0x34>
80004ab2:	8e 18       	ld.sh	r8,r7[0x2]
80004ab4:	e2 08 19 00 	cp.h	r8,r1
80004ab8:	c0 40       	breq	80004ac0 <_fwalk_reent+0x34>
80004aba:	06 9c       	mov	r12,r3
80004abc:	5d 12       	icall	r2
80004abe:	18 44       	or	r4,r12
80004ac0:	2a 47       	sub	r7,-92
80004ac2:	20 16       	sub	r6,1
80004ac4:	ee cb 00 0c 	sub	r11,r7,12
80004ac8:	58 06       	cp.w	r6,0
80004aca:	cf 04       	brge	80004aaa <_fwalk_reent+0x1e>
80004acc:	6a 05       	ld.w	r5,r5[0x0]
80004ace:	58 05       	cp.w	r5,0
80004ad0:	ce 81       	brne	80004aa0 <_fwalk_reent+0x14>
80004ad2:	c3 cf       	rcall	8000494a <__sfp_lock_release>
80004ad4:	08 9c       	mov	r12,r4
80004ad6:	d8 32       	popm	r0-r7,pc

80004ad8 <_fwalk>:
80004ad8:	d4 31       	pushm	r0-r7,lr
80004ada:	30 04       	mov	r4,0
80004adc:	16 93       	mov	r3,r11
80004ade:	f8 c5 ff 28 	sub	r5,r12,-216
80004ae2:	08 91       	mov	r1,r4
80004ae4:	c3 2f       	rcall	80004948 <__sfp_lock_acquire>
80004ae6:	3f f2       	mov	r2,-1
80004ae8:	c1 78       	rjmp	80004b16 <_fwalk+0x3e>
80004aea:	6a 28       	ld.w	r8,r5[0x8]
80004aec:	6a 16       	ld.w	r6,r5[0x4]
80004aee:	f0 c7 ff f4 	sub	r7,r8,-12
80004af2:	c0 c8       	rjmp	80004b0a <_fwalk+0x32>
80004af4:	8e 08       	ld.sh	r8,r7[0x0]
80004af6:	e2 08 19 00 	cp.h	r8,r1
80004afa:	c0 70       	breq	80004b08 <_fwalk+0x30>
80004afc:	8e 18       	ld.sh	r8,r7[0x2]
80004afe:	e4 08 19 00 	cp.h	r8,r2
80004b02:	c0 30       	breq	80004b08 <_fwalk+0x30>
80004b04:	5d 13       	icall	r3
80004b06:	18 44       	or	r4,r12
80004b08:	2a 47       	sub	r7,-92
80004b0a:	20 16       	sub	r6,1
80004b0c:	ee cc 00 0c 	sub	r12,r7,12
80004b10:	58 06       	cp.w	r6,0
80004b12:	cf 14       	brge	80004af4 <_fwalk+0x1c>
80004b14:	6a 05       	ld.w	r5,r5[0x0]
80004b16:	58 05       	cp.w	r5,0
80004b18:	ce 91       	brne	80004aea <_fwalk+0x12>
80004b1a:	c1 8f       	rcall	8000494a <__sfp_lock_release>
80004b1c:	08 9c       	mov	r12,r4
80004b1e:	d8 32       	popm	r0-r7,pc

80004b20 <free>:
80004b20:	d4 01       	pushm	lr
80004b22:	48 48       	lddpc	r8,80004b30 <free+0x10>
80004b24:	18 9b       	mov	r11,r12
80004b26:	70 0c       	ld.w	r12,r8[0x0]
80004b28:	e0 a0 1c bc 	rcall	800084a0 <_free_r>
80004b2c:	d8 02       	popm	pc
80004b2e:	d7 03       	nop
80004b30:	00 00       	add	r0,r0
80004b32:	01 28       	ld.uh	r8,r0++

80004b34 <malloc>:
80004b34:	d4 01       	pushm	lr
80004b36:	48 38       	lddpc	r8,80004b40 <malloc+0xc>
80004b38:	18 9b       	mov	r11,r12
80004b3a:	70 0c       	ld.w	r12,r8[0x0]
80004b3c:	c0 4c       	rcall	80004b44 <_malloc_r>
80004b3e:	d8 02       	popm	pc
80004b40:	00 00       	add	r0,r0
80004b42:	01 28       	ld.uh	r8,r0++

80004b44 <_malloc_r>:
80004b44:	d4 31       	pushm	r0-r7,lr
80004b46:	f6 c8 ff f5 	sub	r8,r11,-11
80004b4a:	18 92       	mov	r2,r12
80004b4c:	59 68       	cp.w	r8,22
80004b4e:	f9 b5 08 10 	movls	r5,16
80004b52:	f9 b9 0b f8 	movhi	r9,-8
80004b56:	f1 d9 eb 25 	andhi	r5,r8,r9
80004b5a:	16 35       	cp.w	r5,r11
80004b5c:	5f 38       	srlo	r8
80004b5e:	f1 e5 13 f8 	or	r8,r8,r5>>0x1f
80004b62:	c0 50       	breq	80004b6c <_malloc_r+0x28>
80004b64:	30 c8       	mov	r8,12
80004b66:	99 38       	st.w	r12[0xc],r8
80004b68:	e0 8f 02 02 	bral	80004f6c <_malloc_r+0x428>
80004b6c:	e0 a0 02 21 	rcall	80004fae <__malloc_lock>
80004b70:	e0 45 01 f7 	cp.w	r5,503
80004b74:	e0 8b 00 1a 	brhi	80004ba8 <_malloc_r+0x64>
80004b78:	ea 09 16 03 	lsr	r9,r5,0x3
80004b7c:	4c f8       	lddpc	r8,80004cb8 <_malloc_r+0x174>
80004b7e:	f0 09 00 38 	add	r8,r8,r9<<0x3
80004b82:	70 36       	ld.w	r6,r8[0xc]
80004b84:	10 36       	cp.w	r6,r8
80004b86:	c0 61       	brne	80004b92 <_malloc_r+0x4e>
80004b88:	ec c8 ff f8 	sub	r8,r6,-8
80004b8c:	70 36       	ld.w	r6,r8[0xc]
80004b8e:	10 36       	cp.w	r6,r8
80004b90:	c0 90       	breq	80004ba2 <_malloc_r+0x5e>
80004b92:	6c 19       	ld.w	r9,r6[0x4]
80004b94:	04 9c       	mov	r12,r2
80004b96:	e0 19 ff fc 	andl	r9,0xfffc
80004b9a:	6c 3a       	ld.w	r10,r6[0xc]
80004b9c:	ec 09 00 09 	add	r9,r6,r9
80004ba0:	c4 88       	rjmp	80004c30 <_malloc_r+0xec>
80004ba2:	f2 c7 ff fe 	sub	r7,r9,-2
80004ba6:	c5 18       	rjmp	80004c48 <_malloc_r+0x104>
80004ba8:	ea 08 16 09 	lsr	r8,r5,0x9
80004bac:	c0 41       	brne	80004bb4 <_malloc_r+0x70>
80004bae:	ea 09 16 03 	lsr	r9,r5,0x3
80004bb2:	c2 a8       	rjmp	80004c06 <_malloc_r+0xc2>
80004bb4:	58 48       	cp.w	r8,4
80004bb6:	e0 8b 00 07 	brhi	80004bc4 <_malloc_r+0x80>
80004bba:	ea 08 16 06 	lsr	r8,r5,0x6
80004bbe:	f0 c9 ff c8 	sub	r9,r8,-56
80004bc2:	c2 28       	rjmp	80004c06 <_malloc_r+0xc2>
80004bc4:	59 48       	cp.w	r8,20
80004bc6:	e0 8b 00 05 	brhi	80004bd0 <_malloc_r+0x8c>
80004bca:	f0 c9 ff a5 	sub	r9,r8,-91
80004bce:	c1 c8       	rjmp	80004c06 <_malloc_r+0xc2>
80004bd0:	e0 48 00 54 	cp.w	r8,84
80004bd4:	e0 8b 00 07 	brhi	80004be2 <_malloc_r+0x9e>
80004bd8:	ea 08 16 0c 	lsr	r8,r5,0xc
80004bdc:	f0 c9 ff 92 	sub	r9,r8,-110
80004be0:	c1 38       	rjmp	80004c06 <_malloc_r+0xc2>
80004be2:	e0 48 01 54 	cp.w	r8,340
80004be6:	e0 8b 00 07 	brhi	80004bf4 <_malloc_r+0xb0>
80004bea:	ea 08 16 0f 	lsr	r8,r5,0xf
80004bee:	f0 c9 ff 89 	sub	r9,r8,-119
80004bf2:	c0 a8       	rjmp	80004c06 <_malloc_r+0xc2>
80004bf4:	ea 09 16 12 	lsr	r9,r5,0x12
80004bf8:	e0 48 05 54 	cp.w	r8,1364
80004bfc:	e0 88 00 04 	brls	80004c04 <_malloc_r+0xc0>
80004c00:	37 e9       	mov	r9,126
80004c02:	c0 28       	rjmp	80004c06 <_malloc_r+0xc2>
80004c04:	28 49       	sub	r9,-124
80004c06:	4a d8       	lddpc	r8,80004cb8 <_malloc_r+0x174>
80004c08:	f0 09 00 3c 	add	r12,r8,r9<<0x3
80004c0c:	78 36       	ld.w	r6,r12[0xc]
80004c0e:	c1 98       	rjmp	80004c40 <_malloc_r+0xfc>
80004c10:	6c 18       	ld.w	r8,r6[0x4]
80004c12:	e0 18 ff fc 	andl	r8,0xfffc
80004c16:	f0 05 01 0b 	sub	r11,r8,r5
80004c1a:	58 fb       	cp.w	r11,15
80004c1c:	e0 8a 00 04 	brle	80004c24 <_malloc_r+0xe0>
80004c20:	20 19       	sub	r9,1
80004c22:	c1 18       	rjmp	80004c44 <_malloc_r+0x100>
80004c24:	6c 3a       	ld.w	r10,r6[0xc]
80004c26:	58 0b       	cp.w	r11,0
80004c28:	c0 b5       	brlt	80004c3e <_malloc_r+0xfa>
80004c2a:	ec 08 00 09 	add	r9,r6,r8
80004c2e:	04 9c       	mov	r12,r2
80004c30:	6c 28       	ld.w	r8,r6[0x8]
80004c32:	95 28       	st.w	r10[0x8],r8
80004c34:	91 3a       	st.w	r8[0xc],r10
80004c36:	72 18       	ld.w	r8,r9[0x4]
80004c38:	a1 a8       	sbr	r8,0x0
80004c3a:	93 18       	st.w	r9[0x4],r8
80004c3c:	cc b8       	rjmp	80004dd2 <_malloc_r+0x28e>
80004c3e:	14 96       	mov	r6,r10
80004c40:	18 36       	cp.w	r6,r12
80004c42:	ce 71       	brne	80004c10 <_malloc_r+0xcc>
80004c44:	f2 c7 ff ff 	sub	r7,r9,-1
80004c48:	49 cb       	lddpc	r11,80004cb8 <_malloc_r+0x174>
80004c4a:	f6 c4 ff f8 	sub	r4,r11,-8
80004c4e:	68 26       	ld.w	r6,r4[0x8]
80004c50:	08 36       	cp.w	r6,r4
80004c52:	c7 c0       	breq	80004d4a <_malloc_r+0x206>
80004c54:	6c 19       	ld.w	r9,r6[0x4]
80004c56:	e0 19 ff fc 	andl	r9,0xfffc
80004c5a:	f2 05 01 08 	sub	r8,r9,r5
80004c5e:	58 f8       	cp.w	r8,15
80004c60:	e0 8a 00 0e 	brle	80004c7c <_malloc_r+0x138>
80004c64:	ec 05 00 09 	add	r9,r6,r5
80004c68:	89 39       	st.w	r4[0xc],r9
80004c6a:	89 29       	st.w	r4[0x8],r9
80004c6c:	a1 a5       	sbr	r5,0x0
80004c6e:	f2 08 09 08 	st.w	r9[r8],r8
80004c72:	8d 15       	st.w	r6[0x4],r5
80004c74:	93 24       	st.w	r9[0x8],r4
80004c76:	93 34       	st.w	r9[0xc],r4
80004c78:	04 9c       	mov	r12,r2
80004c7a:	cd fb       	rjmp	80004c38 <_malloc_r+0xf4>
80004c7c:	89 34       	st.w	r4[0xc],r4
80004c7e:	89 24       	st.w	r4[0x8],r4
80004c80:	58 08       	cp.w	r8,0
80004c82:	c0 55       	brlt	80004c8c <_malloc_r+0x148>
80004c84:	ec 09 00 09 	add	r9,r6,r9
80004c88:	04 9c       	mov	r12,r2
80004c8a:	cd 6b       	rjmp	80004c36 <_malloc_r+0xf2>
80004c8c:	e0 49 01 ff 	cp.w	r9,511
80004c90:	e0 8b 00 16 	brhi	80004cbc <_malloc_r+0x178>
80004c94:	f2 0a 16 03 	lsr	r10,r9,0x3
80004c98:	f6 0a 00 38 	add	r8,r11,r10<<0x3
80004c9c:	70 29       	ld.w	r9,r8[0x8]
80004c9e:	8d 38       	st.w	r6[0xc],r8
80004ca0:	8d 29       	st.w	r6[0x8],r9
80004ca2:	93 36       	st.w	r9[0xc],r6
80004ca4:	91 26       	st.w	r8[0x8],r6
80004ca6:	76 19       	ld.w	r9,r11[0x4]
80004ca8:	a3 4a       	asr	r10,0x2
80004caa:	30 18       	mov	r8,1
80004cac:	f0 0a 09 48 	lsl	r8,r8,r10
80004cb0:	10 49       	or	r9,r8
80004cb2:	97 19       	st.w	r11[0x4],r9
80004cb4:	c4 b8       	rjmp	80004d4a <_malloc_r+0x206>
80004cb6:	d7 03       	nop
80004cb8:	00 00       	add	r0,r0
80004cba:	01 2c       	ld.uh	r12,r0++
80004cbc:	f2 0a 16 09 	lsr	r10,r9,0x9
80004cc0:	58 4a       	cp.w	r10,4
80004cc2:	e0 8b 00 07 	brhi	80004cd0 <_malloc_r+0x18c>
80004cc6:	f2 08 16 06 	lsr	r8,r9,0x6
80004cca:	f0 ca ff c8 	sub	r10,r8,-56
80004cce:	c2 28       	rjmp	80004d12 <_malloc_r+0x1ce>
80004cd0:	59 4a       	cp.w	r10,20
80004cd2:	e0 8b 00 04 	brhi	80004cda <_malloc_r+0x196>
80004cd6:	2a 5a       	sub	r10,-91
80004cd8:	c1 d8       	rjmp	80004d12 <_malloc_r+0x1ce>
80004cda:	e0 4a 00 54 	cp.w	r10,84
80004cde:	e0 8b 00 07 	brhi	80004cec <_malloc_r+0x1a8>
80004ce2:	f2 08 16 0c 	lsr	r8,r9,0xc
80004ce6:	f0 ca ff 92 	sub	r10,r8,-110
80004cea:	c1 48       	rjmp	80004d12 <_malloc_r+0x1ce>
80004cec:	e0 4a 01 54 	cp.w	r10,340
80004cf0:	e0 8b 00 07 	brhi	80004cfe <_malloc_r+0x1ba>
80004cf4:	f2 08 16 0f 	lsr	r8,r9,0xf
80004cf8:	f0 ca ff 89 	sub	r10,r8,-119
80004cfc:	c0 b8       	rjmp	80004d12 <_malloc_r+0x1ce>
80004cfe:	f2 08 16 12 	lsr	r8,r9,0x12
80004d02:	e0 4a 05 54 	cp.w	r10,1364
80004d06:	f9 ba 0b 7e 	movhi	r10,126
80004d0a:	f9 bb 08 7c 	movls	r11,124
80004d0e:	f1 db e8 0a 	addls	r10,r8,r11
80004d12:	4c 6e       	lddpc	lr,80004e28 <_malloc_r+0x2e4>
80004d14:	fc 0a 00 3c 	add	r12,lr,r10<<0x3
80004d18:	78 2b       	ld.w	r11,r12[0x8]
80004d1a:	18 3b       	cp.w	r11,r12
80004d1c:	c0 d1       	brne	80004d36 <_malloc_r+0x1f2>
80004d1e:	a3 4a       	asr	r10,0x2
80004d20:	30 18       	mov	r8,1
80004d22:	f0 0a 09 48 	lsl	r8,r8,r10
80004d26:	7c 19       	ld.w	r9,lr[0x4]
80004d28:	10 49       	or	r9,r8
80004d2a:	16 98       	mov	r8,r11
80004d2c:	9d 19       	st.w	lr[0x4],r9
80004d2e:	c0 a8       	rjmp	80004d42 <_malloc_r+0x1fe>
80004d30:	76 2b       	ld.w	r11,r11[0x8]
80004d32:	18 3b       	cp.w	r11,r12
80004d34:	c0 60       	breq	80004d40 <_malloc_r+0x1fc>
80004d36:	76 18       	ld.w	r8,r11[0x4]
80004d38:	e0 18 ff fc 	andl	r8,0xfffc
80004d3c:	10 39       	cp.w	r9,r8
80004d3e:	cf 93       	brcs	80004d30 <_malloc_r+0x1ec>
80004d40:	76 38       	ld.w	r8,r11[0xc]
80004d42:	8d 38       	st.w	r6[0xc],r8
80004d44:	8d 2b       	st.w	r6[0x8],r11
80004d46:	97 36       	st.w	r11[0xc],r6
80004d48:	91 26       	st.w	r8[0x8],r6
80004d4a:	ee 09 14 02 	asr	r9,r7,0x2
80004d4e:	30 18       	mov	r8,1
80004d50:	4b 61       	lddpc	r1,80004e28 <_malloc_r+0x2e4>
80004d52:	f0 09 09 4b 	lsl	r11,r8,r9
80004d56:	62 19       	ld.w	r9,r1[0x4]
80004d58:	12 3b       	cp.w	r11,r9
80004d5a:	e0 8b 00 69 	brhi	80004e2c <_malloc_r+0x2e8>
80004d5e:	f7 e9 00 08 	and	r8,r11,r9
80004d62:	c0 d1       	brne	80004d7c <_malloc_r+0x238>
80004d64:	0e 98       	mov	r8,r7
80004d66:	a1 7b       	lsl	r11,0x1
80004d68:	e0 18 ff fc 	andl	r8,0xfffc
80004d6c:	f0 c7 ff fc 	sub	r7,r8,-4
80004d70:	c0 38       	rjmp	80004d76 <_malloc_r+0x232>
80004d72:	2f c7       	sub	r7,-4
80004d74:	a1 7b       	lsl	r11,0x1
80004d76:	f7 e9 00 08 	and	r8,r11,r9
80004d7a:	cf c0       	breq	80004d72 <_malloc_r+0x22e>
80004d7c:	e2 07 00 33 	add	r3,r1,r7<<0x3
80004d80:	0e 9c       	mov	r12,r7
80004d82:	06 99       	mov	r9,r3
80004d84:	72 36       	ld.w	r6,r9[0xc]
80004d86:	c2 b8       	rjmp	80004ddc <_malloc_r+0x298>
80004d88:	6c 18       	ld.w	r8,r6[0x4]
80004d8a:	e0 18 ff fc 	andl	r8,0xfffc
80004d8e:	f0 05 01 0e 	sub	lr,r8,r5
80004d92:	58 fe       	cp.w	lr,15
80004d94:	e0 8a 00 13 	brle	80004dba <_malloc_r+0x276>
80004d98:	6c 39       	ld.w	r9,r6[0xc]
80004d9a:	6c 28       	ld.w	r8,r6[0x8]
80004d9c:	93 28       	st.w	r9[0x8],r8
80004d9e:	91 39       	st.w	r8[0xc],r9
80004da0:	ec 05 00 09 	add	r9,r6,r5
80004da4:	89 39       	st.w	r4[0xc],r9
80004da6:	89 29       	st.w	r4[0x8],r9
80004da8:	a1 a5       	sbr	r5,0x0
80004daa:	f2 0e 09 0e 	st.w	r9[lr],lr
80004dae:	8d 15       	st.w	r6[0x4],r5
80004db0:	93 24       	st.w	r9[0x8],r4
80004db2:	93 34       	st.w	r9[0xc],r4
80004db4:	04 9c       	mov	r12,r2
80004db6:	1c 98       	mov	r8,lr
80004db8:	c4 0b       	rjmp	80004c38 <_malloc_r+0xf4>
80004dba:	6c 3a       	ld.w	r10,r6[0xc]
80004dbc:	58 0e       	cp.w	lr,0
80004dbe:	c0 e5       	brlt	80004dda <_malloc_r+0x296>
80004dc0:	ec 08 00 08 	add	r8,r6,r8
80004dc4:	04 9c       	mov	r12,r2
80004dc6:	70 19       	ld.w	r9,r8[0x4]
80004dc8:	a1 a9       	sbr	r9,0x0
80004dca:	91 19       	st.w	r8[0x4],r9
80004dcc:	6c 28       	ld.w	r8,r6[0x8]
80004dce:	95 28       	st.w	r10[0x8],r8
80004dd0:	91 3a       	st.w	r8[0xc],r10
80004dd2:	ce fc       	rcall	80004fb0 <__malloc_unlock>
80004dd4:	ec cc ff f8 	sub	r12,r6,-8
80004dd8:	d8 32       	popm	r0-r7,pc
80004dda:	14 96       	mov	r6,r10
80004ddc:	12 36       	cp.w	r6,r9
80004dde:	cd 51       	brne	80004d88 <_malloc_r+0x244>
80004de0:	2f fc       	sub	r12,-1
80004de2:	f1 dc c0 02 	bfextu	r8,r12,0x0,0x2
80004de6:	c0 30       	breq	80004dec <_malloc_r+0x2a8>
80004de8:	2f 89       	sub	r9,-8
80004dea:	cc db       	rjmp	80004d84 <_malloc_r+0x240>
80004dec:	0e 99       	mov	r9,r7
80004dee:	06 9a       	mov	r10,r3
80004df0:	f1 d9 c0 02 	bfextu	r8,r9,0x0,0x2
80004df4:	c0 51       	brne	80004dfe <_malloc_r+0x2ba>
80004df6:	62 18       	ld.w	r8,r1[0x4]
80004df8:	16 88       	andn	r8,r11
80004dfa:	83 18       	st.w	r1[0x4],r8
80004dfc:	c0 78       	rjmp	80004e0a <_malloc_r+0x2c6>
80004dfe:	f4 c8 00 08 	sub	r8,r10,8
80004e02:	20 19       	sub	r9,1
80004e04:	74 0a       	ld.w	r10,r10[0x0]
80004e06:	10 3a       	cp.w	r10,r8
80004e08:	cf 40       	breq	80004df0 <_malloc_r+0x2ac>
80004e0a:	a1 7b       	lsl	r11,0x1
80004e0c:	62 19       	ld.w	r9,r1[0x4]
80004e0e:	12 3b       	cp.w	r11,r9
80004e10:	e0 8b 00 0e 	brhi	80004e2c <_malloc_r+0x2e8>
80004e14:	58 0b       	cp.w	r11,0
80004e16:	c0 b0       	breq	80004e2c <_malloc_r+0x2e8>
80004e18:	18 97       	mov	r7,r12
80004e1a:	c0 38       	rjmp	80004e20 <_malloc_r+0x2dc>
80004e1c:	2f c7       	sub	r7,-4
80004e1e:	a1 7b       	lsl	r11,0x1
80004e20:	f7 e9 00 08 	and	r8,r11,r9
80004e24:	ca c1       	brne	80004d7c <_malloc_r+0x238>
80004e26:	cf bb       	rjmp	80004e1c <_malloc_r+0x2d8>
80004e28:	00 00       	add	r0,r0
80004e2a:	01 2c       	ld.uh	r12,r0++
80004e2c:	62 23       	ld.w	r3,r1[0x8]
80004e2e:	66 14       	ld.w	r4,r3[0x4]
80004e30:	e0 14 ff fc 	andl	r4,0xfffc
80004e34:	0a 34       	cp.w	r4,r5
80004e36:	5f 39       	srlo	r9
80004e38:	e8 05 01 0a 	sub	r10,r4,r5
80004e3c:	58 fa       	cp.w	r10,15
80004e3e:	5f a8       	srle	r8
80004e40:	10 49       	or	r9,r8
80004e42:	e0 80 00 a1 	breq	80004f84 <_malloc_r+0x440>
80004e46:	4c b8       	lddpc	r8,80004f70 <_malloc_r+0x42c>
80004e48:	70 08       	ld.w	r8,r8[0x0]
80004e4a:	2f 08       	sub	r8,-16
80004e4c:	f0 05 00 07 	add	r7,r8,r5
80004e50:	4c 98       	lddpc	r8,80004f74 <_malloc_r+0x430>
80004e52:	70 08       	ld.w	r8,r8[0x0]
80004e54:	5b f8       	cp.w	r8,-1
80004e56:	f9 b9 01 7f 	movne	r9,127
80004e5a:	ef d9 e1 08 	addne	r8,r7,r9
80004e5e:	f9 b9 01 80 	movne	r9,-128
80004e62:	f1 d9 e1 27 	andne	r7,r8,r9
80004e66:	04 9c       	mov	r12,r2
80004e68:	0e 9b       	mov	r11,r7
80004e6a:	cb dc       	rcall	80004fe4 <_sbrk_r>
80004e6c:	18 96       	mov	r6,r12
80004e6e:	5b fc       	cp.w	r12,-1
80004e70:	c7 00       	breq	80004f50 <_malloc_r+0x40c>
80004e72:	e6 04 00 0a 	add	r10,r3,r4
80004e76:	14 3c       	cp.w	r12,r10
80004e78:	c0 32       	brcc	80004e7e <_malloc_r+0x33a>
80004e7a:	02 33       	cp.w	r3,r1
80004e7c:	c6 a1       	brne	80004f50 <_malloc_r+0x40c>
80004e7e:	4b f9       	lddpc	r9,80004f78 <_malloc_r+0x434>
80004e80:	72 08       	ld.w	r8,r9[0x0]
80004e82:	ee 08 00 0b 	add	r11,r7,r8
80004e86:	93 0b       	st.w	r9[0x0],r11
80004e88:	14 36       	cp.w	r6,r10
80004e8a:	c0 a1       	brne	80004e9e <_malloc_r+0x35a>
80004e8c:	f1 d6 c0 07 	bfextu	r8,r6,0x0,0x7
80004e90:	c0 71       	brne	80004e9e <_malloc_r+0x35a>
80004e92:	ee 04 00 08 	add	r8,r7,r4
80004e96:	62 29       	ld.w	r9,r1[0x8]
80004e98:	a1 a8       	sbr	r8,0x0
80004e9a:	93 18       	st.w	r9[0x4],r8
80004e9c:	c4 e8       	rjmp	80004f38 <_malloc_r+0x3f4>
80004e9e:	4b 69       	lddpc	r9,80004f74 <_malloc_r+0x430>
80004ea0:	72 08       	ld.w	r8,r9[0x0]
80004ea2:	5b f8       	cp.w	r8,-1
80004ea4:	c0 31       	brne	80004eaa <_malloc_r+0x366>
80004ea6:	93 06       	st.w	r9[0x0],r6
80004ea8:	c0 68       	rjmp	80004eb4 <_malloc_r+0x370>
80004eaa:	ec 0b 00 09 	add	r9,r6,r11
80004eae:	4b 38       	lddpc	r8,80004f78 <_malloc_r+0x434>
80004eb0:	14 19       	sub	r9,r10
80004eb2:	91 09       	st.w	r8[0x0],r9
80004eb4:	f3 d6 c0 03 	bfextu	r9,r6,0x0,0x3
80004eb8:	f2 08 11 08 	rsub	r8,r9,8
80004ebc:	58 09       	cp.w	r9,0
80004ebe:	f0 09 17 10 	movne	r9,r8
80004ec2:	ed d9 e1 06 	addne	r6,r6,r9
80004ec6:	28 09       	sub	r9,-128
80004ec8:	ec 07 00 08 	add	r8,r6,r7
80004ecc:	f1 d8 c0 07 	bfextu	r8,r8,0x0,0x7
80004ed0:	f2 08 01 07 	sub	r7,r9,r8
80004ed4:	04 9c       	mov	r12,r2
80004ed6:	0e 9b       	mov	r11,r7
80004ed8:	c8 6c       	rcall	80004fe4 <_sbrk_r>
80004eda:	5b fc       	cp.w	r12,-1
80004edc:	ec 0c 17 00 	moveq	r12,r6
80004ee0:	f9 b7 00 00 	moveq	r7,0
80004ee4:	f8 06 01 08 	sub	r8,r12,r6
80004ee8:	0e 08       	add	r8,r7
80004eea:	a1 a8       	sbr	r8,0x0
80004eec:	4a 39       	lddpc	r9,80004f78 <_malloc_r+0x434>
80004eee:	8d 18       	st.w	r6[0x4],r8
80004ef0:	83 26       	st.w	r1[0x8],r6
80004ef2:	72 08       	ld.w	r8,r9[0x0]
80004ef4:	ee 08 00 08 	add	r8,r7,r8
80004ef8:	93 08       	st.w	r9[0x0],r8
80004efa:	02 33       	cp.w	r3,r1
80004efc:	c1 e0       	breq	80004f38 <_malloc_r+0x3f4>
80004efe:	58 f4       	cp.w	r4,15
80004f00:	e0 8b 00 05 	brhi	80004f0a <_malloc_r+0x3c6>
80004f04:	30 18       	mov	r8,1
80004f06:	8d 18       	st.w	r6[0x4],r8
80004f08:	c2 48       	rjmp	80004f50 <_malloc_r+0x40c>
80004f0a:	30 5a       	mov	r10,5
80004f0c:	e8 c9 00 0c 	sub	r9,r4,12
80004f10:	e0 19 ff f8 	andl	r9,0xfff8
80004f14:	e6 09 00 08 	add	r8,r3,r9
80004f18:	91 2a       	st.w	r8[0x8],r10
80004f1a:	91 1a       	st.w	r8[0x4],r10
80004f1c:	66 18       	ld.w	r8,r3[0x4]
80004f1e:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80004f22:	f3 e8 10 08 	or	r8,r9,r8
80004f26:	87 18       	st.w	r3[0x4],r8
80004f28:	58 f9       	cp.w	r9,15
80004f2a:	e0 88 00 07 	brls	80004f38 <_malloc_r+0x3f4>
80004f2e:	e6 cb ff f8 	sub	r11,r3,-8
80004f32:	04 9c       	mov	r12,r2
80004f34:	e0 a0 1a b6 	rcall	800084a0 <_free_r>
80004f38:	49 08       	lddpc	r8,80004f78 <_malloc_r+0x434>
80004f3a:	49 1a       	lddpc	r10,80004f7c <_malloc_r+0x438>
80004f3c:	70 09       	ld.w	r9,r8[0x0]
80004f3e:	74 08       	ld.w	r8,r10[0x0]
80004f40:	10 39       	cp.w	r9,r8
80004f42:	f5 f9 ba 00 	st.whi	r10[0x0],r9
80004f46:	48 fa       	lddpc	r10,80004f80 <_malloc_r+0x43c>
80004f48:	74 08       	ld.w	r8,r10[0x0]
80004f4a:	10 39       	cp.w	r9,r8
80004f4c:	f5 f9 ba 00 	st.whi	r10[0x0],r9
80004f50:	62 28       	ld.w	r8,r1[0x8]
80004f52:	70 18       	ld.w	r8,r8[0x4]
80004f54:	e0 18 ff fc 	andl	r8,0xfffc
80004f58:	0a 38       	cp.w	r8,r5
80004f5a:	5f 39       	srlo	r9
80004f5c:	f0 05 01 0a 	sub	r10,r8,r5
80004f60:	58 fa       	cp.w	r10,15
80004f62:	5f a8       	srle	r8
80004f64:	10 49       	or	r9,r8
80004f66:	c0 f0       	breq	80004f84 <_malloc_r+0x440>
80004f68:	04 9c       	mov	r12,r2
80004f6a:	c2 3c       	rcall	80004fb0 <__malloc_unlock>
80004f6c:	d8 3a       	popm	r0-r7,pc,r12=0
80004f6e:	d7 03       	nop
80004f70:	00 00       	add	r0,r0
80004f72:	06 c4       	st.b	r3++,r4
80004f74:	00 00       	add	r0,r0
80004f76:	05 38       	ld.ub	r8,r2++
80004f78:	00 00       	add	r0,r0
80004f7a:	06 c8       	st.b	r3++,r8
80004f7c:	00 00       	add	r0,r0
80004f7e:	06 c0       	st.b	r3++,r0
80004f80:	00 00       	add	r0,r0
80004f82:	06 bc       	st.h	r3++,r12
80004f84:	0a 98       	mov	r8,r5
80004f86:	a1 a8       	sbr	r8,0x0
80004f88:	62 26       	ld.w	r6,r1[0x8]
80004f8a:	a1 aa       	sbr	r10,0x0
80004f8c:	8d 18       	st.w	r6[0x4],r8
80004f8e:	ec 05 00 08 	add	r8,r6,r5
80004f92:	04 9c       	mov	r12,r2
80004f94:	83 28       	st.w	r1[0x8],r8
80004f96:	91 1a       	st.w	r8[0x4],r10
80004f98:	c0 cc       	rcall	80004fb0 <__malloc_unlock>
80004f9a:	ec cc ff f8 	sub	r12,r6,-8
80004f9e:	d8 32       	popm	r0-r7,pc

80004fa0 <memset>:
80004fa0:	18 98       	mov	r8,r12
80004fa2:	c0 38       	rjmp	80004fa8 <memset+0x8>
80004fa4:	10 cb       	st.b	r8++,r11
80004fa6:	20 1a       	sub	r10,1
80004fa8:	58 0a       	cp.w	r10,0
80004faa:	cf d1       	brne	80004fa4 <memset+0x4>
80004fac:	5e fc       	retal	r12

80004fae <__malloc_lock>:
80004fae:	5e fc       	retal	r12

80004fb0 <__malloc_unlock>:
80004fb0:	5e fc       	retal	r12
80004fb2:	d7 03       	nop

80004fb4 <printf>:
80004fb4:	d4 21       	pushm	r4-r7,lr
80004fb6:	48 b8       	lddpc	r8,80004fe0 <printf+0x2c>
80004fb8:	fa c6 ff ec 	sub	r6,sp,-20
80004fbc:	18 95       	mov	r5,r12
80004fbe:	70 07       	ld.w	r7,r8[0x0]
80004fc0:	58 07       	cp.w	r7,0
80004fc2:	c0 70       	breq	80004fd0 <printf+0x1c>
80004fc4:	6e 68       	ld.w	r8,r7[0x18]
80004fc6:	58 08       	cp.w	r8,0
80004fc8:	c0 41       	brne	80004fd0 <printf+0x1c>
80004fca:	0e 9c       	mov	r12,r7
80004fcc:	fe b0 fd 12 	rcall	800049f0 <__sinit>
80004fd0:	0c 99       	mov	r9,r6
80004fd2:	0a 9a       	mov	r10,r5
80004fd4:	0e 9c       	mov	r12,r7
80004fd6:	6e 1b       	ld.w	r11,r7[0x4]
80004fd8:	e0 a0 02 aa 	rcall	8000552c <_vfprintf_r>
80004fdc:	d8 22       	popm	r4-r7,pc
80004fde:	d7 03       	nop
80004fe0:	00 00       	add	r0,r0
80004fe2:	01 28       	ld.uh	r8,r0++

80004fe4 <_sbrk_r>:
80004fe4:	d4 21       	pushm	r4-r7,lr
80004fe6:	30 08       	mov	r8,0
80004fe8:	18 96       	mov	r6,r12
80004fea:	48 77       	lddpc	r7,80005004 <_sbrk_r+0x20>
80004fec:	16 9c       	mov	r12,r11
80004fee:	8f 08       	st.w	r7[0x0],r8
80004ff0:	fe b0 f8 bc 	rcall	80004168 <_sbrk>
80004ff4:	5b fc       	cp.w	r12,-1
80004ff6:	c0 51       	brne	80005000 <_sbrk_r+0x1c>
80004ff8:	6e 08       	ld.w	r8,r7[0x0]
80004ffa:	58 08       	cp.w	r8,0
80004ffc:	ed f8 1a 03 	st.wne	r6[0xc],r8
80005000:	d8 22       	popm	r4-r7,pc
80005002:	d7 03       	nop
80005004:	00 00       	add	r0,r0
80005006:	07 48       	ld.w	r8,--r3

80005008 <setbuf>:
80005008:	d4 01       	pushm	lr
8000500a:	e0 69 04 00 	mov	r9,1024
8000500e:	58 0b       	cp.w	r11,0
80005010:	f9 ba 00 02 	moveq	r10,2
80005014:	f9 ba 01 00 	movne	r10,0
80005018:	c0 2c       	rcall	8000501c <setvbuf>
8000501a:	d8 02       	popm	pc

8000501c <setvbuf>:
8000501c:	d4 31       	pushm	r0-r7,lr
8000501e:	4c 38       	lddpc	r8,80005128 <setvbuf+0x10c>
80005020:	18 97       	mov	r7,r12
80005022:	16 96       	mov	r6,r11
80005024:	14 93       	mov	r3,r10
80005026:	12 95       	mov	r5,r9
80005028:	70 0c       	ld.w	r12,r8[0x0]
8000502a:	58 0c       	cp.w	r12,0
8000502c:	c0 60       	breq	80005038 <setvbuf+0x1c>
8000502e:	78 68       	ld.w	r8,r12[0x18]
80005030:	58 08       	cp.w	r8,0
80005032:	c0 31       	brne	80005038 <setvbuf+0x1c>
80005034:	fe b0 fc de 	rcall	800049f0 <__sinit>
80005038:	4b d8       	lddpc	r8,8000512c <setvbuf+0x110>
8000503a:	10 37       	cp.w	r7,r8
8000503c:	c0 51       	brne	80005046 <setvbuf+0x2a>
8000503e:	4b b8       	lddpc	r8,80005128 <setvbuf+0x10c>
80005040:	70 08       	ld.w	r8,r8[0x0]
80005042:	70 07       	ld.w	r7,r8[0x0]
80005044:	c0 e8       	rjmp	80005060 <setvbuf+0x44>
80005046:	4b b8       	lddpc	r8,80005130 <setvbuf+0x114>
80005048:	10 37       	cp.w	r7,r8
8000504a:	c0 51       	brne	80005054 <setvbuf+0x38>
8000504c:	4b 78       	lddpc	r8,80005128 <setvbuf+0x10c>
8000504e:	70 08       	ld.w	r8,r8[0x0]
80005050:	70 17       	ld.w	r7,r8[0x4]
80005052:	c0 78       	rjmp	80005060 <setvbuf+0x44>
80005054:	4b 88       	lddpc	r8,80005134 <setvbuf+0x118>
80005056:	10 37       	cp.w	r7,r8
80005058:	c0 41       	brne	80005060 <setvbuf+0x44>
8000505a:	4b 48       	lddpc	r8,80005128 <setvbuf+0x10c>
8000505c:	70 08       	ld.w	r8,r8[0x0]
8000505e:	70 27       	ld.w	r7,r8[0x8]
80005060:	58 23       	cp.w	r3,2
80005062:	5f b8       	srhi	r8
80005064:	f1 e5 13 f8 	or	r8,r8,r5>>0x1f
80005068:	c0 20       	breq	8000506c <setvbuf+0x50>
8000506a:	dc 3a       	popm	r0-r7,pc,r12=-1
8000506c:	4a f4       	lddpc	r4,80005128 <setvbuf+0x10c>
8000506e:	0e 9b       	mov	r11,r7
80005070:	68 0c       	ld.w	r12,r4[0x0]
80005072:	fe b0 fb cf 	rcall	80004810 <_fflush_r>
80005076:	30 08       	mov	r8,0
80005078:	8f 68       	st.w	r7[0x18],r8
8000507a:	8f 18       	st.w	r7[0x4],r8
8000507c:	8e 68       	ld.sh	r8,r7[0xc]
8000507e:	ed b8 00 07 	bld	r8,0x7
80005082:	c0 51       	brne	8000508c <setvbuf+0x70>
80005084:	68 0c       	ld.w	r12,r4[0x0]
80005086:	6e 4b       	ld.w	r11,r7[0x10]
80005088:	e0 a0 1a 0c 	rcall	800084a0 <_free_r>
8000508c:	8e 68       	ld.sh	r8,r7[0xc]
8000508e:	e0 18 ff 7c 	andl	r8,0xff7c
80005092:	ae 68       	st.h	r7[0xc],r8
80005094:	58 23       	cp.w	r3,2
80005096:	c0 31       	brne	8000509c <setvbuf+0x80>
80005098:	30 0c       	mov	r12,0
8000509a:	c1 38       	rjmp	800050c0 <setvbuf+0xa4>
8000509c:	58 06       	cp.w	r6,0
8000509e:	c2 11       	brne	800050e0 <setvbuf+0xc4>
800050a0:	e0 64 04 00 	mov	r4,1024
800050a4:	58 05       	cp.w	r5,0
800050a6:	e8 05 17 00 	moveq	r5,r4
800050aa:	0a 9c       	mov	r12,r5
800050ac:	fe b0 fd 44 	rcall	80004b34 <malloc>
800050b0:	18 96       	mov	r6,r12
800050b2:	c1 41       	brne	800050da <setvbuf+0xbe>
800050b4:	08 9c       	mov	r12,r4
800050b6:	fe b0 fd 3f 	rcall	80004b34 <malloc>
800050ba:	18 96       	mov	r6,r12
800050bc:	c0 e1       	brne	800050d8 <setvbuf+0xbc>
800050be:	3f fc       	mov	r12,-1
800050c0:	8e 68       	ld.sh	r8,r7[0xc]
800050c2:	a1 b8       	sbr	r8,0x1
800050c4:	ae 68       	st.h	r7[0xc],r8
800050c6:	ee c8 ff b9 	sub	r8,r7,-71
800050ca:	8f 48       	st.w	r7[0x10],r8
800050cc:	8f 08       	st.w	r7[0x0],r8
800050ce:	30 08       	mov	r8,0
800050d0:	8f 28       	st.w	r7[0x8],r8
800050d2:	30 18       	mov	r8,1
800050d4:	8f 58       	st.w	r7[0x14],r8
800050d6:	d8 32       	popm	r0-r7,pc
800050d8:	08 95       	mov	r5,r4
800050da:	8e 68       	ld.sh	r8,r7[0xc]
800050dc:	a7 b8       	sbr	r8,0x7
800050de:	ae 68       	st.h	r7[0xc],r8
800050e0:	58 03       	cp.w	r3,0
800050e2:	c0 c0       	breq	800050fa <setvbuf+0xde>
800050e4:	58 13       	cp.w	r3,1
800050e6:	c1 21       	brne	8000510a <setvbuf+0xee>
800050e8:	8e 68       	ld.sh	r8,r7[0xc]
800050ea:	a1 a8       	sbr	r8,0x0
800050ec:	ae 68       	st.h	r7[0xc],r8
800050ee:	ea 08 11 00 	rsub	r8,r5,0
800050f2:	58 06       	cp.w	r6,0
800050f4:	ec 08 17 00 	moveq	r8,r6
800050f8:	8f 68       	st.w	r7[0x18],r8
800050fa:	48 c8       	lddpc	r8,80005128 <setvbuf+0x10c>
800050fc:	8f 46       	st.w	r7[0x10],r6
800050fe:	70 09       	ld.w	r9,r8[0x0]
80005100:	8f 06       	st.w	r7[0x0],r6
80005102:	fe c8 07 b6 	sub	r8,pc,1974
80005106:	8f 55       	st.w	r7[0x14],r5
80005108:	93 a8       	st.w	r9[0x28],r8
8000510a:	8e 68       	ld.sh	r8,r7[0xc]
8000510c:	10 9c       	mov	r12,r8
8000510e:	e2 1c 00 08 	andl	r12,0x8,COH
80005112:	c0 90       	breq	80005124 <setvbuf+0x108>
80005114:	f1 d8 c0 02 	bfextu	r8,r8,0x0,0x2
80005118:	30 0c       	mov	r12,0
8000511a:	ea 08 17 00 	moveq	r8,r5
8000511e:	f9 b8 01 00 	movne	r8,0
80005122:	8f 28       	st.w	r7[0x8],r8
80005124:	d8 32       	popm	r0-r7,pc
80005126:	d7 03       	nop
80005128:	00 00       	add	r0,r0
8000512a:	01 28       	ld.uh	r8,r0++
8000512c:	80 00       	ld.sh	r0,r0[0x0]
8000512e:	a5 80       	lsr	r0,0x4
80005130:	80 00       	ld.sh	r0,r0[0x0]
80005132:	a5 a0       	sbr	r0,0x4
80005134:	80 00       	ld.sh	r0,r0[0x0]
80005136:	a5 c0       	cbr	r0,0x4

80005138 <sprintf>:
80005138:	d4 01       	pushm	lr
8000513a:	21 7d       	sub	sp,92
8000513c:	e0 68 ff ff 	mov	r8,65535
80005140:	ea 18 7f ff 	orh	r8,0x7fff
80005144:	50 58       	stdsp	sp[0x14],r8
80005146:	50 28       	stdsp	sp[0x8],r8
80005148:	e0 68 02 08 	mov	r8,520
8000514c:	ba 68       	st.h	sp[0xc],r8
8000514e:	3f f8       	mov	r8,-1
80005150:	ba 78       	st.h	sp[0xe],r8
80005152:	48 88       	lddpc	r8,80005170 <sprintf+0x38>
80005154:	50 4c       	stdsp	sp[0x10],r12
80005156:	16 9a       	mov	r10,r11
80005158:	50 0c       	stdsp	sp[0x0],r12
8000515a:	fa c9 ff a0 	sub	r9,sp,-96
8000515e:	70 0c       	ld.w	r12,r8[0x0]
80005160:	1a 9b       	mov	r11,sp
80005162:	ce 5d       	rcall	8000552c <_vfprintf_r>
80005164:	30 09       	mov	r9,0
80005166:	40 08       	lddsp	r8,sp[0x0]
80005168:	b0 89       	st.b	r8[0x0],r9
8000516a:	2e 9d       	sub	sp,-92
8000516c:	d8 02       	popm	pc
8000516e:	d7 03       	nop
80005170:	00 00       	add	r0,r0
80005172:	01 28       	ld.uh	r8,r0++

80005174 <__sclose>:
80005174:	d4 01       	pushm	lr
80005176:	96 7b       	ld.sh	r11,r11[0xe]
80005178:	e0 a0 12 50 	rcall	80007618 <_close_r>
8000517c:	d8 02       	popm	pc
8000517e:	d7 03       	nop

80005180 <__sseek>:
80005180:	d4 21       	pushm	r4-r7,lr
80005182:	16 97       	mov	r7,r11
80005184:	96 7b       	ld.sh	r11,r11[0xe]
80005186:	e0 a0 1b 9f 	rcall	800088c4 <_lseek_r>
8000518a:	8e 68       	ld.sh	r8,r7[0xc]
8000518c:	10 99       	mov	r9,r8
8000518e:	ad c9       	cbr	r9,0xc
80005190:	5b fc       	cp.w	r12,-1
80005192:	ef f9 0c 06 	st.heq	r7[0xc],r9
80005196:	ef fc 1a 15 	st.wne	r7[0x54],r12
8000519a:	e0 69 10 00 	mov	r9,4096
8000519e:	f1 d9 e1 38 	orne	r8,r8,r9
800051a2:	ef f8 1c 06 	st.hne	r7[0xc],r8
800051a6:	d8 22       	popm	r4-r7,pc

800051a8 <__swrite>:
800051a8:	d4 21       	pushm	r4-r7,lr
800051aa:	96 68       	ld.sh	r8,r11[0xc]
800051ac:	16 97       	mov	r7,r11
800051ae:	14 94       	mov	r4,r10
800051b0:	12 95       	mov	r5,r9
800051b2:	e2 18 01 00 	andl	r8,0x100,COH
800051b6:	18 96       	mov	r6,r12
800051b8:	c0 60       	breq	800051c4 <__swrite+0x1c>
800051ba:	30 29       	mov	r9,2
800051bc:	30 0a       	mov	r10,0
800051be:	96 7b       	ld.sh	r11,r11[0xe]
800051c0:	e0 a0 1b 82 	rcall	800088c4 <_lseek_r>
800051c4:	8e 68       	ld.sh	r8,r7[0xc]
800051c6:	ad c8       	cbr	r8,0xc
800051c8:	0a 99       	mov	r9,r5
800051ca:	08 9a       	mov	r10,r4
800051cc:	8e 7b       	ld.sh	r11,r7[0xe]
800051ce:	0c 9c       	mov	r12,r6
800051d0:	ae 68       	st.h	r7[0xc],r8
800051d2:	e0 a0 10 e1 	rcall	80007394 <_write_r>
800051d6:	d8 22       	popm	r4-r7,pc

800051d8 <__sread>:
800051d8:	d4 21       	pushm	r4-r7,lr
800051da:	16 97       	mov	r7,r11
800051dc:	96 7b       	ld.sh	r11,r11[0xe]
800051de:	e0 a0 1f b5 	rcall	80009148 <_read_r>
800051e2:	c0 65       	brlt	800051ee <__sread+0x16>
800051e4:	6f 58       	ld.w	r8,r7[0x54]
800051e6:	18 08       	add	r8,r12
800051e8:	ef 48 00 54 	st.w	r7[84],r8
800051ec:	d8 22       	popm	r4-r7,pc
800051ee:	8e 68       	ld.sh	r8,r7[0xc]
800051f0:	ad c8       	cbr	r8,0xc
800051f2:	ae 68       	st.h	r7[0xc],r8
800051f4:	d8 22       	popm	r4-r7,pc
800051f6:	d7 03       	nop

800051f8 <get_arg>:
800051f8:	d4 31       	pushm	r0-r7,lr
800051fa:	20 6d       	sub	sp,24
800051fc:	fa cc ff c4 	sub	r12,sp,-60
80005200:	50 2b       	stdsp	sp[0x8],r11
80005202:	50 18       	stdsp	sp[0x4],r8
80005204:	78 01       	ld.w	r1,r12[0x0]
80005206:	78 28       	ld.w	r8,r12[0x8]
80005208:	78 10       	ld.w	r0,r12[0x4]
8000520a:	70 0b       	ld.w	r11,r8[0x0]
8000520c:	40 1c       	lddsp	r12,sp[0x4]
8000520e:	58 0b       	cp.w	r11,0
80005210:	f4 0b 17 00 	moveq	r11,r10
80005214:	50 08       	stdsp	sp[0x0],r8
80005216:	40 2a       	lddsp	r10,sp[0x8]
80005218:	12 95       	mov	r5,r9
8000521a:	78 06       	ld.w	r6,r12[0x0]
8000521c:	50 5a       	stdsp	sp[0x14],r10
8000521e:	c2 69       	rjmp	8000546a <get_arg+0x272>
80005220:	2f fb       	sub	r11,-1
80005222:	30 09       	mov	r9,0
80005224:	17 8a       	ld.ub	r10,r11[0x0]
80005226:	32 5c       	mov	r12,37
80005228:	f2 0a 18 00 	cp.b	r10,r9
8000522c:	5f 18       	srne	r8
8000522e:	f8 0a 18 00 	cp.b	r10,r12
80005232:	5f 19       	srne	r9
80005234:	12 68       	and	r8,r9
80005236:	30 09       	mov	r9,0
80005238:	f2 08 18 00 	cp.b	r8,r9
8000523c:	cf 21       	brne	80005220 <get_arg+0x28>
8000523e:	58 0a       	cp.w	r10,0
80005240:	e0 80 01 22 	breq	80005484 <get_arg+0x28c>
80005244:	30 04       	mov	r4,0
80005246:	3f f8       	mov	r8,-1
80005248:	08 93       	mov	r3,r4
8000524a:	50 48       	stdsp	sp[0x10],r8
8000524c:	08 92       	mov	r2,r4
8000524e:	08 99       	mov	r9,r4
80005250:	4c dc       	lddpc	r12,80005384 <get_arg+0x18c>
80005252:	f2 09 00 38 	add	r8,r9,r9<<0x3
80005256:	16 97       	mov	r7,r11
80005258:	0f 3a       	ld.ub	r10,r7++
8000525a:	f8 0a 07 09 	ld.ub	r9,r12[r10]
8000525e:	4c bc       	lddpc	r12,80005388 <get_arg+0x190>
80005260:	12 08       	add	r8,r9
80005262:	f8 08 07 09 	ld.ub	r9,r12[r8]
80005266:	4c ac       	lddpc	r12,8000538c <get_arg+0x194>
80005268:	f8 08 07 08 	ld.ub	r8,r12[r8]
8000526c:	50 38       	stdsp	sp[0xc],r8
8000526e:	20 19       	sub	r9,1
80005270:	58 79       	cp.w	r9,7
80005272:	e0 8b 00 f5 	brhi	8000545c <get_arg+0x264>
80005276:	4c 78       	lddpc	r8,80005390 <get_arg+0x198>
80005278:	f0 09 03 2f 	ld.w	pc,r8[r9<<0x2]
8000527c:	36 88       	mov	r8,104
8000527e:	f0 0a 18 00 	cp.b	r10,r8
80005282:	e0 80 00 ed 	breq	8000545c <get_arg+0x264>
80005286:	37 18       	mov	r8,113
80005288:	f0 0a 18 00 	cp.b	r10,r8
8000528c:	c0 70       	breq	8000529a <get_arg+0xa2>
8000528e:	34 c8       	mov	r8,76
80005290:	f0 0a 18 00 	cp.b	r10,r8
80005294:	c0 51       	brne	8000529e <get_arg+0xa6>
80005296:	a3 b3       	sbr	r3,0x3
80005298:	ce 28       	rjmp	8000545c <get_arg+0x264>
8000529a:	a5 b3       	sbr	r3,0x5
8000529c:	ce 08       	rjmp	8000545c <get_arg+0x264>
8000529e:	0f 89       	ld.ub	r9,r7[0x0]
800052a0:	36 c8       	mov	r8,108
800052a2:	f0 09 18 00 	cp.b	r9,r8
800052a6:	c0 51       	brne	800052b0 <get_arg+0xb8>
800052a8:	a5 b3       	sbr	r3,0x5
800052aa:	ee cb ff ff 	sub	r11,r7,-1
800052ae:	cd 88       	rjmp	8000545e <get_arg+0x266>
800052b0:	a5 a3       	sbr	r3,0x4
800052b2:	cd 58       	rjmp	8000545c <get_arg+0x264>
800052b4:	ed d6 c0 05 	bfextu	r6,r6,0x0,0x5
800052b8:	36 7c       	mov	r12,103
800052ba:	f8 0a 18 00 	cp.b	r10,r12
800052be:	e0 8b 00 27 	brhi	8000530c <get_arg+0x114>
800052c2:	36 58       	mov	r8,101
800052c4:	f0 0a 18 00 	cp.b	r10,r8
800052c8:	c4 82       	brcc	80005358 <get_arg+0x160>
800052ca:	34 f8       	mov	r8,79
800052cc:	f0 0a 18 00 	cp.b	r10,r8
800052d0:	c4 80       	breq	80005360 <get_arg+0x168>
800052d2:	e0 8b 00 0c 	brhi	800052ea <get_arg+0xf2>
800052d6:	34 58       	mov	r8,69
800052d8:	f0 0a 18 00 	cp.b	r10,r8
800052dc:	c3 e0       	breq	80005358 <get_arg+0x160>
800052de:	34 78       	mov	r8,71
800052e0:	f0 0a 18 00 	cp.b	r10,r8
800052e4:	c3 a0       	breq	80005358 <get_arg+0x160>
800052e6:	34 48       	mov	r8,68
800052e8:	c0 88       	rjmp	800052f8 <get_arg+0x100>
800052ea:	35 88       	mov	r8,88
800052ec:	f0 0a 18 00 	cp.b	r10,r8
800052f0:	c2 c0       	breq	80005348 <get_arg+0x150>
800052f2:	e0 8b 00 07 	brhi	80005300 <get_arg+0x108>
800052f6:	35 58       	mov	r8,85
800052f8:	f0 0a 18 00 	cp.b	r10,r8
800052fc:	c3 51       	brne	80005366 <get_arg+0x16e>
800052fe:	c3 18       	rjmp	80005360 <get_arg+0x168>
80005300:	36 38       	mov	r8,99
80005302:	f0 0a 18 00 	cp.b	r10,r8
80005306:	c2 f0       	breq	80005364 <get_arg+0x16c>
80005308:	36 48       	mov	r8,100
8000530a:	c0 e8       	rjmp	80005326 <get_arg+0x12e>
8000530c:	37 08       	mov	r8,112
8000530e:	f0 0a 18 00 	cp.b	r10,r8
80005312:	c2 50       	breq	8000535c <get_arg+0x164>
80005314:	e0 8b 00 0d 	brhi	8000532e <get_arg+0x136>
80005318:	36 e8       	mov	r8,110
8000531a:	f0 0a 18 00 	cp.b	r10,r8
8000531e:	c1 f0       	breq	8000535c <get_arg+0x164>
80005320:	e0 8b 00 14 	brhi	80005348 <get_arg+0x150>
80005324:	36 98       	mov	r8,105
80005326:	f0 0a 18 00 	cp.b	r10,r8
8000532a:	c1 e1       	brne	80005366 <get_arg+0x16e>
8000532c:	c0 e8       	rjmp	80005348 <get_arg+0x150>
8000532e:	37 58       	mov	r8,117
80005330:	f0 0a 18 00 	cp.b	r10,r8
80005334:	c0 a0       	breq	80005348 <get_arg+0x150>
80005336:	37 88       	mov	r8,120
80005338:	f0 0a 18 00 	cp.b	r10,r8
8000533c:	c0 60       	breq	80005348 <get_arg+0x150>
8000533e:	37 38       	mov	r8,115
80005340:	f0 0a 18 00 	cp.b	r10,r8
80005344:	c1 11       	brne	80005366 <get_arg+0x16e>
80005346:	c0 b8       	rjmp	8000535c <get_arg+0x164>
80005348:	ed b3 00 04 	bld	r3,0x4
8000534c:	c0 a0       	breq	80005360 <get_arg+0x168>
8000534e:	ed b3 00 05 	bld	r3,0x5
80005352:	c0 91       	brne	80005364 <get_arg+0x16c>
80005354:	30 22       	mov	r2,2
80005356:	c0 88       	rjmp	80005366 <get_arg+0x16e>
80005358:	30 42       	mov	r2,4
8000535a:	c0 68       	rjmp	80005366 <get_arg+0x16e>
8000535c:	30 32       	mov	r2,3
8000535e:	c0 48       	rjmp	80005366 <get_arg+0x16e>
80005360:	30 12       	mov	r2,1
80005362:	c0 28       	rjmp	80005366 <get_arg+0x16e>
80005364:	30 02       	mov	r2,0
80005366:	40 4a       	lddsp	r10,sp[0x10]
80005368:	5b fa       	cp.w	r10,-1
8000536a:	c0 40       	breq	80005372 <get_arg+0x17a>
8000536c:	e0 0a 09 22 	st.w	r0[r10<<0x2],r2
80005370:	c7 68       	rjmp	8000545c <get_arg+0x264>
80005372:	58 62       	cp.w	r2,6
80005374:	e0 8b 00 74 	brhi	8000545c <get_arg+0x264>
80005378:	6a 09       	ld.w	r9,r5[0x0]
8000537a:	ec ca ff ff 	sub	r10,r6,-1
8000537e:	48 68       	lddpc	r8,80005394 <get_arg+0x19c>
80005380:	f0 02 03 2f 	ld.w	pc,r8[r2<<0x2]
80005384:	80 00       	ld.sh	r0,r0[0x0]
80005386:	a8 d8       	st.b	r4[0x5],r8
80005388:	80 00       	ld.sh	r0,r0[0x0]
8000538a:	a8 04       	st.h	r4[0x0],r4
8000538c:	80 00       	ld.sh	r0,r0[0x0]
8000538e:	a7 88       	lsr	r8,0x6
80005390:	80 00       	ld.sh	r0,r0[0x0]
80005392:	a5 e8       	*unknown*
80005394:	80 00       	ld.sh	r0,r0[0x0]
80005396:	a6 08       	st.h	r3[0x0],r8
80005398:	f2 c8 ff f8 	sub	r8,r9,-8
8000539c:	8b 08       	st.w	r5[0x0],r8
8000539e:	f2 e8 00 00 	ld.d	r8,r9[0]
800053a2:	e2 06 08 38 	st.d	r1[r6<<0x3],r8
800053a6:	c0 f8       	rjmp	800053c4 <get_arg+0x1cc>
800053a8:	f2 c8 ff fc 	sub	r8,r9,-4
800053ac:	8b 08       	st.w	r5[0x0],r8
800053ae:	72 08       	ld.w	r8,r9[0x0]
800053b0:	e2 06 09 38 	st.w	r1[r6<<0x3],r8
800053b4:	c0 88       	rjmp	800053c4 <get_arg+0x1cc>
800053b6:	f2 c8 ff f8 	sub	r8,r9,-8
800053ba:	8b 08       	st.w	r5[0x0],r8
800053bc:	f2 e8 00 00 	ld.d	r8,r9[0]
800053c0:	e2 06 08 38 	st.d	r1[r6<<0x3],r8
800053c4:	0e 9b       	mov	r11,r7
800053c6:	14 96       	mov	r6,r10
800053c8:	c4 b8       	rjmp	8000545e <get_arg+0x266>
800053ca:	60 08       	ld.w	r8,r0[0x0]
800053cc:	5b f8       	cp.w	r8,-1
800053ce:	c0 71       	brne	800053dc <get_arg+0x1e4>
800053d0:	e0 6a 00 80 	mov	r10,128
800053d4:	30 0b       	mov	r11,0
800053d6:	00 9c       	mov	r12,r0
800053d8:	fe b0 fd e4 	rcall	80004fa0 <memset>
800053dc:	e8 cc 00 01 	sub	r12,r4,1
800053e0:	40 5a       	lddsp	r10,sp[0x14]
800053e2:	0e 9b       	mov	r11,r7
800053e4:	f4 0c 0c 4a 	max	r10,r10,r12
800053e8:	50 4c       	stdsp	sp[0x10],r12
800053ea:	50 5a       	stdsp	sp[0x14],r10
800053ec:	c3 98       	rjmp	8000545e <get_arg+0x266>
800053ee:	60 08       	ld.w	r8,r0[0x0]
800053f0:	5b f8       	cp.w	r8,-1
800053f2:	c0 71       	brne	80005400 <get_arg+0x208>
800053f4:	e0 6a 00 80 	mov	r10,128
800053f8:	30 0b       	mov	r11,0
800053fa:	00 9c       	mov	r12,r0
800053fc:	fe b0 fd d2 	rcall	80004fa0 <memset>
80005400:	20 14       	sub	r4,1
80005402:	40 58       	lddsp	r8,sp[0x14]
80005404:	30 09       	mov	r9,0
80005406:	f0 04 0c 48 	max	r8,r8,r4
8000540a:	0e 9b       	mov	r11,r7
8000540c:	e0 04 09 29 	st.w	r0[r4<<0x2],r9
80005410:	50 58       	stdsp	sp[0x14],r8
80005412:	c2 68       	rjmp	8000545e <get_arg+0x266>
80005414:	16 97       	mov	r7,r11
80005416:	6a 08       	ld.w	r8,r5[0x0]
80005418:	f0 c9 ff fc 	sub	r9,r8,-4
8000541c:	8b 09       	st.w	r5[0x0],r9
8000541e:	70 08       	ld.w	r8,r8[0x0]
80005420:	0e 9b       	mov	r11,r7
80005422:	e2 06 09 38 	st.w	r1[r6<<0x3],r8
80005426:	2f f6       	sub	r6,-1
80005428:	c1 b8       	rjmp	8000545e <get_arg+0x266>
8000542a:	f4 c4 00 30 	sub	r4,r10,48
8000542e:	c0 68       	rjmp	8000543a <get_arg+0x242>
80005430:	e8 04 00 28 	add	r8,r4,r4<<0x2
80005434:	2f f7       	sub	r7,-1
80005436:	f2 08 00 14 	add	r4,r9,r8<<0x1
8000543a:	0f 88       	ld.ub	r8,r7[0x0]
8000543c:	58 08       	cp.w	r8,0
8000543e:	c0 f0       	breq	8000545c <get_arg+0x264>
80005440:	f0 c9 00 30 	sub	r9,r8,48
80005444:	58 99       	cp.w	r9,9
80005446:	fe 98 ff f5 	brls	80005430 <get_arg+0x238>
8000544a:	c0 98       	rjmp	8000545c <get_arg+0x264>
8000544c:	2f f7       	sub	r7,-1
8000544e:	0f 88       	ld.ub	r8,r7[0x0]
80005450:	58 08       	cp.w	r8,0
80005452:	c0 50       	breq	8000545c <get_arg+0x264>
80005454:	23 08       	sub	r8,48
80005456:	58 98       	cp.w	r8,9
80005458:	fe 98 ff fa 	brls	8000544c <get_arg+0x254>
8000545c:	0e 9b       	mov	r11,r7
8000545e:	40 39       	lddsp	r9,sp[0xc]
80005460:	30 b8       	mov	r8,11
80005462:	f0 09 18 00 	cp.b	r9,r8
80005466:	fe 91 fe f5 	brne	80005250 <get_arg+0x58>
8000546a:	40 2c       	lddsp	r12,sp[0x8]
8000546c:	17 88       	ld.ub	r8,r11[0x0]
8000546e:	0c 3c       	cp.w	r12,r6
80005470:	5f 49       	srge	r9
80005472:	30 0a       	mov	r10,0
80005474:	f4 08 18 00 	cp.b	r8,r10
80005478:	5f 18       	srne	r8
8000547a:	12 68       	and	r8,r9
8000547c:	f4 08 18 00 	cp.b	r8,r10
80005480:	fe 91 fe d1 	brne	80005222 <get_arg+0x2a>
80005484:	40 2a       	lddsp	r10,sp[0x8]
80005486:	0c 9e       	mov	lr,r6
80005488:	e0 06 00 2c 	add	r12,r0,r6<<0x2
8000548c:	17 89       	ld.ub	r9,r11[0x0]
8000548e:	30 08       	mov	r8,0
80005490:	40 56       	lddsp	r6,sp[0x14]
80005492:	f0 09 18 00 	cp.b	r9,r8
80005496:	ec 07 17 00 	moveq	r7,r6
8000549a:	f4 07 17 10 	movne	r7,r10
8000549e:	e2 0e 00 3a 	add	r10,r1,lr<<0x3
800054a2:	c2 a8       	rjmp	800054f6 <get_arg+0x2fe>
800054a4:	78 08       	ld.w	r8,r12[0x0]
800054a6:	58 38       	cp.w	r8,3
800054a8:	c1 e0       	breq	800054e4 <get_arg+0x2ec>
800054aa:	e0 89 00 07 	brgt	800054b8 <get_arg+0x2c0>
800054ae:	58 18       	cp.w	r8,1
800054b0:	c1 a0       	breq	800054e4 <get_arg+0x2ec>
800054b2:	58 28       	cp.w	r8,2
800054b4:	c1 81       	brne	800054e4 <get_arg+0x2ec>
800054b6:	c0 58       	rjmp	800054c0 <get_arg+0x2c8>
800054b8:	58 58       	cp.w	r8,5
800054ba:	c0 c0       	breq	800054d2 <get_arg+0x2da>
800054bc:	c0 b5       	brlt	800054d2 <get_arg+0x2da>
800054be:	c1 38       	rjmp	800054e4 <get_arg+0x2ec>
800054c0:	6a 09       	ld.w	r9,r5[0x0]
800054c2:	f2 c8 ff f8 	sub	r8,r9,-8
800054c6:	8b 08       	st.w	r5[0x0],r8
800054c8:	f2 e8 00 00 	ld.d	r8,r9[0]
800054cc:	f4 e9 00 00 	st.d	r10[0],r8
800054d0:	c1 08       	rjmp	800054f0 <get_arg+0x2f8>
800054d2:	6a 09       	ld.w	r9,r5[0x0]
800054d4:	f2 c8 ff f8 	sub	r8,r9,-8
800054d8:	8b 08       	st.w	r5[0x0],r8
800054da:	f2 e8 00 00 	ld.d	r8,r9[0]
800054de:	f4 e9 00 00 	st.d	r10[0],r8
800054e2:	c0 78       	rjmp	800054f0 <get_arg+0x2f8>
800054e4:	6a 08       	ld.w	r8,r5[0x0]
800054e6:	f0 c9 ff fc 	sub	r9,r8,-4
800054ea:	8b 09       	st.w	r5[0x0],r9
800054ec:	70 08       	ld.w	r8,r8[0x0]
800054ee:	95 08       	st.w	r10[0x0],r8
800054f0:	2f fe       	sub	lr,-1
800054f2:	2f 8a       	sub	r10,-8
800054f4:	2f cc       	sub	r12,-4
800054f6:	0e 3e       	cp.w	lr,r7
800054f8:	fe 9a ff d6 	brle	800054a4 <get_arg+0x2ac>
800054fc:	40 19       	lddsp	r9,sp[0x4]
800054fe:	40 08       	lddsp	r8,sp[0x0]
80005500:	40 26       	lddsp	r6,sp[0x8]
80005502:	93 0e       	st.w	r9[0x0],lr
80005504:	91 0b       	st.w	r8[0x0],r11
80005506:	e2 06 00 3c 	add	r12,r1,r6<<0x3
8000550a:	2f ad       	sub	sp,-24
8000550c:	d8 32       	popm	r0-r7,pc
8000550e:	d7 03       	nop

80005510 <__sprint_r>:
80005510:	d4 21       	pushm	r4-r7,lr
80005512:	14 97       	mov	r7,r10
80005514:	74 28       	ld.w	r8,r10[0x8]
80005516:	58 08       	cp.w	r8,0
80005518:	c0 41       	brne	80005520 <__sprint_r+0x10>
8000551a:	95 18       	st.w	r10[0x4],r8
8000551c:	10 9c       	mov	r12,r8
8000551e:	d8 22       	popm	r4-r7,pc
80005520:	e0 a0 18 8c 	rcall	80008638 <__sfvwrite_r>
80005524:	30 08       	mov	r8,0
80005526:	8f 18       	st.w	r7[0x4],r8
80005528:	8f 28       	st.w	r7[0x8],r8
8000552a:	d8 22       	popm	r4-r7,pc

8000552c <_vfprintf_r>:
8000552c:	d4 31       	pushm	r0-r7,lr
8000552e:	fa cd 06 cc 	sub	sp,sp,1740
80005532:	50 4b       	stdsp	sp[0x10],r11
80005534:	51 49       	stdsp	sp[0x50],r9
80005536:	14 97       	mov	r7,r10
80005538:	50 5c       	stdsp	sp[0x14],r12
8000553a:	e0 a0 19 c1 	rcall	800088bc <_localeconv_r>
8000553e:	78 0c       	ld.w	r12,r12[0x0]
80005540:	50 dc       	stdsp	sp[0x34],r12
80005542:	40 5b       	lddsp	r11,sp[0x14]
80005544:	58 0b       	cp.w	r11,0
80005546:	c0 70       	breq	80005554 <_vfprintf_r+0x28>
80005548:	76 68       	ld.w	r8,r11[0x18]
8000554a:	58 08       	cp.w	r8,0
8000554c:	c0 41       	brne	80005554 <_vfprintf_r+0x28>
8000554e:	16 9c       	mov	r12,r11
80005550:	fe b0 fa 50 	rcall	800049f0 <__sinit>
80005554:	4c 48       	lddpc	r8,80005664 <_vfprintf_r+0x138>
80005556:	40 4a       	lddsp	r10,sp[0x10]
80005558:	10 3a       	cp.w	r10,r8
8000555a:	c0 51       	brne	80005564 <_vfprintf_r+0x38>
8000555c:	40 59       	lddsp	r9,sp[0x14]
8000555e:	72 09       	ld.w	r9,r9[0x0]
80005560:	50 49       	stdsp	sp[0x10],r9
80005562:	c1 28       	rjmp	80005586 <_vfprintf_r+0x5a>
80005564:	4c 18       	lddpc	r8,80005668 <_vfprintf_r+0x13c>
80005566:	40 4b       	lddsp	r11,sp[0x10]
80005568:	10 3b       	cp.w	r11,r8
8000556a:	c0 51       	brne	80005574 <_vfprintf_r+0x48>
8000556c:	40 5a       	lddsp	r10,sp[0x14]
8000556e:	74 1a       	ld.w	r10,r10[0x4]
80005570:	50 4a       	stdsp	sp[0x10],r10
80005572:	c0 a8       	rjmp	80005586 <_vfprintf_r+0x5a>
80005574:	4b e8       	lddpc	r8,8000566c <_vfprintf_r+0x140>
80005576:	40 49       	lddsp	r9,sp[0x10]
80005578:	10 39       	cp.w	r9,r8
8000557a:	fb f8 00 05 	ld.weq	r8,sp[0x14]
8000557e:	f1 f8 00 02 	ld.weq	r8,r8[0x8]
80005582:	fb f8 0a 04 	st.weq	sp[0x10],r8
80005586:	40 4b       	lddsp	r11,sp[0x10]
80005588:	96 68       	ld.sh	r8,r11[0xc]
8000558a:	ed b8 00 03 	bld	r8,0x3
8000558e:	c0 41       	brne	80005596 <_vfprintf_r+0x6a>
80005590:	76 48       	ld.w	r8,r11[0x10]
80005592:	58 08       	cp.w	r8,0
80005594:	c0 71       	brne	800055a2 <_vfprintf_r+0x76>
80005596:	40 4b       	lddsp	r11,sp[0x10]
80005598:	40 5c       	lddsp	r12,sp[0x14]
8000559a:	e0 a0 0f 11 	rcall	800073bc <__swsetup_r>
8000559e:	e0 81 0e f2 	brne	80007382 <_vfprintf_r+0x1e56>
800055a2:	40 49       	lddsp	r9,sp[0x10]
800055a4:	92 6a       	ld.sh	r10,r9[0xc]
800055a6:	14 98       	mov	r8,r10
800055a8:	e2 18 00 1a 	andl	r8,0x1a,COH
800055ac:	58 a8       	cp.w	r8,10
800055ae:	c3 e1       	brne	8000562a <_vfprintf_r+0xfe>
800055b0:	92 7b       	ld.sh	r11,r9[0xe]
800055b2:	30 08       	mov	r8,0
800055b4:	f0 0b 19 00 	cp.h	r11,r8
800055b8:	c3 95       	brlt	8000562a <_vfprintf_r+0xfe>
800055ba:	fb 5b 05 e2 	st.h	sp[1506],r11
800055be:	40 4b       	lddsp	r11,sp[0x10]
800055c0:	76 88       	ld.w	r8,r11[0x20]
800055c2:	fb 48 05 f4 	st.w	sp[1524],r8
800055c6:	76 a8       	ld.w	r8,r11[0x28]
800055c8:	fb 48 05 fc 	st.w	sp[1532],r8
800055cc:	fa c8 ff ac 	sub	r8,sp,-84
800055d0:	fb 48 05 e4 	st.w	sp[1508],r8
800055d4:	fb 48 05 d4 	st.w	sp[1492],r8
800055d8:	e0 68 04 00 	mov	r8,1024
800055dc:	a1 da       	cbr	r10,0x1
800055de:	fb 48 05 e8 	st.w	sp[1512],r8
800055e2:	fb 48 05 dc 	st.w	sp[1500],r8
800055e6:	30 08       	mov	r8,0
800055e8:	fb 5a 05 e0 	st.h	sp[1504],r10
800055ec:	41 49       	lddsp	r9,sp[0x50]
800055ee:	0e 9a       	mov	r10,r7
800055f0:	fb 48 05 ec 	st.w	sp[1516],r8
800055f4:	fa c7 fa 2c 	sub	r7,sp,-1492
800055f8:	40 5c       	lddsp	r12,sp[0x14]
800055fa:	0e 9b       	mov	r11,r7
800055fc:	c9 8f       	rcall	8000552c <_vfprintf_r>
800055fe:	50 ac       	stdsp	sp[0x28],r12
80005600:	c0 95       	brlt	80005612 <_vfprintf_r+0xe6>
80005602:	0e 9b       	mov	r11,r7
80005604:	40 5c       	lddsp	r12,sp[0x14]
80005606:	fe b0 f9 05 	rcall	80004810 <_fflush_r>
8000560a:	40 aa       	lddsp	r10,sp[0x28]
8000560c:	f9 ba 01 ff 	movne	r10,-1
80005610:	50 aa       	stdsp	sp[0x28],r10
80005612:	fb 08 05 e0 	ld.sh	r8,sp[1504]
80005616:	ed b8 00 06 	bld	r8,0x6
8000561a:	e0 81 0e b6 	brne	80007386 <_vfprintf_r+0x1e5a>
8000561e:	40 49       	lddsp	r9,sp[0x10]
80005620:	92 68       	ld.sh	r8,r9[0xc]
80005622:	a7 a8       	sbr	r8,0x6
80005624:	b2 68       	st.h	r9[0xc],r8
80005626:	e0 8f 0e b0 	bral	80007386 <_vfprintf_r+0x1e5a>
8000562a:	30 08       	mov	r8,0
8000562c:	10 90       	mov	r0,r8
8000562e:	fb 48 06 a0 	st.w	sp[1696],r8
80005632:	fb 48 06 9c 	st.w	sp[1692],r8
80005636:	fb 48 06 c0 	st.w	sp[1728],r8
8000563a:	fb 48 06 c4 	st.w	sp[1732],r8
8000563e:	fa c8 f9 d0 	sub	r8,sp,-1584
80005642:	51 37       	stdsp	sp[0x4c],r7
80005644:	fb 48 06 98 	st.w	sp[1688],r8
80005648:	10 91       	mov	r1,r8
8000564a:	50 10       	stdsp	sp[0x4],r0
8000564c:	3f f8       	mov	r8,-1
8000564e:	50 00       	stdsp	sp[0x0],r0
80005650:	fb 48 05 54 	st.w	sp[1364],r8
80005654:	50 a0       	stdsp	sp[0x28],r0
80005656:	50 f0       	stdsp	sp[0x3c],r0
80005658:	51 20       	stdsp	sp[0x48],r0
8000565a:	51 00       	stdsp	sp[0x40],r0
8000565c:	41 33       	lddsp	r3,sp[0x4c]
8000565e:	32 5a       	mov	r10,37
80005660:	c0 98       	rjmp	80005672 <_vfprintf_r+0x146>
80005662:	d7 03       	nop
80005664:	80 00       	ld.sh	r0,r0[0x0]
80005666:	a5 80       	lsr	r0,0x4
80005668:	80 00       	ld.sh	r0,r0[0x0]
8000566a:	a5 a0       	sbr	r0,0x4
8000566c:	80 00       	ld.sh	r0,r0[0x0]
8000566e:	a5 c0       	cbr	r0,0x4
80005670:	2f f3       	sub	r3,-1
80005672:	07 88       	ld.ub	r8,r3[0x0]
80005674:	30 0b       	mov	r11,0
80005676:	f4 08 18 00 	cp.b	r8,r10
8000567a:	5f 19       	srne	r9
8000567c:	f6 08 18 00 	cp.b	r8,r11
80005680:	5f 18       	srne	r8
80005682:	12 68       	and	r8,r9
80005684:	f6 08 18 00 	cp.b	r8,r11
80005688:	cf 41       	brne	80005670 <_vfprintf_r+0x144>
8000568a:	41 3a       	lddsp	r10,sp[0x4c]
8000568c:	e6 0a 01 06 	sub	r6,r3,r10
80005690:	c1 e0       	breq	800056cc <_vfprintf_r+0x1a0>
80005692:	fa f8 06 a0 	ld.w	r8,sp[1696]
80005696:	0c 08       	add	r8,r6
80005698:	83 0a       	st.w	r1[0x0],r10
8000569a:	fb 48 06 a0 	st.w	sp[1696],r8
8000569e:	83 16       	st.w	r1[0x4],r6
800056a0:	fa f8 06 9c 	ld.w	r8,sp[1692]
800056a4:	2f f8       	sub	r8,-1
800056a6:	fb 48 06 9c 	st.w	sp[1692],r8
800056aa:	58 78       	cp.w	r8,7
800056ac:	e0 89 00 04 	brgt	800056b4 <_vfprintf_r+0x188>
800056b0:	2f 81       	sub	r1,-8
800056b2:	c0 a8       	rjmp	800056c6 <_vfprintf_r+0x19a>
800056b4:	fa ca f9 68 	sub	r10,sp,-1688
800056b8:	40 4b       	lddsp	r11,sp[0x10]
800056ba:	40 5c       	lddsp	r12,sp[0x14]
800056bc:	c2 af       	rcall	80005510 <__sprint_r>
800056be:	e0 81 0e 5d 	brne	80007378 <_vfprintf_r+0x1e4c>
800056c2:	fa c1 f9 d0 	sub	r1,sp,-1584
800056c6:	40 a9       	lddsp	r9,sp[0x28]
800056c8:	0c 09       	add	r9,r6
800056ca:	50 a9       	stdsp	sp[0x28],r9
800056cc:	07 88       	ld.ub	r8,r3[0x0]
800056ce:	30 0b       	mov	r11,0
800056d0:	f6 08 18 00 	cp.b	r8,r11
800056d4:	e0 80 0e 44 	breq	8000735c <_vfprintf_r+0x1e30>
800056d8:	30 0a       	mov	r10,0
800056da:	3f f9       	mov	r9,-1
800056dc:	e6 c8 ff ff 	sub	r8,r3,-1
800056e0:	fb 6b 06 cb 	st.b	sp[1739],r11
800056e4:	50 9a       	stdsp	sp[0x24],r10
800056e6:	50 c9       	stdsp	sp[0x30],r9
800056e8:	51 38       	stdsp	sp[0x4c],r8
800056ea:	00 97       	mov	r7,r0
800056ec:	14 92       	mov	r2,r10
800056ee:	50 ba       	stdsp	sp[0x2c],r10
800056f0:	c0 68       	rjmp	800056fc <_vfprintf_r+0x1d0>
800056f2:	3f fb       	mov	r11,-1
800056f4:	51 36       	stdsp	sp[0x4c],r6
800056f6:	50 cb       	stdsp	sp[0x30],r11
800056f8:	c0 28       	rjmp	800056fc <_vfprintf_r+0x1d0>
800056fa:	30 02       	mov	r2,0
800056fc:	41 3a       	lddsp	r10,sp[0x4c]
800056fe:	15 39       	ld.ub	r9,r10++
80005700:	51 3a       	stdsp	sp[0x4c],r10
80005702:	50 89       	stdsp	sp[0x20],r9
80005704:	c0 28       	rjmp	80005708 <_vfprintf_r+0x1dc>
80005706:	50 b9       	stdsp	sp[0x2c],r9
80005708:	40 88       	lddsp	r8,sp[0x20]
8000570a:	22 08       	sub	r8,32
8000570c:	e0 48 00 58 	cp.w	r8,88
80005710:	e0 8b 09 ac 	brhi	80006a68 <_vfprintf_r+0x153c>
80005714:	4c ab       	lddpc	r11,8000583c <_vfprintf_r+0x310>
80005716:	f6 08 03 2f 	ld.w	pc,r11[r8<<0x2]
8000571a:	4c aa       	lddpc	r10,80005840 <_vfprintf_r+0x314>
8000571c:	00 99       	mov	r9,r0
8000571e:	51 2a       	stdsp	sp[0x48],r10
80005720:	e0 8f 08 15 	bral	8000674a <_vfprintf_r+0x121e>
80005724:	fb 38 06 cb 	ld.ub	r8,sp[1739]
80005728:	30 09       	mov	r9,0
8000572a:	f2 08 18 00 	cp.b	r8,r9
8000572e:	ce 71       	brne	800056fc <_vfprintf_r+0x1d0>
80005730:	32 08       	mov	r8,32
80005732:	c7 88       	rjmp	80005822 <_vfprintf_r+0x2f6>
80005734:	40 98       	lddsp	r8,sp[0x24]
80005736:	a1 a8       	sbr	r8,0x0
80005738:	c0 c9       	rjmp	80005950 <_vfprintf_r+0x424>
8000573a:	41 3b       	lddsp	r11,sp[0x4c]
8000573c:	17 89       	ld.ub	r9,r11[0x0]
8000573e:	f2 c8 00 30 	sub	r8,r9,48
80005742:	58 98       	cp.w	r8,9
80005744:	e0 8b 00 1e 	brhi	80005780 <_vfprintf_r+0x254>
80005748:	16 9a       	mov	r10,r11
8000574a:	30 0b       	mov	r11,0
8000574c:	2f fa       	sub	r10,-1
8000574e:	f2 c8 00 30 	sub	r8,r9,48
80005752:	f6 0b 00 29 	add	r9,r11,r11<<0x2
80005756:	f0 09 00 1b 	add	r11,r8,r9<<0x1
8000575a:	15 39       	ld.ub	r9,r10++
8000575c:	f2 c8 00 30 	sub	r8,r9,48
80005760:	58 98       	cp.w	r8,9
80005762:	fe 98 ff f6 	brls	8000574e <_vfprintf_r+0x222>
80005766:	e0 49 00 24 	cp.w	r9,36
8000576a:	cc 81       	brne	800056fa <_vfprintf_r+0x1ce>
8000576c:	e0 4b 00 20 	cp.w	r11,32
80005770:	e0 89 0e 04 	brgt	80007378 <_vfprintf_r+0x1e4c>
80005774:	20 1b       	sub	r11,1
80005776:	fa f8 06 c4 	ld.w	r8,sp[1732]
8000577a:	10 3b       	cp.w	r11,r8
8000577c:	c0 95       	brlt	8000578e <_vfprintf_r+0x262>
8000577e:	c0 e8       	rjmp	8000579a <_vfprintf_r+0x26e>
80005780:	fa f9 06 c4 	ld.w	r9,sp[1732]
80005784:	e0 ca ff ff 	sub	r10,r0,-1
80005788:	12 30       	cp.w	r0,r9
8000578a:	c1 e5       	brlt	800057c6 <_vfprintf_r+0x29a>
8000578c:	c2 68       	rjmp	800057d8 <_vfprintf_r+0x2ac>
8000578e:	fa c9 f9 34 	sub	r9,sp,-1740
80005792:	51 3a       	stdsp	sp[0x4c],r10
80005794:	f2 0b 00 38 	add	r8,r9,r11<<0x3
80005798:	c1 c8       	rjmp	800057d0 <_vfprintf_r+0x2a4>
8000579a:	fa c8 f9 40 	sub	r8,sp,-1728
8000579e:	51 3a       	stdsp	sp[0x4c],r10
800057a0:	1a d8       	st.w	--sp,r8
800057a2:	fa c8 fa a8 	sub	r8,sp,-1368
800057a6:	1a d8       	st.w	--sp,r8
800057a8:	fa c8 fb a4 	sub	r8,sp,-1116
800057ac:	06 9a       	mov	r10,r3
800057ae:	1a d8       	st.w	--sp,r8
800057b0:	fa c8 f9 30 	sub	r8,sp,-1744
800057b4:	fa c9 ff a4 	sub	r9,sp,-92
800057b8:	40 8c       	lddsp	r12,sp[0x20]
800057ba:	fe b0 fd 1f 	rcall	800051f8 <get_arg>
800057be:	2f dd       	sub	sp,-12
800057c0:	78 0c       	ld.w	r12,r12[0x0]
800057c2:	50 bc       	stdsp	sp[0x2c],r12
800057c4:	c2 58       	rjmp	8000580e <_vfprintf_r+0x2e2>
800057c6:	fa cb f9 34 	sub	r11,sp,-1740
800057ca:	14 90       	mov	r0,r10
800057cc:	f6 07 00 38 	add	r8,r11,r7<<0x3
800057d0:	f0 f8 fd 88 	ld.w	r8,r8[-632]
800057d4:	50 b8       	stdsp	sp[0x2c],r8
800057d6:	c1 c8       	rjmp	8000580e <_vfprintf_r+0x2e2>
800057d8:	41 4c       	lddsp	r12,sp[0x50]
800057da:	59 f9       	cp.w	r9,31
800057dc:	e0 89 00 13 	brgt	80005802 <_vfprintf_r+0x2d6>
800057e0:	f8 c8 ff fc 	sub	r8,r12,-4
800057e4:	78 0c       	ld.w	r12,r12[0x0]
800057e6:	51 48       	stdsp	sp[0x50],r8
800057e8:	50 bc       	stdsp	sp[0x2c],r12
800057ea:	fa cb f9 34 	sub	r11,sp,-1740
800057ee:	f6 09 00 38 	add	r8,r11,r9<<0x3
800057f2:	f1 4c fd 88 	st.w	r8[-632],r12
800057f6:	14 90       	mov	r0,r10
800057f8:	f2 c8 ff ff 	sub	r8,r9,-1
800057fc:	fb 48 06 c4 	st.w	sp[1732],r8
80005800:	c0 78       	rjmp	8000580e <_vfprintf_r+0x2e2>
80005802:	78 09       	ld.w	r9,r12[0x0]
80005804:	f8 c8 ff fc 	sub	r8,r12,-4
80005808:	50 b9       	stdsp	sp[0x2c],r9
8000580a:	14 90       	mov	r0,r10
8000580c:	51 48       	stdsp	sp[0x50],r8
8000580e:	40 b8       	lddsp	r8,sp[0x2c]
80005810:	58 08       	cp.w	r8,0
80005812:	fe 94 ff 75 	brge	800056fc <_vfprintf_r+0x1d0>
80005816:	5c 38       	neg	r8
80005818:	50 b8       	stdsp	sp[0x2c],r8
8000581a:	40 9b       	lddsp	r11,sp[0x24]
8000581c:	a3 ab       	sbr	r11,0x2
8000581e:	cc b8       	rjmp	800059b4 <_vfprintf_r+0x488>
80005820:	32 b8       	mov	r8,43
80005822:	fb 68 06 cb 	st.b	sp[1739],r8
80005826:	c6 bb       	rjmp	800056fc <_vfprintf_r+0x1d0>
80005828:	41 3a       	lddsp	r10,sp[0x4c]
8000582a:	15 39       	ld.ub	r9,r10++
8000582c:	51 3a       	stdsp	sp[0x4c],r10
8000582e:	50 89       	stdsp	sp[0x20],r9
80005830:	e0 49 00 2a 	cp.w	r9,42
80005834:	c0 80       	breq	80005844 <_vfprintf_r+0x318>
80005836:	30 0c       	mov	r12,0
80005838:	c8 08       	rjmp	80005938 <_vfprintf_r+0x40c>
8000583a:	d7 03       	nop
8000583c:	80 00       	ld.sh	r0,r0[0x0]
8000583e:	a6 24       	st.h	r3[0x4],r4
80005840:	80 00       	ld.sh	r0,r0[0x0]
80005842:	a8 70       	st.h	r4[0xe],r0
80005844:	41 38       	lddsp	r8,sp[0x4c]
80005846:	11 89       	ld.ub	r9,r8[0x0]
80005848:	f2 c8 00 30 	sub	r8,r9,48
8000584c:	58 98       	cp.w	r8,9
8000584e:	e0 8b 00 1f 	brhi	8000588c <_vfprintf_r+0x360>
80005852:	41 36       	lddsp	r6,sp[0x4c]
80005854:	30 0b       	mov	r11,0
80005856:	2f f6       	sub	r6,-1
80005858:	f2 c8 00 30 	sub	r8,r9,48
8000585c:	f6 0b 00 29 	add	r9,r11,r11<<0x2
80005860:	f0 09 00 1b 	add	r11,r8,r9<<0x1
80005864:	0d 39       	ld.ub	r9,r6++
80005866:	f2 c8 00 30 	sub	r8,r9,48
8000586a:	58 98       	cp.w	r8,9
8000586c:	fe 98 ff f6 	brls	80005858 <_vfprintf_r+0x32c>
80005870:	e0 49 00 24 	cp.w	r9,36
80005874:	fe 91 ff 43 	brne	800056fa <_vfprintf_r+0x1ce>
80005878:	e0 4b 00 20 	cp.w	r11,32
8000587c:	e0 89 0d 7e 	brgt	80007378 <_vfprintf_r+0x1e4c>
80005880:	20 1b       	sub	r11,1
80005882:	fa f8 06 c4 	ld.w	r8,sp[1732]
80005886:	10 3b       	cp.w	r11,r8
80005888:	c0 95       	brlt	8000589a <_vfprintf_r+0x36e>
8000588a:	c0 d8       	rjmp	800058a4 <_vfprintf_r+0x378>
8000588c:	fa f9 06 c4 	ld.w	r9,sp[1732]
80005890:	e0 ca ff ff 	sub	r10,r0,-1
80005894:	12 30       	cp.w	r0,r9
80005896:	c1 c5       	brlt	800058ce <_vfprintf_r+0x3a2>
80005898:	c2 58       	rjmp	800058e2 <_vfprintf_r+0x3b6>
8000589a:	fa ca f9 34 	sub	r10,sp,-1740
8000589e:	f4 0b 00 38 	add	r8,r10,r11<<0x3
800058a2:	c1 c8       	rjmp	800058da <_vfprintf_r+0x3ae>
800058a4:	fa c8 f9 40 	sub	r8,sp,-1728
800058a8:	1a d8       	st.w	--sp,r8
800058aa:	fa c8 fa a8 	sub	r8,sp,-1368
800058ae:	1a d8       	st.w	--sp,r8
800058b0:	fa c8 fb a4 	sub	r8,sp,-1116
800058b4:	06 9a       	mov	r10,r3
800058b6:	1a d8       	st.w	--sp,r8
800058b8:	fa c8 f9 30 	sub	r8,sp,-1744
800058bc:	fa c9 ff a4 	sub	r9,sp,-92
800058c0:	40 8c       	lddsp	r12,sp[0x20]
800058c2:	fe b0 fc 9b 	rcall	800051f8 <get_arg>
800058c6:	2f dd       	sub	sp,-12
800058c8:	78 0c       	ld.w	r12,r12[0x0]
800058ca:	50 cc       	stdsp	sp[0x30],r12
800058cc:	c2 88       	rjmp	8000591c <_vfprintf_r+0x3f0>
800058ce:	fa c9 f9 34 	sub	r9,sp,-1740
800058d2:	14 90       	mov	r0,r10
800058d4:	41 36       	lddsp	r6,sp[0x4c]
800058d6:	f2 07 00 38 	add	r8,r9,r7<<0x3
800058da:	f0 f8 fd 88 	ld.w	r8,r8[-632]
800058de:	50 c8       	stdsp	sp[0x30],r8
800058e0:	c1 e8       	rjmp	8000591c <_vfprintf_r+0x3f0>
800058e2:	41 4c       	lddsp	r12,sp[0x50]
800058e4:	59 f9       	cp.w	r9,31
800058e6:	e0 89 00 14 	brgt	8000590e <_vfprintf_r+0x3e2>
800058ea:	f8 c8 ff fc 	sub	r8,r12,-4
800058ee:	78 0c       	ld.w	r12,r12[0x0]
800058f0:	51 48       	stdsp	sp[0x50],r8
800058f2:	50 cc       	stdsp	sp[0x30],r12
800058f4:	fa cb f9 34 	sub	r11,sp,-1740
800058f8:	f6 09 00 38 	add	r8,r11,r9<<0x3
800058fc:	f1 4c fd 88 	st.w	r8[-632],r12
80005900:	14 90       	mov	r0,r10
80005902:	f2 c8 ff ff 	sub	r8,r9,-1
80005906:	41 36       	lddsp	r6,sp[0x4c]
80005908:	fb 48 06 c4 	st.w	sp[1732],r8
8000590c:	c0 88       	rjmp	8000591c <_vfprintf_r+0x3f0>
8000590e:	78 09       	ld.w	r9,r12[0x0]
80005910:	f8 c8 ff fc 	sub	r8,r12,-4
80005914:	50 c9       	stdsp	sp[0x30],r9
80005916:	14 90       	mov	r0,r10
80005918:	41 36       	lddsp	r6,sp[0x4c]
8000591a:	51 48       	stdsp	sp[0x50],r8
8000591c:	40 c8       	lddsp	r8,sp[0x30]
8000591e:	58 08       	cp.w	r8,0
80005920:	fe 95 fe e9 	brlt	800056f2 <_vfprintf_r+0x1c6>
80005924:	51 36       	stdsp	sp[0x4c],r6
80005926:	ce ba       	rjmp	800056fc <_vfprintf_r+0x1d0>
80005928:	41 3b       	lddsp	r11,sp[0x4c]
8000592a:	f8 0c 00 28 	add	r8,r12,r12<<0x2
8000592e:	17 3a       	ld.ub	r10,r11++
80005930:	f2 08 00 1c 	add	r12,r9,r8<<0x1
80005934:	51 3b       	stdsp	sp[0x4c],r11
80005936:	50 8a       	stdsp	sp[0x20],r10
80005938:	40 89       	lddsp	r9,sp[0x20]
8000593a:	23 09       	sub	r9,48
8000593c:	58 99       	cp.w	r9,9
8000593e:	fe 98 ff f5 	brls	80005928 <_vfprintf_r+0x3fc>
80005942:	3f f9       	mov	r9,-1
80005944:	f8 09 0c 4c 	max	r12,r12,r9
80005948:	50 cc       	stdsp	sp[0x30],r12
8000594a:	cd fa       	rjmp	80005708 <_vfprintf_r+0x1dc>
8000594c:	40 98       	lddsp	r8,sp[0x24]
8000594e:	a7 b8       	sbr	r8,0x7
80005950:	50 98       	stdsp	sp[0x24],r8
80005952:	cd 5a       	rjmp	800056fc <_vfprintf_r+0x1d0>
80005954:	30 09       	mov	r9,0
80005956:	40 88       	lddsp	r8,sp[0x20]
80005958:	41 3b       	lddsp	r11,sp[0x4c]
8000595a:	23 08       	sub	r8,48
8000595c:	17 3a       	ld.ub	r10,r11++
8000595e:	51 3b       	stdsp	sp[0x4c],r11
80005960:	50 8a       	stdsp	sp[0x20],r10
80005962:	f2 09 00 29 	add	r9,r9,r9<<0x2
80005966:	f0 09 00 19 	add	r9,r8,r9<<0x1
8000596a:	14 98       	mov	r8,r10
8000596c:	23 08       	sub	r8,48
8000596e:	58 98       	cp.w	r8,9
80005970:	fe 98 ff f3 	brls	80005956 <_vfprintf_r+0x42a>
80005974:	e0 4a 00 24 	cp.w	r10,36
80005978:	fe 91 fe c7 	brne	80005706 <_vfprintf_r+0x1da>
8000597c:	e0 49 00 20 	cp.w	r9,32
80005980:	e0 89 0c fc 	brgt	80007378 <_vfprintf_r+0x1e4c>
80005984:	f2 c7 00 01 	sub	r7,r9,1
80005988:	30 12       	mov	r2,1
8000598a:	cb 9a       	rjmp	800056fc <_vfprintf_r+0x1d0>
8000598c:	40 99       	lddsp	r9,sp[0x24]
8000598e:	a3 b9       	sbr	r9,0x3
80005990:	c0 e8       	rjmp	800059ac <_vfprintf_r+0x480>
80005992:	40 98       	lddsp	r8,sp[0x24]
80005994:	a7 a8       	sbr	r8,0x6
80005996:	cd db       	rjmp	80005950 <_vfprintf_r+0x424>
80005998:	41 3b       	lddsp	r11,sp[0x4c]
8000599a:	36 ca       	mov	r10,108
8000599c:	17 88       	ld.ub	r8,r11[0x0]
8000599e:	f4 08 18 00 	cp.b	r8,r10
800059a2:	c0 71       	brne	800059b0 <_vfprintf_r+0x484>
800059a4:	2f fb       	sub	r11,-1
800059a6:	40 99       	lddsp	r9,sp[0x24]
800059a8:	51 3b       	stdsp	sp[0x4c],r11
800059aa:	a5 b9       	sbr	r9,0x5
800059ac:	50 99       	stdsp	sp[0x24],r9
800059ae:	ca 7a       	rjmp	800056fc <_vfprintf_r+0x1d0>
800059b0:	40 9b       	lddsp	r11,sp[0x24]
800059b2:	a5 ab       	sbr	r11,0x4
800059b4:	50 9b       	stdsp	sp[0x24],r11
800059b6:	ca 3a       	rjmp	800056fc <_vfprintf_r+0x1d0>
800059b8:	40 9a       	lddsp	r10,sp[0x24]
800059ba:	a5 ba       	sbr	r10,0x5
800059bc:	50 9a       	stdsp	sp[0x24],r10
800059be:	c9 fa       	rjmp	800056fc <_vfprintf_r+0x1d0>
800059c0:	00 98       	mov	r8,r0
800059c2:	fa fe 06 c4 	ld.w	lr,sp[1732]
800059c6:	58 02       	cp.w	r2,0
800059c8:	c1 d0       	breq	80005a02 <_vfprintf_r+0x4d6>
800059ca:	1c 37       	cp.w	r7,lr
800059cc:	c0 64       	brge	800059d8 <_vfprintf_r+0x4ac>
800059ce:	fa c9 f9 34 	sub	r9,sp,-1740
800059d2:	f2 07 00 38 	add	r8,r9,r7<<0x3
800059d6:	c1 d8       	rjmp	80005a10 <_vfprintf_r+0x4e4>
800059d8:	fa c8 f9 40 	sub	r8,sp,-1728
800059dc:	1a d8       	st.w	--sp,r8
800059de:	fa c8 fa a8 	sub	r8,sp,-1368
800059e2:	0e 9b       	mov	r11,r7
800059e4:	1a d8       	st.w	--sp,r8
800059e6:	fa c8 fb a4 	sub	r8,sp,-1116
800059ea:	06 9a       	mov	r10,r3
800059ec:	1a d8       	st.w	--sp,r8
800059ee:	fa c8 f9 30 	sub	r8,sp,-1744
800059f2:	fa c9 ff a4 	sub	r9,sp,-92
800059f6:	40 8c       	lddsp	r12,sp[0x20]
800059f8:	fe b0 fc 00 	rcall	800051f8 <get_arg>
800059fc:	2f dd       	sub	sp,-12
800059fe:	19 bb       	ld.ub	r11,r12[0x3]
80005a00:	c2 48       	rjmp	80005a48 <_vfprintf_r+0x51c>
80005a02:	2f f0       	sub	r0,-1
80005a04:	1c 38       	cp.w	r8,lr
80005a06:	c0 84       	brge	80005a16 <_vfprintf_r+0x4ea>
80005a08:	fa cb f9 34 	sub	r11,sp,-1740
80005a0c:	f6 07 00 38 	add	r8,r11,r7<<0x3
80005a10:	f1 3b fd 8b 	ld.ub	r11,r8[-629]
80005a14:	c1 a8       	rjmp	80005a48 <_vfprintf_r+0x51c>
80005a16:	41 4c       	lddsp	r12,sp[0x50]
80005a18:	59 fe       	cp.w	lr,31
80005a1a:	e0 89 00 13 	brgt	80005a40 <_vfprintf_r+0x514>
80005a1e:	f8 c8 ff fc 	sub	r8,r12,-4
80005a22:	51 48       	stdsp	sp[0x50],r8
80005a24:	78 09       	ld.w	r9,r12[0x0]
80005a26:	fa ca f9 34 	sub	r10,sp,-1740
80005a2a:	f4 0e 00 38 	add	r8,r10,lr<<0x3
80005a2e:	f1 49 fd 88 	st.w	r8[-632],r9
80005a32:	f7 d9 c0 08 	bfextu	r11,r9,0x0,0x8
80005a36:	fc c8 ff ff 	sub	r8,lr,-1
80005a3a:	fb 48 06 c4 	st.w	sp[1732],r8
80005a3e:	c0 58       	rjmp	80005a48 <_vfprintf_r+0x51c>
80005a40:	f8 c8 ff fc 	sub	r8,r12,-4
80005a44:	19 bb       	ld.ub	r11,r12[0x3]
80005a46:	51 48       	stdsp	sp[0x50],r8
80005a48:	fb 6b 06 70 	st.b	sp[1648],r11
80005a4c:	e0 8f 08 14 	bral	80006a74 <_vfprintf_r+0x1548>
80005a50:	40 98       	lddsp	r8,sp[0x24]
80005a52:	a5 a8       	sbr	r8,0x4
80005a54:	50 98       	stdsp	sp[0x24],r8
80005a56:	00 99       	mov	r9,r0
80005a58:	40 98       	lddsp	r8,sp[0x24]
80005a5a:	ed b8 00 05 	bld	r8,0x5
80005a5e:	c4 c1       	brne	80005af6 <_vfprintf_r+0x5ca>
80005a60:	fa fe 06 c4 	ld.w	lr,sp[1732]
80005a64:	58 02       	cp.w	r2,0
80005a66:	c1 d0       	breq	80005aa0 <_vfprintf_r+0x574>
80005a68:	1c 37       	cp.w	r7,lr
80005a6a:	c0 64       	brge	80005a76 <_vfprintf_r+0x54a>
80005a6c:	fa cb f9 34 	sub	r11,sp,-1740
80005a70:	f6 07 00 38 	add	r8,r11,r7<<0x3
80005a74:	c1 d8       	rjmp	80005aae <_vfprintf_r+0x582>
80005a76:	fa c8 f9 40 	sub	r8,sp,-1728
80005a7a:	1a d8       	st.w	--sp,r8
80005a7c:	fa c8 fa a8 	sub	r8,sp,-1368
80005a80:	1a d8       	st.w	--sp,r8
80005a82:	fa c8 fb a4 	sub	r8,sp,-1116
80005a86:	1a d8       	st.w	--sp,r8
80005a88:	fa c9 ff a4 	sub	r9,sp,-92
80005a8c:	fa c8 f9 30 	sub	r8,sp,-1744
80005a90:	40 8c       	lddsp	r12,sp[0x20]
80005a92:	06 9a       	mov	r10,r3
80005a94:	0e 9b       	mov	r11,r7
80005a96:	fe b0 fb b1 	rcall	800051f8 <get_arg>
80005a9a:	2f dd       	sub	sp,-12
80005a9c:	78 19       	ld.w	r9,r12[0x4]
80005a9e:	c2 78       	rjmp	80005aec <_vfprintf_r+0x5c0>
80005aa0:	2f f0       	sub	r0,-1
80005aa2:	1c 39       	cp.w	r9,lr
80005aa4:	c0 a4       	brge	80005ab8 <_vfprintf_r+0x58c>
80005aa6:	fa ca f9 34 	sub	r10,sp,-1740
80005aaa:	f4 07 00 38 	add	r8,r10,r7<<0x3
80005aae:	f0 f9 fd 8c 	ld.w	r9,r8[-628]
80005ab2:	f0 fc fd 88 	ld.w	r12,r8[-632]
80005ab6:	c1 c8       	rjmp	80005aee <_vfprintf_r+0x5c2>
80005ab8:	41 4c       	lddsp	r12,sp[0x50]
80005aba:	59 fe       	cp.w	lr,31
80005abc:	e0 89 00 14 	brgt	80005ae4 <_vfprintf_r+0x5b8>
80005ac0:	f8 c8 ff f8 	sub	r8,r12,-8
80005ac4:	51 48       	stdsp	sp[0x50],r8
80005ac6:	78 19       	ld.w	r9,r12[0x4]
80005ac8:	fa cb f9 34 	sub	r11,sp,-1740
80005acc:	78 0c       	ld.w	r12,r12[0x0]
80005ace:	f6 0e 00 38 	add	r8,r11,lr<<0x3
80005ad2:	f1 49 fd 8c 	st.w	r8[-628],r9
80005ad6:	f1 4c fd 88 	st.w	r8[-632],r12
80005ada:	fc c8 ff ff 	sub	r8,lr,-1
80005ade:	fb 48 06 c4 	st.w	sp[1732],r8
80005ae2:	c0 68       	rjmp	80005aee <_vfprintf_r+0x5c2>
80005ae4:	f8 c8 ff f8 	sub	r8,r12,-8
80005ae8:	78 19       	ld.w	r9,r12[0x4]
80005aea:	51 48       	stdsp	sp[0x50],r8
80005aec:	78 0c       	ld.w	r12,r12[0x0]
80005aee:	12 9a       	mov	r10,r9
80005af0:	12 94       	mov	r4,r9
80005af2:	18 95       	mov	r5,r12
80005af4:	c9 d8       	rjmp	80005c2e <_vfprintf_r+0x702>
80005af6:	40 98       	lddsp	r8,sp[0x24]
80005af8:	ed b8 00 04 	bld	r8,0x4
80005afc:	c1 01       	brne	80005b1c <_vfprintf_r+0x5f0>
80005afe:	fa fe 06 c4 	ld.w	lr,sp[1732]
80005b02:	58 02       	cp.w	r2,0
80005b04:	c0 80       	breq	80005b14 <_vfprintf_r+0x5e8>
80005b06:	1c 37       	cp.w	r7,lr
80005b08:	c5 a4       	brge	80005bbc <_vfprintf_r+0x690>
80005b0a:	fa ca f9 34 	sub	r10,sp,-1740
80005b0e:	f4 07 00 38 	add	r8,r10,r7<<0x3
80005b12:	c7 18       	rjmp	80005bf4 <_vfprintf_r+0x6c8>
80005b14:	2f f0       	sub	r0,-1
80005b16:	1c 39       	cp.w	r9,lr
80005b18:	c7 14       	brge	80005bfa <_vfprintf_r+0x6ce>
80005b1a:	c4 c8       	rjmp	80005bb2 <_vfprintf_r+0x686>
80005b1c:	40 98       	lddsp	r8,sp[0x24]
80005b1e:	ed b8 00 06 	bld	r8,0x6
80005b22:	c4 21       	brne	80005ba6 <_vfprintf_r+0x67a>
80005b24:	fa fe 06 c4 	ld.w	lr,sp[1732]
80005b28:	58 02       	cp.w	r2,0
80005b2a:	c1 d0       	breq	80005b64 <_vfprintf_r+0x638>
80005b2c:	1c 37       	cp.w	r7,lr
80005b2e:	c0 64       	brge	80005b3a <_vfprintf_r+0x60e>
80005b30:	fa c9 f9 34 	sub	r9,sp,-1740
80005b34:	f2 07 00 38 	add	r8,r9,r7<<0x3
80005b38:	c1 d8       	rjmp	80005b72 <_vfprintf_r+0x646>
80005b3a:	fa c8 f9 40 	sub	r8,sp,-1728
80005b3e:	1a d8       	st.w	--sp,r8
80005b40:	fa c8 fa a8 	sub	r8,sp,-1368
80005b44:	0e 9b       	mov	r11,r7
80005b46:	1a d8       	st.w	--sp,r8
80005b48:	fa c8 fb a4 	sub	r8,sp,-1116
80005b4c:	06 9a       	mov	r10,r3
80005b4e:	1a d8       	st.w	--sp,r8
80005b50:	fa c8 f9 30 	sub	r8,sp,-1744
80005b54:	fa c9 ff a4 	sub	r9,sp,-92
80005b58:	40 8c       	lddsp	r12,sp[0x20]
80005b5a:	fe b0 fb 4f 	rcall	800051f8 <get_arg>
80005b5e:	2f dd       	sub	sp,-12
80005b60:	98 1b       	ld.sh	r11,r12[0x2]
80005b62:	c6 38       	rjmp	80005c28 <_vfprintf_r+0x6fc>
80005b64:	2f f0       	sub	r0,-1
80005b66:	1c 39       	cp.w	r9,lr
80005b68:	c0 84       	brge	80005b78 <_vfprintf_r+0x64c>
80005b6a:	fa cb f9 34 	sub	r11,sp,-1740
80005b6e:	f6 07 00 38 	add	r8,r11,r7<<0x3
80005b72:	f1 0b fd 8a 	ld.sh	r11,r8[-630]
80005b76:	c5 98       	rjmp	80005c28 <_vfprintf_r+0x6fc>
80005b78:	41 4c       	lddsp	r12,sp[0x50]
80005b7a:	59 fe       	cp.w	lr,31
80005b7c:	e0 89 00 13 	brgt	80005ba2 <_vfprintf_r+0x676>
80005b80:	f8 c8 ff fc 	sub	r8,r12,-4
80005b84:	51 48       	stdsp	sp[0x50],r8
80005b86:	78 09       	ld.w	r9,r12[0x0]
80005b88:	fa ca f9 34 	sub	r10,sp,-1740
80005b8c:	f4 0e 00 38 	add	r8,r10,lr<<0x3
80005b90:	f1 49 fd 88 	st.w	r8[-632],r9
80005b94:	f7 d9 b0 10 	bfexts	r11,r9,0x0,0x10
80005b98:	fc c8 ff ff 	sub	r8,lr,-1
80005b9c:	fb 48 06 c4 	st.w	sp[1732],r8
80005ba0:	c4 48       	rjmp	80005c28 <_vfprintf_r+0x6fc>
80005ba2:	98 1b       	ld.sh	r11,r12[0x2]
80005ba4:	c3 f8       	rjmp	80005c22 <_vfprintf_r+0x6f6>
80005ba6:	fa fe 06 c4 	ld.w	lr,sp[1732]
80005baa:	58 02       	cp.w	r2,0
80005bac:	c1 d0       	breq	80005be6 <_vfprintf_r+0x6ba>
80005bae:	1c 37       	cp.w	r7,lr
80005bb0:	c0 64       	brge	80005bbc <_vfprintf_r+0x690>
80005bb2:	fa c9 f9 34 	sub	r9,sp,-1740
80005bb6:	f2 07 00 38 	add	r8,r9,r7<<0x3
80005bba:	c1 d8       	rjmp	80005bf4 <_vfprintf_r+0x6c8>
80005bbc:	fa c8 f9 40 	sub	r8,sp,-1728
80005bc0:	1a d8       	st.w	--sp,r8
80005bc2:	fa c8 fa a8 	sub	r8,sp,-1368
80005bc6:	0e 9b       	mov	r11,r7
80005bc8:	1a d8       	st.w	--sp,r8
80005bca:	fa c8 fb a4 	sub	r8,sp,-1116
80005bce:	06 9a       	mov	r10,r3
80005bd0:	1a d8       	st.w	--sp,r8
80005bd2:	fa c8 f9 30 	sub	r8,sp,-1744
80005bd6:	fa c9 ff a4 	sub	r9,sp,-92
80005bda:	40 8c       	lddsp	r12,sp[0x20]
80005bdc:	fe b0 fb 0e 	rcall	800051f8 <get_arg>
80005be0:	2f dd       	sub	sp,-12
80005be2:	78 0b       	ld.w	r11,r12[0x0]
80005be4:	c2 28       	rjmp	80005c28 <_vfprintf_r+0x6fc>
80005be6:	2f f0       	sub	r0,-1
80005be8:	1c 39       	cp.w	r9,lr
80005bea:	c0 84       	brge	80005bfa <_vfprintf_r+0x6ce>
80005bec:	fa cb f9 34 	sub	r11,sp,-1740
80005bf0:	f6 07 00 38 	add	r8,r11,r7<<0x3
80005bf4:	f0 fb fd 88 	ld.w	r11,r8[-632]
80005bf8:	c1 88       	rjmp	80005c28 <_vfprintf_r+0x6fc>
80005bfa:	41 4c       	lddsp	r12,sp[0x50]
80005bfc:	59 fe       	cp.w	lr,31
80005bfe:	e0 89 00 11 	brgt	80005c20 <_vfprintf_r+0x6f4>
80005c02:	f8 c8 ff fc 	sub	r8,r12,-4
80005c06:	51 48       	stdsp	sp[0x50],r8
80005c08:	fa ca f9 34 	sub	r10,sp,-1740
80005c0c:	78 0b       	ld.w	r11,r12[0x0]
80005c0e:	f4 0e 00 38 	add	r8,r10,lr<<0x3
80005c12:	f1 4b fd 88 	st.w	r8[-632],r11
80005c16:	fc c8 ff ff 	sub	r8,lr,-1
80005c1a:	fb 48 06 c4 	st.w	sp[1732],r8
80005c1e:	c0 58       	rjmp	80005c28 <_vfprintf_r+0x6fc>
80005c20:	78 0b       	ld.w	r11,r12[0x0]
80005c22:	f8 c8 ff fc 	sub	r8,r12,-4
80005c26:	51 48       	stdsp	sp[0x50],r8
80005c28:	16 94       	mov	r4,r11
80005c2a:	f6 05 14 1f 	asr	r5,r11,0x1f
80005c2e:	58 04       	cp.w	r4,0
80005c30:	5c 25       	cpc	r5
80005c32:	c0 a4       	brge	80005c46 <_vfprintf_r+0x71a>
80005c34:	30 08       	mov	r8,0
80005c36:	30 09       	mov	r9,0
80005c38:	f0 04 01 04 	sub	r4,r8,r4
80005c3c:	f2 05 01 45 	sbc	r5,r9,r5
80005c40:	32 d8       	mov	r8,45
80005c42:	fb 68 06 cb 	st.b	sp[1739],r8
80005c46:	30 1e       	mov	lr,1
80005c48:	e0 8f 06 90 	bral	80006968 <_vfprintf_r+0x143c>
80005c4c:	00 99       	mov	r9,r0
80005c4e:	40 98       	lddsp	r8,sp[0x24]
80005c50:	ed b8 00 03 	bld	r8,0x3
80005c54:	c3 b1       	brne	80005cca <_vfprintf_r+0x79e>
80005c56:	fa fe 06 c4 	ld.w	lr,sp[1732]
80005c5a:	58 02       	cp.w	r2,0
80005c5c:	c1 90       	breq	80005c8e <_vfprintf_r+0x762>
80005c5e:	1c 37       	cp.w	r7,lr
80005c60:	c1 a5       	brlt	80005c94 <_vfprintf_r+0x768>
80005c62:	fa c8 f9 40 	sub	r8,sp,-1728
80005c66:	1a d8       	st.w	--sp,r8
80005c68:	fa c8 fa a8 	sub	r8,sp,-1368
80005c6c:	06 9a       	mov	r10,r3
80005c6e:	1a d8       	st.w	--sp,r8
80005c70:	fa c8 fb a4 	sub	r8,sp,-1116
80005c74:	0e 9b       	mov	r11,r7
80005c76:	1a d8       	st.w	--sp,r8
80005c78:	fa c8 f9 30 	sub	r8,sp,-1744
80005c7c:	fa c9 ff a4 	sub	r9,sp,-92
80005c80:	40 8c       	lddsp	r12,sp[0x20]
80005c82:	fe b0 fa bb 	rcall	800051f8 <get_arg>
80005c86:	2f dd       	sub	sp,-12
80005c88:	78 1a       	ld.w	r10,r12[0x4]
80005c8a:	50 0a       	stdsp	sp[0x0],r10
80005c8c:	c6 68       	rjmp	80005d58 <_vfprintf_r+0x82c>
80005c8e:	2f f0       	sub	r0,-1
80005c90:	1c 39       	cp.w	r9,lr
80005c92:	c0 94       	brge	80005ca4 <_vfprintf_r+0x778>
80005c94:	fa c9 f9 34 	sub	r9,sp,-1740
80005c98:	f2 07 00 38 	add	r8,r9,r7<<0x3
80005c9c:	f0 fb fd 8c 	ld.w	r11,r8[-628]
80005ca0:	50 0b       	stdsp	sp[0x0],r11
80005ca2:	c3 a8       	rjmp	80005d16 <_vfprintf_r+0x7ea>
80005ca4:	41 4c       	lddsp	r12,sp[0x50]
80005ca6:	59 fe       	cp.w	lr,31
80005ca8:	e0 89 00 0e 	brgt	80005cc4 <_vfprintf_r+0x798>
80005cac:	78 1a       	ld.w	r10,r12[0x4]
80005cae:	f8 c8 ff f8 	sub	r8,r12,-8
80005cb2:	50 0a       	stdsp	sp[0x0],r10
80005cb4:	78 0c       	ld.w	r12,r12[0x0]
80005cb6:	fa c9 f9 34 	sub	r9,sp,-1740
80005cba:	51 48       	stdsp	sp[0x50],r8
80005cbc:	50 1c       	stdsp	sp[0x4],r12
80005cbe:	f2 0e 00 3a 	add	r10,r9,lr<<0x3
80005cc2:	c3 d8       	rjmp	80005d3c <_vfprintf_r+0x810>
80005cc4:	78 18       	ld.w	r8,r12[0x4]
80005cc6:	50 08       	stdsp	sp[0x0],r8
80005cc8:	c4 58       	rjmp	80005d52 <_vfprintf_r+0x826>
80005cca:	fa fe 06 c4 	ld.w	lr,sp[1732]
80005cce:	58 02       	cp.w	r2,0
80005cd0:	c1 90       	breq	80005d02 <_vfprintf_r+0x7d6>
80005cd2:	1c 37       	cp.w	r7,lr
80005cd4:	c1 a5       	brlt	80005d08 <_vfprintf_r+0x7dc>
80005cd6:	fa c8 f9 40 	sub	r8,sp,-1728
80005cda:	1a d8       	st.w	--sp,r8
80005cdc:	fa c8 fa a8 	sub	r8,sp,-1368
80005ce0:	1a d8       	st.w	--sp,r8
80005ce2:	fa c8 fb a4 	sub	r8,sp,-1116
80005ce6:	1a d8       	st.w	--sp,r8
80005ce8:	fa c9 ff a4 	sub	r9,sp,-92
80005cec:	fa c8 f9 30 	sub	r8,sp,-1744
80005cf0:	40 8c       	lddsp	r12,sp[0x20]
80005cf2:	06 9a       	mov	r10,r3
80005cf4:	0e 9b       	mov	r11,r7
80005cf6:	fe b0 fa 81 	rcall	800051f8 <get_arg>
80005cfa:	2f dd       	sub	sp,-12
80005cfc:	78 19       	ld.w	r9,r12[0x4]
80005cfe:	50 09       	stdsp	sp[0x0],r9
80005d00:	c2 c8       	rjmp	80005d58 <_vfprintf_r+0x82c>
80005d02:	2f f0       	sub	r0,-1
80005d04:	1c 39       	cp.w	r9,lr
80005d06:	c0 c4       	brge	80005d1e <_vfprintf_r+0x7f2>
80005d08:	fa cb f9 34 	sub	r11,sp,-1740
80005d0c:	f6 07 00 38 	add	r8,r11,r7<<0x3
80005d10:	f0 fa fd 8c 	ld.w	r10,r8[-628]
80005d14:	50 0a       	stdsp	sp[0x0],r10
80005d16:	f0 f8 fd 88 	ld.w	r8,r8[-632]
80005d1a:	50 18       	stdsp	sp[0x4],r8
80005d1c:	c2 08       	rjmp	80005d5c <_vfprintf_r+0x830>
80005d1e:	41 4c       	lddsp	r12,sp[0x50]
80005d20:	59 fe       	cp.w	lr,31
80005d22:	e0 89 00 16 	brgt	80005d4e <_vfprintf_r+0x822>
80005d26:	f8 c8 ff f8 	sub	r8,r12,-8
80005d2a:	78 19       	ld.w	r9,r12[0x4]
80005d2c:	51 48       	stdsp	sp[0x50],r8
80005d2e:	78 0c       	ld.w	r12,r12[0x0]
80005d30:	fa c8 f9 34 	sub	r8,sp,-1740
80005d34:	50 09       	stdsp	sp[0x0],r9
80005d36:	50 1c       	stdsp	sp[0x4],r12
80005d38:	f0 0e 00 3a 	add	r10,r8,lr<<0x3
80005d3c:	40 08       	lddsp	r8,sp[0x0]
80005d3e:	18 99       	mov	r9,r12
80005d40:	f4 e9 fd 88 	st.d	r10[-632],r8
80005d44:	fc c8 ff ff 	sub	r8,lr,-1
80005d48:	fb 48 06 c4 	st.w	sp[1732],r8
80005d4c:	c0 88       	rjmp	80005d5c <_vfprintf_r+0x830>
80005d4e:	78 1b       	ld.w	r11,r12[0x4]
80005d50:	50 0b       	stdsp	sp[0x0],r11
80005d52:	f8 c8 ff f8 	sub	r8,r12,-8
80005d56:	51 48       	stdsp	sp[0x50],r8
80005d58:	78 0c       	ld.w	r12,r12[0x0]
80005d5a:	50 1c       	stdsp	sp[0x4],r12
80005d5c:	40 19       	lddsp	r9,sp[0x4]
80005d5e:	40 08       	lddsp	r8,sp[0x0]
80005d60:	12 9b       	mov	r11,r9
80005d62:	10 9a       	mov	r10,r8
80005d64:	e0 a0 1b 82 	rcall	80009468 <__isinfd>
80005d68:	18 96       	mov	r6,r12
80005d6a:	c1 90       	breq	80005d9c <_vfprintf_r+0x870>
80005d6c:	30 08       	mov	r8,0
80005d6e:	30 09       	mov	r9,0
80005d70:	40 1b       	lddsp	r11,sp[0x4]
80005d72:	40 0a       	lddsp	r10,sp[0x0]
80005d74:	e0 a0 1f 17 	rcall	80009ba2 <__avr32_f64_cmp_lt>
80005d78:	c0 40       	breq	80005d80 <_vfprintf_r+0x854>
80005d7a:	32 d8       	mov	r8,45
80005d7c:	fb 68 06 cb 	st.b	sp[1739],r8
80005d80:	40 9a       	lddsp	r10,sp[0x24]
80005d82:	4b 69       	lddpc	r9,80005e58 <_vfprintf_r+0x92c>
80005d84:	a7 da       	cbr	r10,0x7
80005d86:	4b 68       	lddpc	r8,80005e5c <_vfprintf_r+0x930>
80005d88:	40 8b       	lddsp	r11,sp[0x20]
80005d8a:	50 9a       	stdsp	sp[0x24],r10
80005d8c:	e0 4b 00 48 	cp.w	r11,72
80005d90:	f0 03 17 50 	movlt	r3,r8
80005d94:	f2 03 17 40 	movge	r3,r9
80005d98:	30 02       	mov	r2,0
80005d9a:	c1 58       	rjmp	80005dc4 <_vfprintf_r+0x898>
80005d9c:	40 19       	lddsp	r9,sp[0x4]
80005d9e:	40 08       	lddsp	r8,sp[0x0]
80005da0:	12 9b       	mov	r11,r9
80005da2:	10 9a       	mov	r10,r8
80005da4:	e0 a0 1b 73 	rcall	8000948a <__isnand>
80005da8:	c1 10       	breq	80005dca <_vfprintf_r+0x89e>
80005daa:	40 9a       	lddsp	r10,sp[0x24]
80005dac:	4a d9       	lddpc	r9,80005e60 <_vfprintf_r+0x934>
80005dae:	a7 da       	cbr	r10,0x7
80005db0:	4a d8       	lddpc	r8,80005e64 <_vfprintf_r+0x938>
80005db2:	40 8b       	lddsp	r11,sp[0x20]
80005db4:	50 9a       	stdsp	sp[0x24],r10
80005db6:	0c 92       	mov	r2,r6
80005db8:	e0 4b 00 48 	cp.w	r11,72
80005dbc:	f0 03 17 50 	movlt	r3,r8
80005dc0:	f2 03 17 40 	movge	r3,r9
80005dc4:	30 37       	mov	r7,3
80005dc6:	e0 8f 06 61 	bral	80006a88 <_vfprintf_r+0x155c>
80005dca:	40 ca       	lddsp	r10,sp[0x30]
80005dcc:	5b fa       	cp.w	r10,-1
80005dce:	c0 31       	brne	80005dd4 <_vfprintf_r+0x8a8>
80005dd0:	30 69       	mov	r9,6
80005dd2:	c1 28       	rjmp	80005df6 <_vfprintf_r+0x8ca>
80005dd4:	40 88       	lddsp	r8,sp[0x20]
80005dd6:	40 8b       	lddsp	r11,sp[0x20]
80005dd8:	e0 48 00 67 	cp.w	r8,103
80005ddc:	5f 08       	sreq	r8
80005dde:	e0 4b 00 47 	cp.w	r11,71
80005de2:	5f 09       	sreq	r9
80005de4:	30 0a       	mov	r10,0
80005de6:	12 48       	or	r8,r9
80005de8:	f4 08 18 00 	cp.b	r8,r10
80005dec:	c0 60       	breq	80005df8 <_vfprintf_r+0x8cc>
80005dee:	40 c9       	lddsp	r9,sp[0x30]
80005df0:	58 09       	cp.w	r9,0
80005df2:	f9 b9 00 01 	moveq	r9,1
80005df6:	50 c9       	stdsp	sp[0x30],r9
80005df8:	40 9b       	lddsp	r11,sp[0x24]
80005dfa:	a9 ab       	sbr	r11,0x8
80005dfc:	50 9b       	stdsp	sp[0x24],r11
80005dfe:	40 19       	lddsp	r9,sp[0x4]
80005e00:	58 09       	cp.w	r9,0
80005e02:	c0 85       	brlt	80005e12 <_vfprintf_r+0x8e6>
80005e04:	40 1a       	lddsp	r10,sp[0x4]
80005e06:	40 09       	lddsp	r9,sp[0x0]
80005e08:	30 08       	mov	r8,0
80005e0a:	50 3a       	stdsp	sp[0xc],r10
80005e0c:	50 29       	stdsp	sp[0x8],r9
80005e0e:	50 e8       	stdsp	sp[0x38],r8
80005e10:	c0 98       	rjmp	80005e22 <_vfprintf_r+0x8f6>
80005e12:	40 1b       	lddsp	r11,sp[0x4]
80005e14:	40 0a       	lddsp	r10,sp[0x0]
80005e16:	ee 1b 80 00 	eorh	r11,0x8000
80005e1a:	32 d9       	mov	r9,45
80005e1c:	50 3b       	stdsp	sp[0xc],r11
80005e1e:	50 2a       	stdsp	sp[0x8],r10
80005e20:	50 e9       	stdsp	sp[0x38],r9
80005e22:	40 88       	lddsp	r8,sp[0x20]
80005e24:	e0 48 00 66 	cp.w	r8,102
80005e28:	5f 09       	sreq	r9
80005e2a:	e0 48 00 46 	cp.w	r8,70
80005e2e:	5f 08       	sreq	r8
80005e30:	f3 e8 10 07 	or	r7,r9,r8
80005e34:	c0 40       	breq	80005e3c <_vfprintf_r+0x910>
80005e36:	40 c2       	lddsp	r2,sp[0x30]
80005e38:	30 39       	mov	r9,3
80005e3a:	c1 b8       	rjmp	80005e70 <_vfprintf_r+0x944>
80005e3c:	40 8b       	lddsp	r11,sp[0x20]
80005e3e:	e0 4b 00 65 	cp.w	r11,101
80005e42:	5f 08       	sreq	r8
80005e44:	e0 4b 00 45 	cp.w	r11,69
80005e48:	5f 09       	sreq	r9
80005e4a:	12 48       	or	r8,r9
80005e4c:	ee 08 18 00 	cp.b	r8,r7
80005e50:	c0 c1       	brne	80005e68 <_vfprintf_r+0x93c>
80005e52:	40 c2       	lddsp	r2,sp[0x30]
80005e54:	c0 d8       	rjmp	80005e6e <_vfprintf_r+0x942>
80005e56:	d7 03       	nop
80005e58:	80 00       	ld.sh	r0,r0[0x0]
80005e5a:	a8 84       	st.b	r4[0x0],r4
80005e5c:	80 00       	ld.sh	r0,r0[0x0]
80005e5e:	a8 88       	st.b	r4[0x0],r8
80005e60:	80 00       	ld.sh	r0,r0[0x0]
80005e62:	a8 8c       	st.b	r4[0x0],r12
80005e64:	80 00       	ld.sh	r0,r0[0x0]
80005e66:	a8 90       	st.b	r4[0x1],r0
80005e68:	40 ca       	lddsp	r10,sp[0x30]
80005e6a:	f4 c2 ff ff 	sub	r2,r10,-1
80005e6e:	30 29       	mov	r9,2
80005e70:	fa c8 f9 4c 	sub	r8,sp,-1716
80005e74:	1a d8       	st.w	--sp,r8
80005e76:	fa c8 f9 44 	sub	r8,sp,-1724
80005e7a:	1a d8       	st.w	--sp,r8
80005e7c:	fa c8 f9 3c 	sub	r8,sp,-1732
80005e80:	1a d8       	st.w	--sp,r8
80005e82:	04 98       	mov	r8,r2
80005e84:	40 6b       	lddsp	r11,sp[0x18]
80005e86:	40 8c       	lddsp	r12,sp[0x20]
80005e88:	40 5a       	lddsp	r10,sp[0x14]
80005e8a:	e0 a0 0c 6b 	rcall	80007760 <_dtoa_r>
80005e8e:	30 0b       	mov	r11,0
80005e90:	2f dd       	sub	sp,-12
80005e92:	18 93       	mov	r3,r12
80005e94:	40 89       	lddsp	r9,sp[0x20]
80005e96:	e0 49 00 67 	cp.w	r9,103
80005e9a:	5f 18       	srne	r8
80005e9c:	e0 49 00 47 	cp.w	r9,71
80005ea0:	5f 19       	srne	r9
80005ea2:	12 68       	and	r8,r9
80005ea4:	f6 08 18 00 	cp.b	r8,r11
80005ea8:	c0 51       	brne	80005eb2 <_vfprintf_r+0x986>
80005eaa:	40 9a       	lddsp	r10,sp[0x24]
80005eac:	ed ba 00 00 	bld	r10,0x0
80005eb0:	c2 c1       	brne	80005f08 <_vfprintf_r+0x9dc>
80005eb2:	e6 02 00 06 	add	r6,r3,r2
80005eb6:	58 07       	cp.w	r7,0
80005eb8:	c1 30       	breq	80005ede <_vfprintf_r+0x9b2>
80005eba:	07 89       	ld.ub	r9,r3[0x0]
80005ebc:	33 08       	mov	r8,48
80005ebe:	f0 09 18 00 	cp.b	r9,r8
80005ec2:	c0 b1       	brne	80005ed8 <_vfprintf_r+0x9ac>
80005ec4:	30 08       	mov	r8,0
80005ec6:	30 09       	mov	r9,0
80005ec8:	40 3b       	lddsp	r11,sp[0xc]
80005eca:	40 2a       	lddsp	r10,sp[0x8]
80005ecc:	e0 a0 1e 1d 	rcall	80009b06 <__avr32_f64_cmp_eq>
80005ed0:	fb b2 00 01 	rsubeq	r2,1
80005ed4:	fb f2 0b af 	st.weq	sp[0x6bc],r2
80005ed8:	fa f8 06 bc 	ld.w	r8,sp[1724]
80005edc:	10 06       	add	r6,r8
80005ede:	40 39       	lddsp	r9,sp[0xc]
80005ee0:	40 28       	lddsp	r8,sp[0x8]
80005ee2:	12 9b       	mov	r11,r9
80005ee4:	10 9a       	mov	r10,r8
80005ee6:	30 09       	mov	r9,0
80005ee8:	30 08       	mov	r8,0
80005eea:	e0 a0 1e 0e 	rcall	80009b06 <__avr32_f64_cmp_eq>
80005eee:	c0 80       	breq	80005efe <_vfprintf_r+0x9d2>
80005ef0:	fb 46 06 b4 	st.w	sp[1716],r6
80005ef4:	c0 58       	rjmp	80005efe <_vfprintf_r+0x9d2>
80005ef6:	10 c9       	st.b	r8++,r9
80005ef8:	fb 48 06 b4 	st.w	sp[1716],r8
80005efc:	c0 28       	rjmp	80005f00 <_vfprintf_r+0x9d4>
80005efe:	33 09       	mov	r9,48
80005f00:	fa f8 06 b4 	ld.w	r8,sp[1716]
80005f04:	0c 38       	cp.w	r8,r6
80005f06:	cf 83       	brcs	80005ef6 <_vfprintf_r+0x9ca>
80005f08:	40 89       	lddsp	r9,sp[0x20]
80005f0a:	e0 49 00 67 	cp.w	r9,103
80005f0e:	5f 08       	sreq	r8
80005f10:	e0 49 00 47 	cp.w	r9,71
80005f14:	5f 09       	sreq	r9
80005f16:	12 48       	or	r8,r9
80005f18:	fa f9 06 b4 	ld.w	r9,sp[1716]
80005f1c:	06 19       	sub	r9,r3
80005f1e:	51 09       	stdsp	sp[0x40],r9
80005f20:	30 0b       	mov	r11,0
80005f22:	f6 08 18 00 	cp.b	r8,r11
80005f26:	c0 d0       	breq	80005f40 <_vfprintf_r+0xa14>
80005f28:	fa f8 06 bc 	ld.w	r8,sp[1724]
80005f2c:	5b d8       	cp.w	r8,-3
80005f2e:	c0 55       	brlt	80005f38 <_vfprintf_r+0xa0c>
80005f30:	40 ca       	lddsp	r10,sp[0x30]
80005f32:	14 38       	cp.w	r8,r10
80005f34:	e0 8a 00 72 	brle	80006018 <_vfprintf_r+0xaec>
80005f38:	40 89       	lddsp	r9,sp[0x20]
80005f3a:	20 29       	sub	r9,2
80005f3c:	50 89       	stdsp	sp[0x20],r9
80005f3e:	c0 68       	rjmp	80005f4a <_vfprintf_r+0xa1e>
80005f40:	40 88       	lddsp	r8,sp[0x20]
80005f42:	e0 48 00 65 	cp.w	r8,101
80005f46:	e0 89 00 45 	brgt	80005fd0 <_vfprintf_r+0xaa4>
80005f4a:	fa f8 06 bc 	ld.w	r8,sp[1724]
80005f4e:	40 8b       	lddsp	r11,sp[0x20]
80005f50:	f0 c9 00 01 	sub	r9,r8,1
80005f54:	fb 6b 06 ac 	st.b	sp[1708],r11
80005f58:	fb 49 06 bc 	st.w	sp[1724],r9
80005f5c:	c0 47       	brpl	80005f64 <_vfprintf_r+0xa38>
80005f5e:	5c 39       	neg	r9
80005f60:	32 d8       	mov	r8,45
80005f62:	c0 28       	rjmp	80005f66 <_vfprintf_r+0xa3a>
80005f64:	32 b8       	mov	r8,43
80005f66:	fb 68 06 ad 	st.b	sp[1709],r8
80005f6a:	58 99       	cp.w	r9,9
80005f6c:	e0 8a 00 1a 	brle	80005fa0 <_vfprintf_r+0xa74>
80005f70:	fa ce f9 55 	sub	lr,sp,-1707
80005f74:	30 ac       	mov	r12,10
80005f76:	1c 9b       	mov	r11,lr
80005f78:	f2 0c 0c 08 	divs	r8,r9,r12
80005f7c:	f2 ca ff d0 	sub	r10,r9,-48
80005f80:	16 fa       	st.b	--r11,r10
80005f82:	10 99       	mov	r9,r8
80005f84:	58 98       	cp.w	r8,9
80005f86:	fe 99 ff f9 	brgt	80005f78 <_vfprintf_r+0xa4c>
80005f8a:	16 9a       	mov	r10,r11
80005f8c:	2d 08       	sub	r8,-48
80005f8e:	fa c9 f9 52 	sub	r9,sp,-1710
80005f92:	14 f8       	st.b	--r10,r8
80005f94:	c0 38       	rjmp	80005f9a <_vfprintf_r+0xa6e>
80005f96:	15 38       	ld.ub	r8,r10++
80005f98:	12 c8       	st.b	r9++,r8
80005f9a:	1c 3a       	cp.w	r10,lr
80005f9c:	cf d3       	brcs	80005f96 <_vfprintf_r+0xa6a>
80005f9e:	c0 a8       	rjmp	80005fb2 <_vfprintf_r+0xa86>
80005fa0:	f2 c8 ff d0 	sub	r8,r9,-48
80005fa4:	fa c9 f9 50 	sub	r9,sp,-1712
80005fa8:	fb 68 06 af 	st.b	sp[1711],r8
80005fac:	33 08       	mov	r8,48
80005fae:	fb 68 06 ae 	st.b	sp[1710],r8
80005fb2:	fa c8 f9 54 	sub	r8,sp,-1708
80005fb6:	f2 08 01 08 	sub	r8,r9,r8
80005fba:	50 f8       	stdsp	sp[0x3c],r8
80005fbc:	41 0a       	lddsp	r10,sp[0x40]
80005fbe:	f0 0a 00 07 	add	r7,r8,r10
80005fc2:	58 1a       	cp.w	r10,1
80005fc4:	e0 89 00 36 	brgt	80006030 <_vfprintf_r+0xb04>
80005fc8:	40 99       	lddsp	r9,sp[0x24]
80005fca:	f1 d9 c0 01 	bfextu	r8,r9,0x0,0x1
80005fce:	c2 f8       	rjmp	8000602c <_vfprintf_r+0xb00>
80005fd0:	40 88       	lddsp	r8,sp[0x20]
80005fd2:	e0 48 00 66 	cp.w	r8,102
80005fd6:	c2 31       	brne	8000601c <_vfprintf_r+0xaf0>
80005fd8:	fa f7 06 bc 	ld.w	r7,sp[1724]
80005fdc:	58 07       	cp.w	r7,0
80005fde:	e0 8a 00 11 	brle	80006000 <_vfprintf_r+0xad4>
80005fe2:	40 cb       	lddsp	r11,sp[0x30]
80005fe4:	58 0b       	cp.w	r11,0
80005fe6:	c0 51       	brne	80005ff0 <_vfprintf_r+0xac4>
80005fe8:	40 9a       	lddsp	r10,sp[0x24]
80005fea:	ed ba 00 00 	bld	r10,0x0
80005fee:	c2 b1       	brne	80006044 <_vfprintf_r+0xb18>
80005ff0:	ee c8 ff ff 	sub	r8,r7,-1
80005ff4:	40 c9       	lddsp	r9,sp[0x30]
80005ff6:	f0 09 00 07 	add	r7,r8,r9
80005ffa:	36 68       	mov	r8,102
80005ffc:	50 88       	stdsp	sp[0x20],r8
80005ffe:	c2 38       	rjmp	80006044 <_vfprintf_r+0xb18>
80006000:	40 cb       	lddsp	r11,sp[0x30]
80006002:	58 0b       	cp.w	r11,0
80006004:	c0 71       	brne	80006012 <_vfprintf_r+0xae6>
80006006:	40 9a       	lddsp	r10,sp[0x24]
80006008:	ed ba 00 00 	bld	r10,0x0
8000600c:	c0 30       	breq	80006012 <_vfprintf_r+0xae6>
8000600e:	30 17       	mov	r7,1
80006010:	c1 a8       	rjmp	80006044 <_vfprintf_r+0xb18>
80006012:	40 c7       	lddsp	r7,sp[0x30]
80006014:	2f e7       	sub	r7,-2
80006016:	c1 78       	rjmp	80006044 <_vfprintf_r+0xb18>
80006018:	36 79       	mov	r9,103
8000601a:	50 89       	stdsp	sp[0x20],r9
8000601c:	fa f7 06 bc 	ld.w	r7,sp[1724]
80006020:	41 08       	lddsp	r8,sp[0x40]
80006022:	10 37       	cp.w	r7,r8
80006024:	c0 85       	brlt	80006034 <_vfprintf_r+0xb08>
80006026:	40 9b       	lddsp	r11,sp[0x24]
80006028:	f1 db c0 01 	bfextu	r8,r11,0x0,0x1
8000602c:	58 08       	cp.w	r8,0
8000602e:	c0 b0       	breq	80006044 <_vfprintf_r+0xb18>
80006030:	2f f7       	sub	r7,-1
80006032:	c0 98       	rjmp	80006044 <_vfprintf_r+0xb18>
80006034:	ee 08 11 02 	rsub	r8,r7,2
80006038:	41 0a       	lddsp	r10,sp[0x40]
8000603a:	58 07       	cp.w	r7,0
8000603c:	f9 b8 09 01 	movgt	r8,1
80006040:	f0 0a 00 07 	add	r7,r8,r10
80006044:	40 e9       	lddsp	r9,sp[0x38]
80006046:	58 09       	cp.w	r9,0
80006048:	e0 80 05 1f 	breq	80006a86 <_vfprintf_r+0x155a>
8000604c:	32 d8       	mov	r8,45
8000604e:	fb 68 06 cb 	st.b	sp[1739],r8
80006052:	e0 8f 05 1a 	bral	80006a86 <_vfprintf_r+0x155a>
80006056:	00 99       	mov	r9,r0
80006058:	40 98       	lddsp	r8,sp[0x24]
8000605a:	ed b8 00 05 	bld	r8,0x5
8000605e:	c4 61       	brne	800060ea <_vfprintf_r+0xbbe>
80006060:	fa fe 06 c4 	ld.w	lr,sp[1732]
80006064:	58 02       	cp.w	r2,0
80006066:	c1 d0       	breq	800060a0 <_vfprintf_r+0xb74>
80006068:	1c 37       	cp.w	r7,lr
8000606a:	c0 64       	brge	80006076 <_vfprintf_r+0xb4a>
8000606c:	fa cb f9 34 	sub	r11,sp,-1740
80006070:	f6 07 00 38 	add	r8,r11,r7<<0x3
80006074:	c1 d8       	rjmp	800060ae <_vfprintf_r+0xb82>
80006076:	fa c8 f9 40 	sub	r8,sp,-1728
8000607a:	1a d8       	st.w	--sp,r8
8000607c:	fa c8 fa a8 	sub	r8,sp,-1368
80006080:	0e 9b       	mov	r11,r7
80006082:	1a d8       	st.w	--sp,r8
80006084:	fa c8 fb a4 	sub	r8,sp,-1116
80006088:	06 9a       	mov	r10,r3
8000608a:	1a d8       	st.w	--sp,r8
8000608c:	fa c8 f9 30 	sub	r8,sp,-1744
80006090:	fa c9 ff a4 	sub	r9,sp,-92
80006094:	40 8c       	lddsp	r12,sp[0x20]
80006096:	fe b0 f8 b1 	rcall	800051f8 <get_arg>
8000609a:	2f dd       	sub	sp,-12
8000609c:	78 0b       	ld.w	r11,r12[0x0]
8000609e:	c2 28       	rjmp	800060e2 <_vfprintf_r+0xbb6>
800060a0:	2f f0       	sub	r0,-1
800060a2:	1c 39       	cp.w	r9,lr
800060a4:	c0 84       	brge	800060b4 <_vfprintf_r+0xb88>
800060a6:	fa ca f9 34 	sub	r10,sp,-1740
800060aa:	f4 07 00 38 	add	r8,r10,r7<<0x3
800060ae:	f0 fb fd 88 	ld.w	r11,r8[-632]
800060b2:	c1 88       	rjmp	800060e2 <_vfprintf_r+0xbb6>
800060b4:	41 4c       	lddsp	r12,sp[0x50]
800060b6:	59 fe       	cp.w	lr,31
800060b8:	e0 89 00 11 	brgt	800060da <_vfprintf_r+0xbae>
800060bc:	f8 c8 ff fc 	sub	r8,r12,-4
800060c0:	51 48       	stdsp	sp[0x50],r8
800060c2:	78 0b       	ld.w	r11,r12[0x0]
800060c4:	fa c9 f9 34 	sub	r9,sp,-1740
800060c8:	f2 0e 00 38 	add	r8,r9,lr<<0x3
800060cc:	f1 4b fd 88 	st.w	r8[-632],r11
800060d0:	fc c8 ff ff 	sub	r8,lr,-1
800060d4:	fb 48 06 c4 	st.w	sp[1732],r8
800060d8:	c0 58       	rjmp	800060e2 <_vfprintf_r+0xbb6>
800060da:	f8 c8 ff fc 	sub	r8,r12,-4
800060de:	78 0b       	ld.w	r11,r12[0x0]
800060e0:	51 48       	stdsp	sp[0x50],r8
800060e2:	40 a8       	lddsp	r8,sp[0x28]
800060e4:	97 18       	st.w	r11[0x4],r8
800060e6:	bf 58       	asr	r8,0x1f
800060e8:	c9 08       	rjmp	80006208 <_vfprintf_r+0xcdc>
800060ea:	40 98       	lddsp	r8,sp[0x24]
800060ec:	ed b8 00 04 	bld	r8,0x4
800060f0:	c4 a0       	breq	80006184 <_vfprintf_r+0xc58>
800060f2:	40 9b       	lddsp	r11,sp[0x24]
800060f4:	ed bb 00 06 	bld	r11,0x6
800060f8:	c4 61       	brne	80006184 <_vfprintf_r+0xc58>
800060fa:	fa fe 06 c4 	ld.w	lr,sp[1732]
800060fe:	58 02       	cp.w	r2,0
80006100:	c1 d0       	breq	8000613a <_vfprintf_r+0xc0e>
80006102:	1c 37       	cp.w	r7,lr
80006104:	c0 64       	brge	80006110 <_vfprintf_r+0xbe4>
80006106:	fa ca f9 34 	sub	r10,sp,-1740
8000610a:	f4 07 00 38 	add	r8,r10,r7<<0x3
8000610e:	c1 d8       	rjmp	80006148 <_vfprintf_r+0xc1c>
80006110:	fa c8 f9 40 	sub	r8,sp,-1728
80006114:	1a d8       	st.w	--sp,r8
80006116:	fa c8 fa a8 	sub	r8,sp,-1368
8000611a:	0e 9b       	mov	r11,r7
8000611c:	1a d8       	st.w	--sp,r8
8000611e:	fa c8 fb a4 	sub	r8,sp,-1116
80006122:	06 9a       	mov	r10,r3
80006124:	1a d8       	st.w	--sp,r8
80006126:	fa c8 f9 30 	sub	r8,sp,-1744
8000612a:	fa c9 ff a4 	sub	r9,sp,-92
8000612e:	40 8c       	lddsp	r12,sp[0x20]
80006130:	fe b0 f8 64 	rcall	800051f8 <get_arg>
80006134:	2f dd       	sub	sp,-12
80006136:	78 0b       	ld.w	r11,r12[0x0]
80006138:	c2 28       	rjmp	8000617c <_vfprintf_r+0xc50>
8000613a:	2f f0       	sub	r0,-1
8000613c:	1c 39       	cp.w	r9,lr
8000613e:	c0 84       	brge	8000614e <_vfprintf_r+0xc22>
80006140:	fa c9 f9 34 	sub	r9,sp,-1740
80006144:	f2 07 00 38 	add	r8,r9,r7<<0x3
80006148:	f0 fb fd 88 	ld.w	r11,r8[-632]
8000614c:	c1 88       	rjmp	8000617c <_vfprintf_r+0xc50>
8000614e:	41 4c       	lddsp	r12,sp[0x50]
80006150:	59 fe       	cp.w	lr,31
80006152:	e0 89 00 11 	brgt	80006174 <_vfprintf_r+0xc48>
80006156:	f8 c8 ff fc 	sub	r8,r12,-4
8000615a:	51 48       	stdsp	sp[0x50],r8
8000615c:	78 0b       	ld.w	r11,r12[0x0]
8000615e:	fa ca f9 34 	sub	r10,sp,-1740
80006162:	f4 0e 00 38 	add	r8,r10,lr<<0x3
80006166:	f1 4b fd 88 	st.w	r8[-632],r11
8000616a:	fc c8 ff ff 	sub	r8,lr,-1
8000616e:	fb 48 06 c4 	st.w	sp[1732],r8
80006172:	c0 58       	rjmp	8000617c <_vfprintf_r+0xc50>
80006174:	f8 c8 ff fc 	sub	r8,r12,-4
80006178:	78 0b       	ld.w	r11,r12[0x0]
8000617a:	51 48       	stdsp	sp[0x50],r8
8000617c:	40 a9       	lddsp	r9,sp[0x28]
8000617e:	b6 09       	st.h	r11[0x0],r9
80006180:	fe 9f fa 6e 	bral	8000565c <_vfprintf_r+0x130>
80006184:	fa fe 06 c4 	ld.w	lr,sp[1732]
80006188:	58 02       	cp.w	r2,0
8000618a:	c1 d0       	breq	800061c4 <_vfprintf_r+0xc98>
8000618c:	1c 37       	cp.w	r7,lr
8000618e:	c0 64       	brge	8000619a <_vfprintf_r+0xc6e>
80006190:	fa cb f9 34 	sub	r11,sp,-1740
80006194:	f6 07 00 38 	add	r8,r11,r7<<0x3
80006198:	c1 d8       	rjmp	800061d2 <_vfprintf_r+0xca6>
8000619a:	fa c8 f9 40 	sub	r8,sp,-1728
8000619e:	1a d8       	st.w	--sp,r8
800061a0:	fa c8 fa a8 	sub	r8,sp,-1368
800061a4:	0e 9b       	mov	r11,r7
800061a6:	1a d8       	st.w	--sp,r8
800061a8:	fa c8 fb a4 	sub	r8,sp,-1116
800061ac:	06 9a       	mov	r10,r3
800061ae:	1a d8       	st.w	--sp,r8
800061b0:	fa c8 f9 30 	sub	r8,sp,-1744
800061b4:	fa c9 ff a4 	sub	r9,sp,-92
800061b8:	40 8c       	lddsp	r12,sp[0x20]
800061ba:	fe b0 f8 1f 	rcall	800051f8 <get_arg>
800061be:	2f dd       	sub	sp,-12
800061c0:	78 0b       	ld.w	r11,r12[0x0]
800061c2:	c2 28       	rjmp	80006206 <_vfprintf_r+0xcda>
800061c4:	2f f0       	sub	r0,-1
800061c6:	1c 39       	cp.w	r9,lr
800061c8:	c0 84       	brge	800061d8 <_vfprintf_r+0xcac>
800061ca:	fa ca f9 34 	sub	r10,sp,-1740
800061ce:	f4 07 00 38 	add	r8,r10,r7<<0x3
800061d2:	f0 fb fd 88 	ld.w	r11,r8[-632]
800061d6:	c1 88       	rjmp	80006206 <_vfprintf_r+0xcda>
800061d8:	41 4c       	lddsp	r12,sp[0x50]
800061da:	59 fe       	cp.w	lr,31
800061dc:	e0 89 00 11 	brgt	800061fe <_vfprintf_r+0xcd2>
800061e0:	f8 c8 ff fc 	sub	r8,r12,-4
800061e4:	51 48       	stdsp	sp[0x50],r8
800061e6:	fa c9 f9 34 	sub	r9,sp,-1740
800061ea:	78 0b       	ld.w	r11,r12[0x0]
800061ec:	f2 0e 00 38 	add	r8,r9,lr<<0x3
800061f0:	f1 4b fd 88 	st.w	r8[-632],r11
800061f4:	fc c8 ff ff 	sub	r8,lr,-1
800061f8:	fb 48 06 c4 	st.w	sp[1732],r8
800061fc:	c0 58       	rjmp	80006206 <_vfprintf_r+0xcda>
800061fe:	78 0b       	ld.w	r11,r12[0x0]
80006200:	f8 c8 ff fc 	sub	r8,r12,-4
80006204:	51 48       	stdsp	sp[0x50],r8
80006206:	40 a8       	lddsp	r8,sp[0x28]
80006208:	97 08       	st.w	r11[0x0],r8
8000620a:	fe 9f fa 29 	bral	8000565c <_vfprintf_r+0x130>
8000620e:	40 9b       	lddsp	r11,sp[0x24]
80006210:	a5 ab       	sbr	r11,0x4
80006212:	50 9b       	stdsp	sp[0x24],r11
80006214:	00 99       	mov	r9,r0
80006216:	40 98       	lddsp	r8,sp[0x24]
80006218:	ed b8 00 05 	bld	r8,0x5
8000621c:	c5 01       	brne	800062bc <_vfprintf_r+0xd90>
8000621e:	fa fe 06 c4 	ld.w	lr,sp[1732]
80006222:	58 02       	cp.w	r2,0
80006224:	c2 20       	breq	80006268 <_vfprintf_r+0xd3c>
80006226:	1c 37       	cp.w	r7,lr
80006228:	c0 84       	brge	80006238 <_vfprintf_r+0xd0c>
8000622a:	fa ca f9 34 	sub	r10,sp,-1740
8000622e:	f4 07 00 38 	add	r8,r10,r7<<0x3
80006232:	f0 e4 fd 88 	ld.d	r4,r8[-632]
80006236:	c1 68       	rjmp	80006262 <_vfprintf_r+0xd36>
80006238:	fa c8 f9 40 	sub	r8,sp,-1728
8000623c:	1a d8       	st.w	--sp,r8
8000623e:	fa c8 fa a8 	sub	r8,sp,-1368
80006242:	1a d8       	st.w	--sp,r8
80006244:	fa c8 fb a4 	sub	r8,sp,-1116
80006248:	06 9a       	mov	r10,r3
8000624a:	1a d8       	st.w	--sp,r8
8000624c:	0e 9b       	mov	r11,r7
8000624e:	fa c8 f9 30 	sub	r8,sp,-1744
80006252:	fa c9 ff a4 	sub	r9,sp,-92
80006256:	40 8c       	lddsp	r12,sp[0x20]
80006258:	fe b0 f7 d0 	rcall	800051f8 <get_arg>
8000625c:	2f dd       	sub	sp,-12
8000625e:	f8 e4 00 00 	ld.d	r4,r12[0]
80006262:	30 0e       	mov	lr,0
80006264:	e0 8f 03 7f 	bral	80006962 <_vfprintf_r+0x1436>
80006268:	2f f0       	sub	r0,-1
8000626a:	1c 39       	cp.w	r9,lr
8000626c:	c0 a4       	brge	80006280 <_vfprintf_r+0xd54>
8000626e:	fa c9 f9 34 	sub	r9,sp,-1740
80006272:	04 9e       	mov	lr,r2
80006274:	f2 07 00 38 	add	r8,r9,r7<<0x3
80006278:	f0 e4 fd 88 	ld.d	r4,r8[-632]
8000627c:	e0 8f 03 73 	bral	80006962 <_vfprintf_r+0x1436>
80006280:	41 4c       	lddsp	r12,sp[0x50]
80006282:	59 fe       	cp.w	lr,31
80006284:	e0 89 00 14 	brgt	800062ac <_vfprintf_r+0xd80>
80006288:	f8 c8 ff f8 	sub	r8,r12,-8
8000628c:	51 48       	stdsp	sp[0x50],r8
8000628e:	f8 e4 00 00 	ld.d	r4,r12[0]
80006292:	fa cb f9 34 	sub	r11,sp,-1740
80006296:	f6 0e 00 38 	add	r8,r11,lr<<0x3
8000629a:	f0 e5 fd 88 	st.d	r8[-632],r4
8000629e:	fc c8 ff ff 	sub	r8,lr,-1
800062a2:	04 9e       	mov	lr,r2
800062a4:	fb 48 06 c4 	st.w	sp[1732],r8
800062a8:	e0 8f 03 5d 	bral	80006962 <_vfprintf_r+0x1436>
800062ac:	f8 c8 ff f8 	sub	r8,r12,-8
800062b0:	f8 e4 00 00 	ld.d	r4,r12[0]
800062b4:	04 9e       	mov	lr,r2
800062b6:	51 48       	stdsp	sp[0x50],r8
800062b8:	e0 8f 03 55 	bral	80006962 <_vfprintf_r+0x1436>
800062bc:	40 98       	lddsp	r8,sp[0x24]
800062be:	ed b8 00 04 	bld	r8,0x4
800062c2:	c1 01       	brne	800062e2 <_vfprintf_r+0xdb6>
800062c4:	fa fe 06 c4 	ld.w	lr,sp[1732]
800062c8:	58 02       	cp.w	r2,0
800062ca:	c0 80       	breq	800062da <_vfprintf_r+0xdae>
800062cc:	1c 37       	cp.w	r7,lr
800062ce:	c5 f4       	brge	8000638c <_vfprintf_r+0xe60>
800062d0:	fa ca f9 34 	sub	r10,sp,-1740
800062d4:	f4 07 00 38 	add	r8,r10,r7<<0x3
800062d8:	c7 68       	rjmp	800063c4 <_vfprintf_r+0xe98>
800062da:	2f f0       	sub	r0,-1
800062dc:	1c 39       	cp.w	r9,lr
800062de:	c7 64       	brge	800063ca <_vfprintf_r+0xe9e>
800062e0:	c5 18       	rjmp	80006382 <_vfprintf_r+0xe56>
800062e2:	40 98       	lddsp	r8,sp[0x24]
800062e4:	ed b8 00 06 	bld	r8,0x6
800062e8:	c4 71       	brne	80006376 <_vfprintf_r+0xe4a>
800062ea:	fa fe 06 c4 	ld.w	lr,sp[1732]
800062ee:	58 02       	cp.w	r2,0
800062f0:	c1 d0       	breq	8000632a <_vfprintf_r+0xdfe>
800062f2:	1c 37       	cp.w	r7,lr
800062f4:	c0 64       	brge	80006300 <_vfprintf_r+0xdd4>
800062f6:	fa c9 f9 34 	sub	r9,sp,-1740
800062fa:	f2 07 00 38 	add	r8,r9,r7<<0x3
800062fe:	c1 d8       	rjmp	80006338 <_vfprintf_r+0xe0c>
80006300:	fa c8 f9 40 	sub	r8,sp,-1728
80006304:	1a d8       	st.w	--sp,r8
80006306:	fa c8 fa a8 	sub	r8,sp,-1368
8000630a:	0e 9b       	mov	r11,r7
8000630c:	1a d8       	st.w	--sp,r8
8000630e:	fa c8 fb a4 	sub	r8,sp,-1116
80006312:	06 9a       	mov	r10,r3
80006314:	1a d8       	st.w	--sp,r8
80006316:	fa c8 f9 30 	sub	r8,sp,-1744
8000631a:	fa c9 ff a4 	sub	r9,sp,-92
8000631e:	40 8c       	lddsp	r12,sp[0x20]
80006320:	fe b0 f7 6c 	rcall	800051f8 <get_arg>
80006324:	2f dd       	sub	sp,-12
80006326:	98 1b       	ld.sh	r11,r12[0x2]
80006328:	c2 48       	rjmp	80006370 <_vfprintf_r+0xe44>
8000632a:	2f f0       	sub	r0,-1
8000632c:	1c 39       	cp.w	r9,lr
8000632e:	c0 84       	brge	8000633e <_vfprintf_r+0xe12>
80006330:	fa cb f9 34 	sub	r11,sp,-1740
80006334:	f6 07 00 38 	add	r8,r11,r7<<0x3
80006338:	f1 0b fd 8a 	ld.sh	r11,r8[-630]
8000633c:	c1 a8       	rjmp	80006370 <_vfprintf_r+0xe44>
8000633e:	41 4c       	lddsp	r12,sp[0x50]
80006340:	59 fe       	cp.w	lr,31
80006342:	e0 89 00 13 	brgt	80006368 <_vfprintf_r+0xe3c>
80006346:	f8 c8 ff fc 	sub	r8,r12,-4
8000634a:	51 48       	stdsp	sp[0x50],r8
8000634c:	78 09       	ld.w	r9,r12[0x0]
8000634e:	fa ca f9 34 	sub	r10,sp,-1740
80006352:	f4 0e 00 38 	add	r8,r10,lr<<0x3
80006356:	f1 49 fd 88 	st.w	r8[-632],r9
8000635a:	f7 d9 b0 10 	bfexts	r11,r9,0x0,0x10
8000635e:	fc c8 ff ff 	sub	r8,lr,-1
80006362:	fb 48 06 c4 	st.w	sp[1732],r8
80006366:	c0 58       	rjmp	80006370 <_vfprintf_r+0xe44>
80006368:	f8 c8 ff fc 	sub	r8,r12,-4
8000636c:	98 1b       	ld.sh	r11,r12[0x2]
8000636e:	51 48       	stdsp	sp[0x50],r8
80006370:	e9 db c0 10 	bfextu	r4,r11,0x0,0x10
80006374:	c4 38       	rjmp	800063fa <_vfprintf_r+0xece>
80006376:	fa fe 06 c4 	ld.w	lr,sp[1732]
8000637a:	58 02       	cp.w	r2,0
8000637c:	c1 d0       	breq	800063b6 <_vfprintf_r+0xe8a>
8000637e:	1c 37       	cp.w	r7,lr
80006380:	c0 64       	brge	8000638c <_vfprintf_r+0xe60>
80006382:	fa c9 f9 34 	sub	r9,sp,-1740
80006386:	f2 07 00 38 	add	r8,r9,r7<<0x3
8000638a:	c1 d8       	rjmp	800063c4 <_vfprintf_r+0xe98>
8000638c:	fa c8 f9 40 	sub	r8,sp,-1728
80006390:	1a d8       	st.w	--sp,r8
80006392:	fa c8 fa a8 	sub	r8,sp,-1368
80006396:	0e 9b       	mov	r11,r7
80006398:	1a d8       	st.w	--sp,r8
8000639a:	fa c8 fb a4 	sub	r8,sp,-1116
8000639e:	06 9a       	mov	r10,r3
800063a0:	1a d8       	st.w	--sp,r8
800063a2:	fa c8 f9 30 	sub	r8,sp,-1744
800063a6:	fa c9 ff a4 	sub	r9,sp,-92
800063aa:	40 8c       	lddsp	r12,sp[0x20]
800063ac:	fe b0 f7 26 	rcall	800051f8 <get_arg>
800063b0:	2f dd       	sub	sp,-12
800063b2:	78 0b       	ld.w	r11,r12[0x0]
800063b4:	c2 28       	rjmp	800063f8 <_vfprintf_r+0xecc>
800063b6:	2f f0       	sub	r0,-1
800063b8:	1c 39       	cp.w	r9,lr
800063ba:	c0 84       	brge	800063ca <_vfprintf_r+0xe9e>
800063bc:	fa cb f9 34 	sub	r11,sp,-1740
800063c0:	f6 07 00 38 	add	r8,r11,r7<<0x3
800063c4:	f0 fb fd 88 	ld.w	r11,r8[-632]
800063c8:	c1 88       	rjmp	800063f8 <_vfprintf_r+0xecc>
800063ca:	41 4c       	lddsp	r12,sp[0x50]
800063cc:	59 fe       	cp.w	lr,31
800063ce:	e0 89 00 11 	brgt	800063f0 <_vfprintf_r+0xec4>
800063d2:	f8 c8 ff fc 	sub	r8,r12,-4
800063d6:	51 48       	stdsp	sp[0x50],r8
800063d8:	fa ca f9 34 	sub	r10,sp,-1740
800063dc:	78 0b       	ld.w	r11,r12[0x0]
800063de:	f4 0e 00 38 	add	r8,r10,lr<<0x3
800063e2:	f1 4b fd 88 	st.w	r8[-632],r11
800063e6:	fc c8 ff ff 	sub	r8,lr,-1
800063ea:	fb 48 06 c4 	st.w	sp[1732],r8
800063ee:	c0 58       	rjmp	800063f8 <_vfprintf_r+0xecc>
800063f0:	78 0b       	ld.w	r11,r12[0x0]
800063f2:	f8 c8 ff fc 	sub	r8,r12,-4
800063f6:	51 48       	stdsp	sp[0x50],r8
800063f8:	16 94       	mov	r4,r11
800063fa:	30 0e       	mov	lr,0
800063fc:	1c 95       	mov	r5,lr
800063fe:	e0 8f 02 b2 	bral	80006962 <_vfprintf_r+0x1436>
80006402:	00 98       	mov	r8,r0
80006404:	fa fe 06 c4 	ld.w	lr,sp[1732]
80006408:	58 02       	cp.w	r2,0
8000640a:	c1 c0       	breq	80006442 <_vfprintf_r+0xf16>
8000640c:	1c 37       	cp.w	r7,lr
8000640e:	c0 64       	brge	8000641a <_vfprintf_r+0xeee>
80006410:	fa c9 f9 34 	sub	r9,sp,-1740
80006414:	f2 07 00 38 	add	r8,r9,r7<<0x3
80006418:	c1 c8       	rjmp	80006450 <_vfprintf_r+0xf24>
8000641a:	fa c8 f9 40 	sub	r8,sp,-1728
8000641e:	1a d8       	st.w	--sp,r8
80006420:	fa c8 fa a8 	sub	r8,sp,-1368
80006424:	1a d8       	st.w	--sp,r8
80006426:	fa c8 fb a4 	sub	r8,sp,-1116
8000642a:	06 9a       	mov	r10,r3
8000642c:	1a d8       	st.w	--sp,r8
8000642e:	0e 9b       	mov	r11,r7
80006430:	fa c8 f9 30 	sub	r8,sp,-1744
80006434:	fa c9 ff a4 	sub	r9,sp,-92
80006438:	40 8c       	lddsp	r12,sp[0x20]
8000643a:	fe b0 f6 df 	rcall	800051f8 <get_arg>
8000643e:	2f dd       	sub	sp,-12
80006440:	c2 18       	rjmp	80006482 <_vfprintf_r+0xf56>
80006442:	2f f0       	sub	r0,-1
80006444:	1c 38       	cp.w	r8,lr
80006446:	c0 84       	brge	80006456 <_vfprintf_r+0xf2a>
80006448:	fa cb f9 34 	sub	r11,sp,-1740
8000644c:	f6 07 00 38 	add	r8,r11,r7<<0x3
80006450:	f0 fc fd 88 	ld.w	r12,r8[-632]
80006454:	c1 88       	rjmp	80006484 <_vfprintf_r+0xf58>
80006456:	41 4c       	lddsp	r12,sp[0x50]
80006458:	59 fe       	cp.w	lr,31
8000645a:	e0 89 00 11 	brgt	8000647c <_vfprintf_r+0xf50>
8000645e:	f8 c8 ff fc 	sub	r8,r12,-4
80006462:	51 48       	stdsp	sp[0x50],r8
80006464:	fa ca f9 34 	sub	r10,sp,-1740
80006468:	78 0c       	ld.w	r12,r12[0x0]
8000646a:	f4 0e 00 38 	add	r8,r10,lr<<0x3
8000646e:	f1 4c fd 88 	st.w	r8[-632],r12
80006472:	fc c8 ff ff 	sub	r8,lr,-1
80006476:	fb 48 06 c4 	st.w	sp[1732],r8
8000647a:	c0 58       	rjmp	80006484 <_vfprintf_r+0xf58>
8000647c:	f8 c8 ff fc 	sub	r8,r12,-4
80006480:	51 48       	stdsp	sp[0x50],r8
80006482:	78 0c       	ld.w	r12,r12[0x0]
80006484:	33 08       	mov	r8,48
80006486:	fb 68 06 c8 	st.b	sp[1736],r8
8000648a:	37 88       	mov	r8,120
8000648c:	40 99       	lddsp	r9,sp[0x24]
8000648e:	fb 68 06 c9 	st.b	sp[1737],r8
80006492:	a1 b9       	sbr	r9,0x1
80006494:	37 88       	mov	r8,120
80006496:	4d 6b       	lddpc	r11,800065ec <_vfprintf_r+0x10c0>
80006498:	18 94       	mov	r4,r12
8000649a:	50 99       	stdsp	sp[0x24],r9
8000649c:	30 05       	mov	r5,0
8000649e:	50 88       	stdsp	sp[0x20],r8
800064a0:	30 2e       	mov	lr,2
800064a2:	51 2b       	stdsp	sp[0x48],r11
800064a4:	e0 8f 02 5f 	bral	80006962 <_vfprintf_r+0x1436>
800064a8:	30 0a       	mov	r10,0
800064aa:	fb 6a 06 cb 	st.b	sp[1739],r10
800064ae:	00 98       	mov	r8,r0
800064b0:	fa fe 06 c4 	ld.w	lr,sp[1732]
800064b4:	58 02       	cp.w	r2,0
800064b6:	c1 d0       	breq	800064f0 <_vfprintf_r+0xfc4>
800064b8:	1c 37       	cp.w	r7,lr
800064ba:	c0 64       	brge	800064c6 <_vfprintf_r+0xf9a>
800064bc:	fa c9 f9 34 	sub	r9,sp,-1740
800064c0:	f2 07 00 38 	add	r8,r9,r7<<0x3
800064c4:	c1 d8       	rjmp	800064fe <_vfprintf_r+0xfd2>
800064c6:	fa c8 f9 40 	sub	r8,sp,-1728
800064ca:	1a d8       	st.w	--sp,r8
800064cc:	fa c8 fa a8 	sub	r8,sp,-1368
800064d0:	1a d8       	st.w	--sp,r8
800064d2:	fa c8 fb a4 	sub	r8,sp,-1116
800064d6:	06 9a       	mov	r10,r3
800064d8:	1a d8       	st.w	--sp,r8
800064da:	0e 9b       	mov	r11,r7
800064dc:	fa c8 f9 30 	sub	r8,sp,-1744
800064e0:	fa c9 ff a4 	sub	r9,sp,-92
800064e4:	40 8c       	lddsp	r12,sp[0x20]
800064e6:	fe b0 f6 89 	rcall	800051f8 <get_arg>
800064ea:	2f dd       	sub	sp,-12
800064ec:	78 03       	ld.w	r3,r12[0x0]
800064ee:	c2 28       	rjmp	80006532 <_vfprintf_r+0x1006>
800064f0:	2f f0       	sub	r0,-1
800064f2:	1c 38       	cp.w	r8,lr
800064f4:	c0 84       	brge	80006504 <_vfprintf_r+0xfd8>
800064f6:	fa cb f9 34 	sub	r11,sp,-1740
800064fa:	f6 07 00 38 	add	r8,r11,r7<<0x3
800064fe:	f0 f3 fd 88 	ld.w	r3,r8[-632]
80006502:	c1 88       	rjmp	80006532 <_vfprintf_r+0x1006>
80006504:	41 4c       	lddsp	r12,sp[0x50]
80006506:	59 fe       	cp.w	lr,31
80006508:	e0 89 00 11 	brgt	8000652a <_vfprintf_r+0xffe>
8000650c:	f8 c8 ff fc 	sub	r8,r12,-4
80006510:	51 48       	stdsp	sp[0x50],r8
80006512:	78 03       	ld.w	r3,r12[0x0]
80006514:	fa ca f9 34 	sub	r10,sp,-1740
80006518:	f4 0e 00 38 	add	r8,r10,lr<<0x3
8000651c:	f1 43 fd 88 	st.w	r8[-632],r3
80006520:	fc c8 ff ff 	sub	r8,lr,-1
80006524:	fb 48 06 c4 	st.w	sp[1732],r8
80006528:	c0 58       	rjmp	80006532 <_vfprintf_r+0x1006>
8000652a:	f8 c8 ff fc 	sub	r8,r12,-4
8000652e:	78 03       	ld.w	r3,r12[0x0]
80006530:	51 48       	stdsp	sp[0x50],r8
80006532:	40 c9       	lddsp	r9,sp[0x30]
80006534:	58 09       	cp.w	r9,0
80006536:	c1 05       	brlt	80006556 <_vfprintf_r+0x102a>
80006538:	12 9a       	mov	r10,r9
8000653a:	30 0b       	mov	r11,0
8000653c:	06 9c       	mov	r12,r3
8000653e:	e0 a0 12 3b 	rcall	800089b4 <memchr>
80006542:	e0 80 02 a1 	breq	80006a84 <_vfprintf_r+0x1558>
80006546:	f8 03 01 07 	sub	r7,r12,r3
8000654a:	40 c8       	lddsp	r8,sp[0x30]
8000654c:	10 37       	cp.w	r7,r8
8000654e:	e0 89 02 9b 	brgt	80006a84 <_vfprintf_r+0x1558>
80006552:	e0 8f 02 9a 	bral	80006a86 <_vfprintf_r+0x155a>
80006556:	06 9c       	mov	r12,r3
80006558:	30 02       	mov	r2,0
8000655a:	e0 8f 02 73 	bral	80006a40 <_vfprintf_r+0x1514>
8000655e:	40 9b       	lddsp	r11,sp[0x24]
80006560:	a5 ab       	sbr	r11,0x4
80006562:	50 9b       	stdsp	sp[0x24],r11
80006564:	00 99       	mov	r9,r0
80006566:	40 98       	lddsp	r8,sp[0x24]
80006568:	ed b8 00 05 	bld	r8,0x5
8000656c:	c4 a1       	brne	80006600 <_vfprintf_r+0x10d4>
8000656e:	fa fe 06 c4 	ld.w	lr,sp[1732]
80006572:	58 02       	cp.w	r2,0
80006574:	c1 e0       	breq	800065b0 <_vfprintf_r+0x1084>
80006576:	1c 37       	cp.w	r7,lr
80006578:	c0 64       	brge	80006584 <_vfprintf_r+0x1058>
8000657a:	fa ca f9 34 	sub	r10,sp,-1740
8000657e:	f4 07 00 38 	add	r8,r10,r7<<0x3
80006582:	c1 e8       	rjmp	800065be <_vfprintf_r+0x1092>
80006584:	fa c8 f9 40 	sub	r8,sp,-1728
80006588:	1a d8       	st.w	--sp,r8
8000658a:	fa c8 fa a8 	sub	r8,sp,-1368
8000658e:	1a d8       	st.w	--sp,r8
80006590:	fa c8 fb a4 	sub	r8,sp,-1116
80006594:	06 9a       	mov	r10,r3
80006596:	1a d8       	st.w	--sp,r8
80006598:	0e 9b       	mov	r11,r7
8000659a:	fa c8 f9 30 	sub	r8,sp,-1744
8000659e:	fa c9 ff a4 	sub	r9,sp,-92
800065a2:	40 8c       	lddsp	r12,sp[0x20]
800065a4:	fe b0 f6 2a 	rcall	800051f8 <get_arg>
800065a8:	2f dd       	sub	sp,-12
800065aa:	f8 e4 00 00 	ld.d	r4,r12[0]
800065ae:	c2 68       	rjmp	800065fa <_vfprintf_r+0x10ce>
800065b0:	2f f0       	sub	r0,-1
800065b2:	1c 39       	cp.w	r9,lr
800065b4:	c0 84       	brge	800065c4 <_vfprintf_r+0x1098>
800065b6:	fa c9 f9 34 	sub	r9,sp,-1740
800065ba:	f2 07 00 38 	add	r8,r9,r7<<0x3
800065be:	f0 e4 fd 88 	ld.d	r4,r8[-632]
800065c2:	c1 c8       	rjmp	800065fa <_vfprintf_r+0x10ce>
800065c4:	41 4c       	lddsp	r12,sp[0x50]
800065c6:	59 fe       	cp.w	lr,31
800065c8:	e0 89 00 14 	brgt	800065f0 <_vfprintf_r+0x10c4>
800065cc:	f8 c8 ff f8 	sub	r8,r12,-8
800065d0:	51 48       	stdsp	sp[0x50],r8
800065d2:	f8 e4 00 00 	ld.d	r4,r12[0]
800065d6:	fa cb f9 34 	sub	r11,sp,-1740
800065da:	f6 0e 00 38 	add	r8,r11,lr<<0x3
800065de:	f0 e5 fd 88 	st.d	r8[-632],r4
800065e2:	fc c8 ff ff 	sub	r8,lr,-1
800065e6:	fb 48 06 c4 	st.w	sp[1732],r8
800065ea:	c0 88       	rjmp	800065fa <_vfprintf_r+0x10ce>
800065ec:	80 00       	ld.sh	r0,r0[0x0]
800065ee:	a8 94       	st.b	r4[0x1],r4
800065f0:	f8 c8 ff f8 	sub	r8,r12,-8
800065f4:	f8 e4 00 00 	ld.d	r4,r12[0]
800065f8:	51 48       	stdsp	sp[0x50],r8
800065fa:	30 1e       	mov	lr,1
800065fc:	e0 8f 01 b3 	bral	80006962 <_vfprintf_r+0x1436>
80006600:	40 98       	lddsp	r8,sp[0x24]
80006602:	ed b8 00 04 	bld	r8,0x4
80006606:	c1 01       	brne	80006626 <_vfprintf_r+0x10fa>
80006608:	fa fe 06 c4 	ld.w	lr,sp[1732]
8000660c:	58 02       	cp.w	r2,0
8000660e:	c0 80       	breq	8000661e <_vfprintf_r+0x10f2>
80006610:	1c 37       	cp.w	r7,lr
80006612:	c5 f4       	brge	800066d0 <_vfprintf_r+0x11a4>
80006614:	fa ca f9 34 	sub	r10,sp,-1740
80006618:	f4 07 00 38 	add	r8,r10,r7<<0x3
8000661c:	c7 68       	rjmp	80006708 <_vfprintf_r+0x11dc>
8000661e:	2f f0       	sub	r0,-1
80006620:	1c 39       	cp.w	r9,lr
80006622:	c7 64       	brge	8000670e <_vfprintf_r+0x11e2>
80006624:	c5 18       	rjmp	800066c6 <_vfprintf_r+0x119a>
80006626:	40 98       	lddsp	r8,sp[0x24]
80006628:	ed b8 00 06 	bld	r8,0x6
8000662c:	c4 71       	brne	800066ba <_vfprintf_r+0x118e>
8000662e:	fa fe 06 c4 	ld.w	lr,sp[1732]
80006632:	58 02       	cp.w	r2,0
80006634:	c1 d0       	breq	8000666e <_vfprintf_r+0x1142>
80006636:	1c 37       	cp.w	r7,lr
80006638:	c0 64       	brge	80006644 <_vfprintf_r+0x1118>
8000663a:	fa c9 f9 34 	sub	r9,sp,-1740
8000663e:	f2 07 00 38 	add	r8,r9,r7<<0x3
80006642:	c1 d8       	rjmp	8000667c <_vfprintf_r+0x1150>
80006644:	fa c8 f9 40 	sub	r8,sp,-1728
80006648:	1a d8       	st.w	--sp,r8
8000664a:	fa c8 fa a8 	sub	r8,sp,-1368
8000664e:	0e 9b       	mov	r11,r7
80006650:	1a d8       	st.w	--sp,r8
80006652:	fa c8 fb a4 	sub	r8,sp,-1116
80006656:	06 9a       	mov	r10,r3
80006658:	1a d8       	st.w	--sp,r8
8000665a:	fa c8 f9 30 	sub	r8,sp,-1744
8000665e:	fa c9 ff a4 	sub	r9,sp,-92
80006662:	40 8c       	lddsp	r12,sp[0x20]
80006664:	fe b0 f5 ca 	rcall	800051f8 <get_arg>
80006668:	2f dd       	sub	sp,-12
8000666a:	98 1b       	ld.sh	r11,r12[0x2]
8000666c:	c2 48       	rjmp	800066b4 <_vfprintf_r+0x1188>
8000666e:	2f f0       	sub	r0,-1
80006670:	1c 39       	cp.w	r9,lr
80006672:	c0 84       	brge	80006682 <_vfprintf_r+0x1156>
80006674:	fa cb f9 34 	sub	r11,sp,-1740
80006678:	f6 07 00 38 	add	r8,r11,r7<<0x3
8000667c:	f1 0b fd 8a 	ld.sh	r11,r8[-630]
80006680:	c1 a8       	rjmp	800066b4 <_vfprintf_r+0x1188>
80006682:	41 4c       	lddsp	r12,sp[0x50]
80006684:	59 fe       	cp.w	lr,31
80006686:	e0 89 00 13 	brgt	800066ac <_vfprintf_r+0x1180>
8000668a:	f8 c8 ff fc 	sub	r8,r12,-4
8000668e:	51 48       	stdsp	sp[0x50],r8
80006690:	78 09       	ld.w	r9,r12[0x0]
80006692:	fa ca f9 34 	sub	r10,sp,-1740
80006696:	f4 0e 00 38 	add	r8,r10,lr<<0x3
8000669a:	f1 49 fd 88 	st.w	r8[-632],r9
8000669e:	f7 d9 b0 10 	bfexts	r11,r9,0x0,0x10
800066a2:	fc c8 ff ff 	sub	r8,lr,-1
800066a6:	fb 48 06 c4 	st.w	sp[1732],r8
800066aa:	c0 58       	rjmp	800066b4 <_vfprintf_r+0x1188>
800066ac:	f8 c8 ff fc 	sub	r8,r12,-4
800066b0:	98 1b       	ld.sh	r11,r12[0x2]
800066b2:	51 48       	stdsp	sp[0x50],r8
800066b4:	e9 db c0 10 	bfextu	r4,r11,0x0,0x10
800066b8:	c4 38       	rjmp	8000673e <_vfprintf_r+0x1212>
800066ba:	fa fe 06 c4 	ld.w	lr,sp[1732]
800066be:	58 02       	cp.w	r2,0
800066c0:	c1 d0       	breq	800066fa <_vfprintf_r+0x11ce>
800066c2:	1c 37       	cp.w	r7,lr
800066c4:	c0 64       	brge	800066d0 <_vfprintf_r+0x11a4>
800066c6:	fa c9 f9 34 	sub	r9,sp,-1740
800066ca:	f2 07 00 38 	add	r8,r9,r7<<0x3
800066ce:	c1 d8       	rjmp	80006708 <_vfprintf_r+0x11dc>
800066d0:	fa c8 f9 40 	sub	r8,sp,-1728
800066d4:	1a d8       	st.w	--sp,r8
800066d6:	fa c8 fa a8 	sub	r8,sp,-1368
800066da:	0e 9b       	mov	r11,r7
800066dc:	1a d8       	st.w	--sp,r8
800066de:	fa c8 fb a4 	sub	r8,sp,-1116
800066e2:	06 9a       	mov	r10,r3
800066e4:	1a d8       	st.w	--sp,r8
800066e6:	fa c8 f9 30 	sub	r8,sp,-1744
800066ea:	fa c9 ff a4 	sub	r9,sp,-92
800066ee:	40 8c       	lddsp	r12,sp[0x20]
800066f0:	fe b0 f5 84 	rcall	800051f8 <get_arg>
800066f4:	2f dd       	sub	sp,-12
800066f6:	78 0b       	ld.w	r11,r12[0x0]
800066f8:	c2 28       	rjmp	8000673c <_vfprintf_r+0x1210>
800066fa:	2f f0       	sub	r0,-1
800066fc:	1c 39       	cp.w	r9,lr
800066fe:	c0 84       	brge	8000670e <_vfprintf_r+0x11e2>
80006700:	fa cb f9 34 	sub	r11,sp,-1740
80006704:	f6 07 00 38 	add	r8,r11,r7<<0x3
80006708:	f0 fb fd 88 	ld.w	r11,r8[-632]
8000670c:	c1 88       	rjmp	8000673c <_vfprintf_r+0x1210>
8000670e:	41 4c       	lddsp	r12,sp[0x50]
80006710:	59 fe       	cp.w	lr,31
80006712:	e0 89 00 11 	brgt	80006734 <_vfprintf_r+0x1208>
80006716:	f8 c8 ff fc 	sub	r8,r12,-4
8000671a:	51 48       	stdsp	sp[0x50],r8
8000671c:	fa ca f9 34 	sub	r10,sp,-1740
80006720:	78 0b       	ld.w	r11,r12[0x0]
80006722:	f4 0e 00 38 	add	r8,r10,lr<<0x3
80006726:	f1 4b fd 88 	st.w	r8[-632],r11
8000672a:	fc c8 ff ff 	sub	r8,lr,-1
8000672e:	fb 48 06 c4 	st.w	sp[1732],r8
80006732:	c0 58       	rjmp	8000673c <_vfprintf_r+0x1210>
80006734:	78 0b       	ld.w	r11,r12[0x0]
80006736:	f8 c8 ff fc 	sub	r8,r12,-4
8000673a:	51 48       	stdsp	sp[0x50],r8
8000673c:	16 94       	mov	r4,r11
8000673e:	30 1e       	mov	lr,1
80006740:	30 05       	mov	r5,0
80006742:	c1 09       	rjmp	80006962 <_vfprintf_r+0x1436>
80006744:	4c d8       	lddpc	r8,80006878 <_vfprintf_r+0x134c>
80006746:	00 99       	mov	r9,r0
80006748:	51 28       	stdsp	sp[0x48],r8
8000674a:	40 98       	lddsp	r8,sp[0x24]
8000674c:	ed b8 00 05 	bld	r8,0x5
80006750:	c4 61       	brne	800067dc <_vfprintf_r+0x12b0>
80006752:	fa fe 06 c4 	ld.w	lr,sp[1732]
80006756:	58 02       	cp.w	r2,0
80006758:	c1 e0       	breq	80006794 <_vfprintf_r+0x1268>
8000675a:	1c 37       	cp.w	r7,lr
8000675c:	c0 64       	brge	80006768 <_vfprintf_r+0x123c>
8000675e:	fa cb f9 34 	sub	r11,sp,-1740
80006762:	f6 07 00 38 	add	r8,r11,r7<<0x3
80006766:	c1 e8       	rjmp	800067a2 <_vfprintf_r+0x1276>
80006768:	fa c8 f9 40 	sub	r8,sp,-1728
8000676c:	1a d8       	st.w	--sp,r8
8000676e:	fa c8 fa a8 	sub	r8,sp,-1368
80006772:	1a d8       	st.w	--sp,r8
80006774:	fa c8 fb a4 	sub	r8,sp,-1116
80006778:	06 9a       	mov	r10,r3
8000677a:	1a d8       	st.w	--sp,r8
8000677c:	0e 9b       	mov	r11,r7
8000677e:	fa c8 f9 30 	sub	r8,sp,-1744
80006782:	fa c9 ff a4 	sub	r9,sp,-92
80006786:	40 8c       	lddsp	r12,sp[0x20]
80006788:	fe b0 f5 38 	rcall	800051f8 <get_arg>
8000678c:	2f dd       	sub	sp,-12
8000678e:	f8 e4 00 00 	ld.d	r4,r12[0]
80006792:	cd 48       	rjmp	8000693a <_vfprintf_r+0x140e>
80006794:	2f f0       	sub	r0,-1
80006796:	1c 39       	cp.w	r9,lr
80006798:	c0 84       	brge	800067a8 <_vfprintf_r+0x127c>
8000679a:	fa ca f9 34 	sub	r10,sp,-1740
8000679e:	f4 07 00 38 	add	r8,r10,r7<<0x3
800067a2:	f0 e4 fd 88 	ld.d	r4,r8[-632]
800067a6:	cc a8       	rjmp	8000693a <_vfprintf_r+0x140e>
800067a8:	41 4c       	lddsp	r12,sp[0x50]
800067aa:	59 fe       	cp.w	lr,31
800067ac:	e0 89 00 12 	brgt	800067d0 <_vfprintf_r+0x12a4>
800067b0:	f8 c8 ff f8 	sub	r8,r12,-8
800067b4:	51 48       	stdsp	sp[0x50],r8
800067b6:	f8 e4 00 00 	ld.d	r4,r12[0]
800067ba:	fa c9 f9 34 	sub	r9,sp,-1740
800067be:	f2 0e 00 38 	add	r8,r9,lr<<0x3
800067c2:	f0 e5 fd 88 	st.d	r8[-632],r4
800067c6:	fc c8 ff ff 	sub	r8,lr,-1
800067ca:	fb 48 06 c4 	st.w	sp[1732],r8
800067ce:	cb 68       	rjmp	8000693a <_vfprintf_r+0x140e>
800067d0:	f8 c8 ff f8 	sub	r8,r12,-8
800067d4:	f8 e4 00 00 	ld.d	r4,r12[0]
800067d8:	51 48       	stdsp	sp[0x50],r8
800067da:	cb 08       	rjmp	8000693a <_vfprintf_r+0x140e>
800067dc:	40 98       	lddsp	r8,sp[0x24]
800067de:	ed b8 00 04 	bld	r8,0x4
800067e2:	c1 c1       	brne	8000681a <_vfprintf_r+0x12ee>
800067e4:	fa fe 06 c4 	ld.w	lr,sp[1732]
800067e8:	58 02       	cp.w	r2,0
800067ea:	c0 80       	breq	800067fa <_vfprintf_r+0x12ce>
800067ec:	1c 37       	cp.w	r7,lr
800067ee:	c6 e4       	brge	800068ca <_vfprintf_r+0x139e>
800067f0:	fa cb f9 34 	sub	r11,sp,-1740
800067f4:	f6 07 00 38 	add	r8,r11,r7<<0x3
800067f8:	c8 58       	rjmp	80006902 <_vfprintf_r+0x13d6>
800067fa:	2f f0       	sub	r0,-1
800067fc:	1c 39       	cp.w	r9,lr
800067fe:	c6 15       	brlt	800068c0 <_vfprintf_r+0x1394>
80006800:	41 4c       	lddsp	r12,sp[0x50]
80006802:	59 fe       	cp.w	lr,31
80006804:	e0 89 00 95 	brgt	8000692e <_vfprintf_r+0x1402>
80006808:	f8 c8 ff fc 	sub	r8,r12,-4
8000680c:	fa c9 f9 34 	sub	r9,sp,-1740
80006810:	51 48       	stdsp	sp[0x50],r8
80006812:	78 0b       	ld.w	r11,r12[0x0]
80006814:	f2 0e 00 38 	add	r8,r9,lr<<0x3
80006818:	c8 48       	rjmp	80006920 <_vfprintf_r+0x13f4>
8000681a:	40 98       	lddsp	r8,sp[0x24]
8000681c:	ed b8 00 06 	bld	r8,0x6
80006820:	c4 a1       	brne	800068b4 <_vfprintf_r+0x1388>
80006822:	fa fe 06 c4 	ld.w	lr,sp[1732]
80006826:	58 02       	cp.w	r2,0
80006828:	c1 d0       	breq	80006862 <_vfprintf_r+0x1336>
8000682a:	1c 37       	cp.w	r7,lr
8000682c:	c0 64       	brge	80006838 <_vfprintf_r+0x130c>
8000682e:	fa cb f9 34 	sub	r11,sp,-1740
80006832:	f6 07 00 38 	add	r8,r11,r7<<0x3
80006836:	c1 d8       	rjmp	80006870 <_vfprintf_r+0x1344>
80006838:	fa c8 f9 40 	sub	r8,sp,-1728
8000683c:	1a d8       	st.w	--sp,r8
8000683e:	fa c8 fa a8 	sub	r8,sp,-1368
80006842:	0e 9b       	mov	r11,r7
80006844:	1a d8       	st.w	--sp,r8
80006846:	fa c8 fb a4 	sub	r8,sp,-1116
8000684a:	06 9a       	mov	r10,r3
8000684c:	1a d8       	st.w	--sp,r8
8000684e:	fa c8 f9 30 	sub	r8,sp,-1744
80006852:	fa c9 ff a4 	sub	r9,sp,-92
80006856:	40 8c       	lddsp	r12,sp[0x20]
80006858:	fe b0 f4 d0 	rcall	800051f8 <get_arg>
8000685c:	2f dd       	sub	sp,-12
8000685e:	98 1b       	ld.sh	r11,r12[0x2]
80006860:	c2 78       	rjmp	800068ae <_vfprintf_r+0x1382>
80006862:	2f f0       	sub	r0,-1
80006864:	1c 39       	cp.w	r9,lr
80006866:	c0 b4       	brge	8000687c <_vfprintf_r+0x1350>
80006868:	fa ca f9 34 	sub	r10,sp,-1740
8000686c:	f4 07 00 38 	add	r8,r10,r7<<0x3
80006870:	f1 0b fd 8a 	ld.sh	r11,r8[-630]
80006874:	c1 d8       	rjmp	800068ae <_vfprintf_r+0x1382>
80006876:	d7 03       	nop
80006878:	80 00       	ld.sh	r0,r0[0x0]
8000687a:	a8 94       	st.b	r4[0x1],r4
8000687c:	41 4c       	lddsp	r12,sp[0x50]
8000687e:	59 fe       	cp.w	lr,31
80006880:	e0 89 00 13 	brgt	800068a6 <_vfprintf_r+0x137a>
80006884:	f8 c8 ff fc 	sub	r8,r12,-4
80006888:	51 48       	stdsp	sp[0x50],r8
8000688a:	78 09       	ld.w	r9,r12[0x0]
8000688c:	fa cb f9 34 	sub	r11,sp,-1740
80006890:	f6 0e 00 38 	add	r8,r11,lr<<0x3
80006894:	f1 49 fd 88 	st.w	r8[-632],r9
80006898:	f7 d9 b0 10 	bfexts	r11,r9,0x0,0x10
8000689c:	fc c8 ff ff 	sub	r8,lr,-1
800068a0:	fb 48 06 c4 	st.w	sp[1732],r8
800068a4:	c0 58       	rjmp	800068ae <_vfprintf_r+0x1382>
800068a6:	f8 c8 ff fc 	sub	r8,r12,-4
800068aa:	98 1b       	ld.sh	r11,r12[0x2]
800068ac:	51 48       	stdsp	sp[0x50],r8
800068ae:	e9 db c0 10 	bfextu	r4,r11,0x0,0x10
800068b2:	c4 38       	rjmp	80006938 <_vfprintf_r+0x140c>
800068b4:	fa fe 06 c4 	ld.w	lr,sp[1732]
800068b8:	58 02       	cp.w	r2,0
800068ba:	c1 d0       	breq	800068f4 <_vfprintf_r+0x13c8>
800068bc:	1c 37       	cp.w	r7,lr
800068be:	c0 64       	brge	800068ca <_vfprintf_r+0x139e>
800068c0:	fa ca f9 34 	sub	r10,sp,-1740
800068c4:	f4 07 00 38 	add	r8,r10,r7<<0x3
800068c8:	c1 d8       	rjmp	80006902 <_vfprintf_r+0x13d6>
800068ca:	fa c8 f9 40 	sub	r8,sp,-1728
800068ce:	1a d8       	st.w	--sp,r8
800068d0:	fa c8 fa a8 	sub	r8,sp,-1368
800068d4:	0e 9b       	mov	r11,r7
800068d6:	1a d8       	st.w	--sp,r8
800068d8:	fa c8 fb a4 	sub	r8,sp,-1116
800068dc:	06 9a       	mov	r10,r3
800068de:	1a d8       	st.w	--sp,r8
800068e0:	fa c8 f9 30 	sub	r8,sp,-1744
800068e4:	fa c9 ff a4 	sub	r9,sp,-92
800068e8:	40 8c       	lddsp	r12,sp[0x20]
800068ea:	fe b0 f4 87 	rcall	800051f8 <get_arg>
800068ee:	2f dd       	sub	sp,-12
800068f0:	78 0b       	ld.w	r11,r12[0x0]
800068f2:	c2 28       	rjmp	80006936 <_vfprintf_r+0x140a>
800068f4:	2f f0       	sub	r0,-1
800068f6:	1c 39       	cp.w	r9,lr
800068f8:	c0 84       	brge	80006908 <_vfprintf_r+0x13dc>
800068fa:	fa c9 f9 34 	sub	r9,sp,-1740
800068fe:	f2 07 00 38 	add	r8,r9,r7<<0x3
80006902:	f0 fb fd 88 	ld.w	r11,r8[-632]
80006906:	c1 88       	rjmp	80006936 <_vfprintf_r+0x140a>
80006908:	41 4c       	lddsp	r12,sp[0x50]
8000690a:	59 fe       	cp.w	lr,31
8000690c:	e0 89 00 11 	brgt	8000692e <_vfprintf_r+0x1402>
80006910:	f8 c8 ff fc 	sub	r8,r12,-4
80006914:	fa ca f9 34 	sub	r10,sp,-1740
80006918:	51 48       	stdsp	sp[0x50],r8
8000691a:	78 0b       	ld.w	r11,r12[0x0]
8000691c:	f4 0e 00 38 	add	r8,r10,lr<<0x3
80006920:	f1 4b fd 88 	st.w	r8[-632],r11
80006924:	fc c8 ff ff 	sub	r8,lr,-1
80006928:	fb 48 06 c4 	st.w	sp[1732],r8
8000692c:	c0 58       	rjmp	80006936 <_vfprintf_r+0x140a>
8000692e:	78 0b       	ld.w	r11,r12[0x0]
80006930:	f8 c8 ff fc 	sub	r8,r12,-4
80006934:	51 48       	stdsp	sp[0x50],r8
80006936:	16 94       	mov	r4,r11
80006938:	30 05       	mov	r5,0
8000693a:	eb e4 10 08 	or	r8,r5,r4
8000693e:	40 99       	lddsp	r9,sp[0x24]
80006940:	5f 18       	srne	r8
80006942:	30 0b       	mov	r11,0
80006944:	f3 e8 00 08 	and	r8,r9,r8
80006948:	f6 08 18 00 	cp.b	r8,r11
8000694c:	c0 a0       	breq	80006960 <_vfprintf_r+0x1434>
8000694e:	40 99       	lddsp	r9,sp[0x24]
80006950:	40 8a       	lddsp	r10,sp[0x20]
80006952:	a1 b9       	sbr	r9,0x1
80006954:	33 08       	mov	r8,48
80006956:	fb 6a 06 c9 	st.b	sp[1737],r10
8000695a:	50 99       	stdsp	sp[0x24],r9
8000695c:	fb 68 06 c8 	st.b	sp[1736],r8
80006960:	30 2e       	mov	lr,2
80006962:	30 08       	mov	r8,0
80006964:	fb 68 06 cb 	st.b	sp[1739],r8
80006968:	40 cb       	lddsp	r11,sp[0x30]
8000696a:	58 0b       	cp.w	r11,0
8000696c:	c0 45       	brlt	80006974 <_vfprintf_r+0x1448>
8000696e:	40 9a       	lddsp	r10,sp[0x24]
80006970:	a7 da       	cbr	r10,0x7
80006972:	50 9a       	stdsp	sp[0x24],r10
80006974:	40 c9       	lddsp	r9,sp[0x30]
80006976:	eb e4 10 08 	or	r8,r5,r4
8000697a:	58 09       	cp.w	r9,0
8000697c:	5f 19       	srne	r9
8000697e:	58 08       	cp.w	r8,0
80006980:	5f 18       	srne	r8
80006982:	fa c6 f9 68 	sub	r6,sp,-1688
80006986:	12 48       	or	r8,r9
80006988:	30 0b       	mov	r11,0
8000698a:	f6 08 18 00 	cp.b	r8,r11
8000698e:	c5 d0       	breq	80006a48 <_vfprintf_r+0x151c>
80006990:	30 18       	mov	r8,1
80006992:	f0 0e 18 00 	cp.b	lr,r8
80006996:	c0 70       	breq	800069a4 <_vfprintf_r+0x1478>
80006998:	c0 83       	brcs	800069a8 <_vfprintf_r+0x147c>
8000699a:	30 28       	mov	r8,2
8000699c:	f0 0e 18 00 	cp.b	lr,r8
800069a0:	c4 d1       	brne	80006a3a <_vfprintf_r+0x150e>
800069a2:	c3 98       	rjmp	80006a14 <_vfprintf_r+0x14e8>
800069a4:	0c 97       	mov	r7,r6
800069a6:	c2 d8       	rjmp	80006a00 <_vfprintf_r+0x14d4>
800069a8:	0c 93       	mov	r3,r6
800069aa:	f1 d4 c0 03 	bfextu	r8,r4,0x0,0x3
800069ae:	f0 cc ff d0 	sub	r12,r8,-48
800069b2:	06 fc       	st.b	--r3,r12
800069b4:	e8 0a 16 03 	lsr	r10,r4,0x3
800069b8:	ea 0b 16 03 	lsr	r11,r5,0x3
800069bc:	f5 e5 11 da 	or	r10,r10,r5<<0x1d
800069c0:	16 95       	mov	r5,r11
800069c2:	14 94       	mov	r4,r10
800069c4:	58 04       	cp.w	r4,0
800069c6:	5c 25       	cpc	r5
800069c8:	cf 11       	brne	800069aa <_vfprintf_r+0x147e>
800069ca:	40 9a       	lddsp	r10,sp[0x24]
800069cc:	ed ba 00 00 	bld	r10,0x0
800069d0:	c4 81       	brne	80006a60 <_vfprintf_r+0x1534>
800069d2:	33 08       	mov	r8,48
800069d4:	f0 0c 18 00 	cp.b	r12,r8
800069d8:	c4 40       	breq	80006a60 <_vfprintf_r+0x1534>
800069da:	06 f8       	st.b	--r3,r8
800069dc:	c4 28       	rjmp	80006a60 <_vfprintf_r+0x1534>
800069de:	18 97       	mov	r7,r12
800069e0:	30 a8       	mov	r8,10
800069e2:	30 09       	mov	r9,0
800069e4:	08 9a       	mov	r10,r4
800069e6:	0a 9b       	mov	r11,r5
800069e8:	e0 a0 1a a6 	rcall	80009f34 <__avr32_umod64>
800069ec:	2d 0a       	sub	r10,-48
800069ee:	0a 9b       	mov	r11,r5
800069f0:	ae 8a       	st.b	r7[0x0],r10
800069f2:	30 a8       	mov	r8,10
800069f4:	08 9a       	mov	r10,r4
800069f6:	30 09       	mov	r9,0
800069f8:	fe b0 ed aa 	rcall	8000454c <__avr32_udiv64>
800069fc:	14 94       	mov	r4,r10
800069fe:	16 95       	mov	r5,r11
80006a00:	ee cc 00 01 	sub	r12,r7,1
80006a04:	58 94       	cp.w	r4,9
80006a06:	5c 25       	cpc	r5
80006a08:	fe 9b ff eb 	brhi	800069de <_vfprintf_r+0x14b2>
80006a0c:	18 93       	mov	r3,r12
80006a0e:	e8 c8 ff d0 	sub	r8,r4,-48
80006a12:	c2 48       	rjmp	80006a5a <_vfprintf_r+0x152e>
80006a14:	0c 93       	mov	r3,r6
80006a16:	f1 d4 c0 04 	bfextu	r8,r4,0x0,0x4
80006a1a:	41 29       	lddsp	r9,sp[0x48]
80006a1c:	f2 08 07 08 	ld.ub	r8,r9[r8]
80006a20:	06 f8       	st.b	--r3,r8
80006a22:	e8 0a 16 04 	lsr	r10,r4,0x4
80006a26:	ea 0b 16 04 	lsr	r11,r5,0x4
80006a2a:	f5 e5 11 ca 	or	r10,r10,r5<<0x1c
80006a2e:	16 95       	mov	r5,r11
80006a30:	14 94       	mov	r4,r10
80006a32:	58 04       	cp.w	r4,0
80006a34:	5c 25       	cpc	r5
80006a36:	cf 01       	brne	80006a16 <_vfprintf_r+0x14ea>
80006a38:	c1 48       	rjmp	80006a60 <_vfprintf_r+0x1534>
80006a3a:	4d 1c       	lddpc	r12,80006b7c <_vfprintf_r+0x1650>
80006a3c:	40 c2       	lddsp	r2,sp[0x30]
80006a3e:	18 93       	mov	r3,r12
80006a40:	e0 a0 15 32 	rcall	800094a4 <strlen>
80006a44:	18 97       	mov	r7,r12
80006a46:	c2 18       	rjmp	80006a88 <_vfprintf_r+0x155c>
80006a48:	58 0e       	cp.w	lr,0
80006a4a:	c0 a1       	brne	80006a5e <_vfprintf_r+0x1532>
80006a4c:	40 9b       	lddsp	r11,sp[0x24]
80006a4e:	ed bb 00 00 	bld	r11,0x0
80006a52:	c0 61       	brne	80006a5e <_vfprintf_r+0x1532>
80006a54:	fa c3 f9 69 	sub	r3,sp,-1687
80006a58:	33 08       	mov	r8,48
80006a5a:	a6 88       	st.b	r3[0x0],r8
80006a5c:	c0 28       	rjmp	80006a60 <_vfprintf_r+0x1534>
80006a5e:	0c 93       	mov	r3,r6
80006a60:	ec 03 01 07 	sub	r7,r6,r3
80006a64:	40 c2       	lddsp	r2,sp[0x30]
80006a66:	c1 18       	rjmp	80006a88 <_vfprintf_r+0x155c>
80006a68:	40 8a       	lddsp	r10,sp[0x20]
80006a6a:	58 0a       	cp.w	r10,0
80006a6c:	e0 80 04 78 	breq	8000735c <_vfprintf_r+0x1e30>
80006a70:	fb 6a 06 70 	st.b	sp[1648],r10
80006a74:	30 09       	mov	r9,0
80006a76:	fa c3 f9 90 	sub	r3,sp,-1648
80006a7a:	fb 69 06 cb 	st.b	sp[1739],r9
80006a7e:	30 02       	mov	r2,0
80006a80:	30 17       	mov	r7,1
80006a82:	c0 38       	rjmp	80006a88 <_vfprintf_r+0x155c>
80006a84:	40 c7       	lddsp	r7,sp[0x30]
80006a86:	30 02       	mov	r2,0
80006a88:	ee 02 0c 48 	max	r8,r7,r2
80006a8c:	30 0b       	mov	r11,0
80006a8e:	51 18       	stdsp	sp[0x44],r8
80006a90:	40 99       	lddsp	r9,sp[0x24]
80006a92:	fb 38 06 cb 	ld.ub	r8,sp[1739]
80006a96:	e2 19 00 02 	andl	r9,0x2,COH
80006a9a:	f6 08 18 00 	cp.b	r8,r11
80006a9e:	fb fa 10 11 	ld.wne	r10,sp[0x44]
80006aa2:	f7 ba 01 ff 	subne	r10,-1
80006aa6:	fb fa 1a 11 	st.wne	sp[0x44],r10
80006aaa:	50 69       	stdsp	sp[0x18],r9
80006aac:	58 09       	cp.w	r9,0
80006aae:	fb f8 10 11 	ld.wne	r8,sp[0x44]
80006ab2:	f7 b8 01 fe 	subne	r8,-2
80006ab6:	fb f8 1a 11 	st.wne	sp[0x44],r8
80006aba:	40 9b       	lddsp	r11,sp[0x24]
80006abc:	e2 1b 00 84 	andl	r11,0x84,COH
80006ac0:	50 7b       	stdsp	sp[0x1c],r11
80006ac2:	c4 31       	brne	80006b48 <_vfprintf_r+0x161c>
80006ac4:	40 b6       	lddsp	r6,sp[0x2c]
80006ac6:	41 1a       	lddsp	r10,sp[0x44]
80006ac8:	14 16       	sub	r6,r10
80006aca:	58 06       	cp.w	r6,0
80006acc:	e0 89 00 1e 	brgt	80006b08 <_vfprintf_r+0x15dc>
80006ad0:	c3 c8       	rjmp	80006b48 <_vfprintf_r+0x161c>
80006ad2:	2f 08       	sub	r8,-16
80006ad4:	4a b9       	lddpc	r9,80006b80 <_vfprintf_r+0x1654>
80006ad6:	fb 48 06 a0 	st.w	sp[1696],r8
80006ada:	83 09       	st.w	r1[0x0],r9
80006adc:	f6 c8 ff ff 	sub	r8,r11,-1
80006ae0:	31 0b       	mov	r11,16
80006ae2:	fb 48 06 9c 	st.w	sp[1692],r8
80006ae6:	83 1b       	st.w	r1[0x4],r11
80006ae8:	58 78       	cp.w	r8,7
80006aea:	e0 89 00 04 	brgt	80006af2 <_vfprintf_r+0x15c6>
80006aee:	2f 81       	sub	r1,-8
80006af0:	c0 b8       	rjmp	80006b06 <_vfprintf_r+0x15da>
80006af2:	fa ca f9 68 	sub	r10,sp,-1688
80006af6:	40 4b       	lddsp	r11,sp[0x10]
80006af8:	40 5c       	lddsp	r12,sp[0x14]
80006afa:	fe b0 f5 0b 	rcall	80005510 <__sprint_r>
80006afe:	e0 81 04 3d 	brne	80007378 <_vfprintf_r+0x1e4c>
80006b02:	fa c1 f9 d0 	sub	r1,sp,-1584
80006b06:	21 06       	sub	r6,16
80006b08:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006b0c:	fa fb 06 9c 	ld.w	r11,sp[1692]
80006b10:	49 c9       	lddpc	r9,80006b80 <_vfprintf_r+0x1654>
80006b12:	59 06       	cp.w	r6,16
80006b14:	fe 99 ff df 	brgt	80006ad2 <_vfprintf_r+0x15a6>
80006b18:	0c 08       	add	r8,r6
80006b1a:	83 09       	st.w	r1[0x0],r9
80006b1c:	fb 48 06 a0 	st.w	sp[1696],r8
80006b20:	83 16       	st.w	r1[0x4],r6
80006b22:	f6 c8 ff ff 	sub	r8,r11,-1
80006b26:	fb 48 06 9c 	st.w	sp[1692],r8
80006b2a:	58 78       	cp.w	r8,7
80006b2c:	e0 89 00 04 	brgt	80006b34 <_vfprintf_r+0x1608>
80006b30:	2f 81       	sub	r1,-8
80006b32:	c0 b8       	rjmp	80006b48 <_vfprintf_r+0x161c>
80006b34:	fa ca f9 68 	sub	r10,sp,-1688
80006b38:	40 4b       	lddsp	r11,sp[0x10]
80006b3a:	40 5c       	lddsp	r12,sp[0x14]
80006b3c:	fe b0 f4 ea 	rcall	80005510 <__sprint_r>
80006b40:	e0 81 04 1c 	brne	80007378 <_vfprintf_r+0x1e4c>
80006b44:	fa c1 f9 d0 	sub	r1,sp,-1584
80006b48:	fb 38 06 cb 	ld.ub	r8,sp[1739]
80006b4c:	30 0a       	mov	r10,0
80006b4e:	f4 08 18 00 	cp.b	r8,r10
80006b52:	c2 30       	breq	80006b98 <_vfprintf_r+0x166c>
80006b54:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006b58:	2f f8       	sub	r8,-1
80006b5a:	fb 48 06 a0 	st.w	sp[1696],r8
80006b5e:	fa c8 f9 35 	sub	r8,sp,-1739
80006b62:	fa f9 06 9c 	ld.w	r9,sp[1692]
80006b66:	83 08       	st.w	r1[0x0],r8
80006b68:	2f f9       	sub	r9,-1
80006b6a:	30 18       	mov	r8,1
80006b6c:	fb 49 06 9c 	st.w	sp[1692],r9
80006b70:	83 18       	st.w	r1[0x4],r8
80006b72:	58 79       	cp.w	r9,7
80006b74:	e0 89 00 08 	brgt	80006b84 <_vfprintf_r+0x1658>
80006b78:	2f 81       	sub	r1,-8
80006b7a:	c0 f8       	rjmp	80006b98 <_vfprintf_r+0x166c>
80006b7c:	80 00       	ld.sh	r0,r0[0x0]
80006b7e:	a8 a8       	st.b	r4[0x2],r8
80006b80:	80 00       	ld.sh	r0,r0[0x0]
80006b82:	a7 f4       	*unknown*
80006b84:	fa ca f9 68 	sub	r10,sp,-1688
80006b88:	40 4b       	lddsp	r11,sp[0x10]
80006b8a:	40 5c       	lddsp	r12,sp[0x14]
80006b8c:	fe b0 f4 c2 	rcall	80005510 <__sprint_r>
80006b90:	e0 81 03 f4 	brne	80007378 <_vfprintf_r+0x1e4c>
80006b94:	fa c1 f9 d0 	sub	r1,sp,-1584
80006b98:	40 69       	lddsp	r9,sp[0x18]
80006b9a:	58 09       	cp.w	r9,0
80006b9c:	c1 f0       	breq	80006bda <_vfprintf_r+0x16ae>
80006b9e:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006ba2:	2f e8       	sub	r8,-2
80006ba4:	fb 48 06 a0 	st.w	sp[1696],r8
80006ba8:	fa c8 f9 38 	sub	r8,sp,-1736
80006bac:	fa f9 06 9c 	ld.w	r9,sp[1692]
80006bb0:	83 08       	st.w	r1[0x0],r8
80006bb2:	2f f9       	sub	r9,-1
80006bb4:	30 28       	mov	r8,2
80006bb6:	fb 49 06 9c 	st.w	sp[1692],r9
80006bba:	83 18       	st.w	r1[0x4],r8
80006bbc:	58 79       	cp.w	r9,7
80006bbe:	e0 89 00 04 	brgt	80006bc6 <_vfprintf_r+0x169a>
80006bc2:	2f 81       	sub	r1,-8
80006bc4:	c0 b8       	rjmp	80006bda <_vfprintf_r+0x16ae>
80006bc6:	fa ca f9 68 	sub	r10,sp,-1688
80006bca:	40 4b       	lddsp	r11,sp[0x10]
80006bcc:	40 5c       	lddsp	r12,sp[0x14]
80006bce:	fe b0 f4 a1 	rcall	80005510 <__sprint_r>
80006bd2:	e0 81 03 d3 	brne	80007378 <_vfprintf_r+0x1e4c>
80006bd6:	fa c1 f9 d0 	sub	r1,sp,-1584
80006bda:	40 78       	lddsp	r8,sp[0x1c]
80006bdc:	e0 48 00 80 	cp.w	r8,128
80006be0:	c4 31       	brne	80006c66 <_vfprintf_r+0x173a>
80006be2:	40 b6       	lddsp	r6,sp[0x2c]
80006be4:	41 1b       	lddsp	r11,sp[0x44]
80006be6:	16 16       	sub	r6,r11
80006be8:	58 06       	cp.w	r6,0
80006bea:	e0 89 00 1e 	brgt	80006c26 <_vfprintf_r+0x16fa>
80006bee:	c3 c8       	rjmp	80006c66 <_vfprintf_r+0x173a>
80006bf0:	2f 08       	sub	r8,-16
80006bf2:	4c ba       	lddpc	r10,80006d1c <_vfprintf_r+0x17f0>
80006bf4:	fb 48 06 a0 	st.w	sp[1696],r8
80006bf8:	31 09       	mov	r9,16
80006bfa:	f6 c8 ff ff 	sub	r8,r11,-1
80006bfe:	83 0a       	st.w	r1[0x0],r10
80006c00:	83 19       	st.w	r1[0x4],r9
80006c02:	fb 48 06 9c 	st.w	sp[1692],r8
80006c06:	58 78       	cp.w	r8,7
80006c08:	e0 89 00 04 	brgt	80006c10 <_vfprintf_r+0x16e4>
80006c0c:	2f 81       	sub	r1,-8
80006c0e:	c0 b8       	rjmp	80006c24 <_vfprintf_r+0x16f8>
80006c10:	fa ca f9 68 	sub	r10,sp,-1688
80006c14:	40 4b       	lddsp	r11,sp[0x10]
80006c16:	40 5c       	lddsp	r12,sp[0x14]
80006c18:	fe b0 f4 7c 	rcall	80005510 <__sprint_r>
80006c1c:	e0 81 03 ae 	brne	80007378 <_vfprintf_r+0x1e4c>
80006c20:	fa c1 f9 d0 	sub	r1,sp,-1584
80006c24:	21 06       	sub	r6,16
80006c26:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006c2a:	fa fb 06 9c 	ld.w	r11,sp[1692]
80006c2e:	4b c9       	lddpc	r9,80006d1c <_vfprintf_r+0x17f0>
80006c30:	59 06       	cp.w	r6,16
80006c32:	fe 99 ff df 	brgt	80006bf0 <_vfprintf_r+0x16c4>
80006c36:	0c 08       	add	r8,r6
80006c38:	83 09       	st.w	r1[0x0],r9
80006c3a:	fb 48 06 a0 	st.w	sp[1696],r8
80006c3e:	83 16       	st.w	r1[0x4],r6
80006c40:	f6 c8 ff ff 	sub	r8,r11,-1
80006c44:	fb 48 06 9c 	st.w	sp[1692],r8
80006c48:	58 78       	cp.w	r8,7
80006c4a:	e0 89 00 04 	brgt	80006c52 <_vfprintf_r+0x1726>
80006c4e:	2f 81       	sub	r1,-8
80006c50:	c0 b8       	rjmp	80006c66 <_vfprintf_r+0x173a>
80006c52:	fa ca f9 68 	sub	r10,sp,-1688
80006c56:	40 4b       	lddsp	r11,sp[0x10]
80006c58:	40 5c       	lddsp	r12,sp[0x14]
80006c5a:	fe b0 f4 5b 	rcall	80005510 <__sprint_r>
80006c5e:	e0 81 03 8d 	brne	80007378 <_vfprintf_r+0x1e4c>
80006c62:	fa c1 f9 d0 	sub	r1,sp,-1584
80006c66:	e4 07 01 06 	sub	r6,r2,r7
80006c6a:	58 06       	cp.w	r6,0
80006c6c:	e0 89 00 1e 	brgt	80006ca8 <_vfprintf_r+0x177c>
80006c70:	c3 e8       	rjmp	80006cec <_vfprintf_r+0x17c0>
80006c72:	2f 08       	sub	r8,-16
80006c74:	31 0a       	mov	r10,16
80006c76:	fb 48 06 a0 	st.w	sp[1696],r8
80006c7a:	83 1a       	st.w	r1[0x4],r10
80006c7c:	f6 c8 ff ff 	sub	r8,r11,-1
80006c80:	4a 7b       	lddpc	r11,80006d1c <_vfprintf_r+0x17f0>
80006c82:	fb 48 06 9c 	st.w	sp[1692],r8
80006c86:	83 0b       	st.w	r1[0x0],r11
80006c88:	58 78       	cp.w	r8,7
80006c8a:	e0 89 00 04 	brgt	80006c92 <_vfprintf_r+0x1766>
80006c8e:	2f 81       	sub	r1,-8
80006c90:	c0 a8       	rjmp	80006ca4 <_vfprintf_r+0x1778>
80006c92:	fa ca f9 68 	sub	r10,sp,-1688
80006c96:	40 4b       	lddsp	r11,sp[0x10]
80006c98:	40 5c       	lddsp	r12,sp[0x14]
80006c9a:	fe b0 f4 3b 	rcall	80005510 <__sprint_r>
80006c9e:	e0 81 03 6d 	brne	80007378 <_vfprintf_r+0x1e4c>
80006ca2:	04 91       	mov	r1,r2
80006ca4:	21 06       	sub	r6,16
80006ca6:	c0 38       	rjmp	80006cac <_vfprintf_r+0x1780>
80006ca8:	fa c2 f9 d0 	sub	r2,sp,-1584
80006cac:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006cb0:	fa fb 06 9c 	ld.w	r11,sp[1692]
80006cb4:	49 a9       	lddpc	r9,80006d1c <_vfprintf_r+0x17f0>
80006cb6:	59 06       	cp.w	r6,16
80006cb8:	fe 99 ff dd 	brgt	80006c72 <_vfprintf_r+0x1746>
80006cbc:	0c 08       	add	r8,r6
80006cbe:	83 09       	st.w	r1[0x0],r9
80006cc0:	fb 48 06 a0 	st.w	sp[1696],r8
80006cc4:	83 16       	st.w	r1[0x4],r6
80006cc6:	f6 c8 ff ff 	sub	r8,r11,-1
80006cca:	fb 48 06 9c 	st.w	sp[1692],r8
80006cce:	58 78       	cp.w	r8,7
80006cd0:	e0 89 00 04 	brgt	80006cd8 <_vfprintf_r+0x17ac>
80006cd4:	2f 81       	sub	r1,-8
80006cd6:	c0 b8       	rjmp	80006cec <_vfprintf_r+0x17c0>
80006cd8:	fa ca f9 68 	sub	r10,sp,-1688
80006cdc:	40 4b       	lddsp	r11,sp[0x10]
80006cde:	40 5c       	lddsp	r12,sp[0x14]
80006ce0:	fe b0 f4 18 	rcall	80005510 <__sprint_r>
80006ce4:	e0 81 03 4a 	brne	80007378 <_vfprintf_r+0x1e4c>
80006ce8:	fa c1 f9 d0 	sub	r1,sp,-1584
80006cec:	40 98       	lddsp	r8,sp[0x24]
80006cee:	ed b8 00 08 	bld	r8,0x8
80006cf2:	c1 70       	breq	80006d20 <_vfprintf_r+0x17f4>
80006cf4:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006cf8:	0e 08       	add	r8,r7
80006cfa:	83 03       	st.w	r1[0x0],r3
80006cfc:	fb 48 06 a0 	st.w	sp[1696],r8
80006d00:	83 17       	st.w	r1[0x4],r7
80006d02:	fa f8 06 9c 	ld.w	r8,sp[1692]
80006d06:	2f f8       	sub	r8,-1
80006d08:	fb 48 06 9c 	st.w	sp[1692],r8
80006d0c:	58 78       	cp.w	r8,7
80006d0e:	e0 89 02 c0 	brgt	8000728e <_vfprintf_r+0x1d62>
80006d12:	e2 ca ff f8 	sub	r10,r1,-8
80006d16:	e0 8f 02 c5 	bral	800072a0 <_vfprintf_r+0x1d74>
80006d1a:	d7 03       	nop
80006d1c:	80 00       	ld.sh	r0,r0[0x0]
80006d1e:	a8 c8       	st.b	r4[0x4],r8
80006d20:	40 89       	lddsp	r9,sp[0x20]
80006d22:	e0 49 00 65 	cp.w	r9,101
80006d26:	e0 8a 01 ee 	brle	80007102 <_vfprintf_r+0x1bd6>
80006d2a:	30 08       	mov	r8,0
80006d2c:	30 09       	mov	r9,0
80006d2e:	40 1b       	lddsp	r11,sp[0x4]
80006d30:	40 0a       	lddsp	r10,sp[0x0]
80006d32:	e0 a0 16 ea 	rcall	80009b06 <__avr32_f64_cmp_eq>
80006d36:	c7 b0       	breq	80006e2c <_vfprintf_r+0x1900>
80006d38:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006d3c:	2f f8       	sub	r8,-1
80006d3e:	fb 48 06 a0 	st.w	sp[1696],r8
80006d42:	4c 88       	lddpc	r8,80006e60 <_vfprintf_r+0x1934>
80006d44:	fa f9 06 9c 	ld.w	r9,sp[1692]
80006d48:	83 08       	st.w	r1[0x0],r8
80006d4a:	2f f9       	sub	r9,-1
80006d4c:	30 18       	mov	r8,1
80006d4e:	fb 49 06 9c 	st.w	sp[1692],r9
80006d52:	83 18       	st.w	r1[0x4],r8
80006d54:	58 79       	cp.w	r9,7
80006d56:	e0 89 00 05 	brgt	80006d60 <_vfprintf_r+0x1834>
80006d5a:	e2 ca ff f8 	sub	r10,r1,-8
80006d5e:	c0 b8       	rjmp	80006d74 <_vfprintf_r+0x1848>
80006d60:	fa ca f9 68 	sub	r10,sp,-1688
80006d64:	40 4b       	lddsp	r11,sp[0x10]
80006d66:	40 5c       	lddsp	r12,sp[0x14]
80006d68:	fe b0 f3 d4 	rcall	80005510 <__sprint_r>
80006d6c:	e0 81 03 06 	brne	80007378 <_vfprintf_r+0x1e4c>
80006d70:	fa ca f9 d0 	sub	r10,sp,-1584
80006d74:	fa f8 06 bc 	ld.w	r8,sp[1724]
80006d78:	41 0b       	lddsp	r11,sp[0x40]
80006d7a:	16 38       	cp.w	r8,r11
80006d7c:	c0 65       	brlt	80006d88 <_vfprintf_r+0x185c>
80006d7e:	40 99       	lddsp	r9,sp[0x24]
80006d80:	ed b9 00 00 	bld	r9,0x0
80006d84:	e0 81 02 8e 	brne	800072a0 <_vfprintf_r+0x1d74>
80006d88:	40 d8       	lddsp	r8,sp[0x34]
80006d8a:	95 08       	st.w	r10[0x0],r8
80006d8c:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006d90:	2f f8       	sub	r8,-1
80006d92:	30 19       	mov	r9,1
80006d94:	fb 48 06 a0 	st.w	sp[1696],r8
80006d98:	95 19       	st.w	r10[0x4],r9
80006d9a:	fa f8 06 9c 	ld.w	r8,sp[1692]
80006d9e:	2f f8       	sub	r8,-1
80006da0:	fb 48 06 9c 	st.w	sp[1692],r8
80006da4:	58 78       	cp.w	r8,7
80006da6:	e0 89 00 04 	brgt	80006dae <_vfprintf_r+0x1882>
80006daa:	2f 8a       	sub	r10,-8
80006dac:	c0 b8       	rjmp	80006dc2 <_vfprintf_r+0x1896>
80006dae:	fa ca f9 68 	sub	r10,sp,-1688
80006db2:	40 4b       	lddsp	r11,sp[0x10]
80006db4:	40 5c       	lddsp	r12,sp[0x14]
80006db6:	fe b0 f3 ad 	rcall	80005510 <__sprint_r>
80006dba:	e0 81 02 df 	brne	80007378 <_vfprintf_r+0x1e4c>
80006dbe:	fa ca f9 d0 	sub	r10,sp,-1584
80006dc2:	41 06       	lddsp	r6,sp[0x40]
80006dc4:	20 16       	sub	r6,1
80006dc6:	58 06       	cp.w	r6,0
80006dc8:	e0 89 00 1c 	brgt	80006e00 <_vfprintf_r+0x18d4>
80006dcc:	e0 8f 02 6a 	bral	800072a0 <_vfprintf_r+0x1d74>
80006dd0:	2f 08       	sub	r8,-16
80006dd2:	95 01       	st.w	r10[0x0],r1
80006dd4:	fb 48 06 a0 	st.w	sp[1696],r8
80006dd8:	95 12       	st.w	r10[0x4],r2
80006dda:	f6 c8 ff ff 	sub	r8,r11,-1
80006dde:	fb 48 06 9c 	st.w	sp[1692],r8
80006de2:	58 78       	cp.w	r8,7
80006de4:	e0 89 00 04 	brgt	80006dec <_vfprintf_r+0x18c0>
80006de8:	2f 8a       	sub	r10,-8
80006dea:	c0 98       	rjmp	80006dfc <_vfprintf_r+0x18d0>
80006dec:	06 9a       	mov	r10,r3
80006dee:	40 4b       	lddsp	r11,sp[0x10]
80006df0:	40 5c       	lddsp	r12,sp[0x14]
80006df2:	fe b0 f3 8f 	rcall	80005510 <__sprint_r>
80006df6:	e0 81 02 c1 	brne	80007378 <_vfprintf_r+0x1e4c>
80006dfa:	0e 9a       	mov	r10,r7
80006dfc:	21 06       	sub	r6,16
80006dfe:	c0 78       	rjmp	80006e0c <_vfprintf_r+0x18e0>
80006e00:	49 91       	lddpc	r1,80006e64 <_vfprintf_r+0x1938>
80006e02:	31 02       	mov	r2,16
80006e04:	fa c3 f9 68 	sub	r3,sp,-1688
80006e08:	fa c7 f9 d0 	sub	r7,sp,-1584
80006e0c:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006e10:	fa fb 06 9c 	ld.w	r11,sp[1692]
80006e14:	49 49       	lddpc	r9,80006e64 <_vfprintf_r+0x1938>
80006e16:	59 06       	cp.w	r6,16
80006e18:	fe 99 ff dc 	brgt	80006dd0 <_vfprintf_r+0x18a4>
80006e1c:	0c 08       	add	r8,r6
80006e1e:	95 09       	st.w	r10[0x0],r9
80006e20:	fb 48 06 a0 	st.w	sp[1696],r8
80006e24:	95 16       	st.w	r10[0x4],r6
80006e26:	f6 c8 ff ff 	sub	r8,r11,-1
80006e2a:	c6 59       	rjmp	800070f4 <_vfprintf_r+0x1bc8>
80006e2c:	fa f9 06 bc 	ld.w	r9,sp[1724]
80006e30:	58 09       	cp.w	r9,0
80006e32:	e0 89 00 9a 	brgt	80006f66 <_vfprintf_r+0x1a3a>
80006e36:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006e3a:	2f f8       	sub	r8,-1
80006e3c:	fb 48 06 a0 	st.w	sp[1696],r8
80006e40:	48 88       	lddpc	r8,80006e60 <_vfprintf_r+0x1934>
80006e42:	fa f9 06 9c 	ld.w	r9,sp[1692]
80006e46:	83 08       	st.w	r1[0x0],r8
80006e48:	2f f9       	sub	r9,-1
80006e4a:	30 18       	mov	r8,1
80006e4c:	fb 49 06 9c 	st.w	sp[1692],r9
80006e50:	83 18       	st.w	r1[0x4],r8
80006e52:	58 79       	cp.w	r9,7
80006e54:	e0 89 00 0a 	brgt	80006e68 <_vfprintf_r+0x193c>
80006e58:	e2 ca ff f8 	sub	r10,r1,-8
80006e5c:	c1 08       	rjmp	80006e7c <_vfprintf_r+0x1950>
80006e5e:	d7 03       	nop
80006e60:	80 00       	ld.sh	r0,r0[0x0]
80006e62:	a8 c4       	st.b	r4[0x4],r4
80006e64:	80 00       	ld.sh	r0,r0[0x0]
80006e66:	a8 c8       	st.b	r4[0x4],r8
80006e68:	fa ca f9 68 	sub	r10,sp,-1688
80006e6c:	40 4b       	lddsp	r11,sp[0x10]
80006e6e:	40 5c       	lddsp	r12,sp[0x14]
80006e70:	fe b0 f3 50 	rcall	80005510 <__sprint_r>
80006e74:	e0 81 02 82 	brne	80007378 <_vfprintf_r+0x1e4c>
80006e78:	fa ca f9 d0 	sub	r10,sp,-1584
80006e7c:	fa f8 06 bc 	ld.w	r8,sp[1724]
80006e80:	58 08       	cp.w	r8,0
80006e82:	c0 91       	brne	80006e94 <_vfprintf_r+0x1968>
80006e84:	41 0b       	lddsp	r11,sp[0x40]
80006e86:	58 0b       	cp.w	r11,0
80006e88:	c0 61       	brne	80006e94 <_vfprintf_r+0x1968>
80006e8a:	40 99       	lddsp	r9,sp[0x24]
80006e8c:	ed b9 00 00 	bld	r9,0x0
80006e90:	e0 81 02 08 	brne	800072a0 <_vfprintf_r+0x1d74>
80006e94:	40 d8       	lddsp	r8,sp[0x34]
80006e96:	95 08       	st.w	r10[0x0],r8
80006e98:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006e9c:	2f f8       	sub	r8,-1
80006e9e:	30 19       	mov	r9,1
80006ea0:	fb 48 06 a0 	st.w	sp[1696],r8
80006ea4:	95 19       	st.w	r10[0x4],r9
80006ea6:	fa f8 06 9c 	ld.w	r8,sp[1692]
80006eaa:	2f f8       	sub	r8,-1
80006eac:	fb 48 06 9c 	st.w	sp[1692],r8
80006eb0:	58 78       	cp.w	r8,7
80006eb2:	e0 89 00 04 	brgt	80006eba <_vfprintf_r+0x198e>
80006eb6:	2f 8a       	sub	r10,-8
80006eb8:	c0 b8       	rjmp	80006ece <_vfprintf_r+0x19a2>
80006eba:	fa ca f9 68 	sub	r10,sp,-1688
80006ebe:	40 4b       	lddsp	r11,sp[0x10]
80006ec0:	40 5c       	lddsp	r12,sp[0x14]
80006ec2:	fe b0 f3 27 	rcall	80005510 <__sprint_r>
80006ec6:	e0 81 02 59 	brne	80007378 <_vfprintf_r+0x1e4c>
80006eca:	fa ca f9 d0 	sub	r10,sp,-1584
80006ece:	fa f8 06 bc 	ld.w	r8,sp[1724]
80006ed2:	f0 06 11 00 	rsub	r6,r8,0
80006ed6:	58 06       	cp.w	r6,0
80006ed8:	e0 89 00 1c 	brgt	80006f10 <_vfprintf_r+0x19e4>
80006edc:	c3 f8       	rjmp	80006f5a <_vfprintf_r+0x1a2e>
80006ede:	2f 08       	sub	r8,-16
80006ee0:	95 11       	st.w	r10[0x4],r1
80006ee2:	fb 48 06 a0 	st.w	sp[1696],r8
80006ee6:	f6 c8 ff ff 	sub	r8,r11,-1
80006eea:	4c eb       	lddpc	r11,80007020 <_vfprintf_r+0x1af4>
80006eec:	fb 48 06 9c 	st.w	sp[1692],r8
80006ef0:	95 0b       	st.w	r10[0x0],r11
80006ef2:	58 78       	cp.w	r8,7
80006ef4:	e0 89 00 04 	brgt	80006efc <_vfprintf_r+0x19d0>
80006ef8:	2f 8a       	sub	r10,-8
80006efa:	c0 98       	rjmp	80006f0c <_vfprintf_r+0x19e0>
80006efc:	04 9a       	mov	r10,r2
80006efe:	40 4b       	lddsp	r11,sp[0x10]
80006f00:	40 5c       	lddsp	r12,sp[0x14]
80006f02:	fe b0 f3 07 	rcall	80005510 <__sprint_r>
80006f06:	e0 81 02 39 	brne	80007378 <_vfprintf_r+0x1e4c>
80006f0a:	0e 9a       	mov	r10,r7
80006f0c:	21 06       	sub	r6,16
80006f0e:	c0 68       	rjmp	80006f1a <_vfprintf_r+0x19ee>
80006f10:	31 01       	mov	r1,16
80006f12:	fa c2 f9 68 	sub	r2,sp,-1688
80006f16:	fa c7 f9 d0 	sub	r7,sp,-1584
80006f1a:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006f1e:	fa fb 06 9c 	ld.w	r11,sp[1692]
80006f22:	4c 09       	lddpc	r9,80007020 <_vfprintf_r+0x1af4>
80006f24:	59 06       	cp.w	r6,16
80006f26:	fe 99 ff dc 	brgt	80006ede <_vfprintf_r+0x19b2>
80006f2a:	0c 08       	add	r8,r6
80006f2c:	95 09       	st.w	r10[0x0],r9
80006f2e:	fb 48 06 a0 	st.w	sp[1696],r8
80006f32:	95 16       	st.w	r10[0x4],r6
80006f34:	f6 c8 ff ff 	sub	r8,r11,-1
80006f38:	fb 48 06 9c 	st.w	sp[1692],r8
80006f3c:	58 78       	cp.w	r8,7
80006f3e:	e0 89 00 04 	brgt	80006f46 <_vfprintf_r+0x1a1a>
80006f42:	2f 8a       	sub	r10,-8
80006f44:	c0 b8       	rjmp	80006f5a <_vfprintf_r+0x1a2e>
80006f46:	fa ca f9 68 	sub	r10,sp,-1688
80006f4a:	40 4b       	lddsp	r11,sp[0x10]
80006f4c:	40 5c       	lddsp	r12,sp[0x14]
80006f4e:	fe b0 f2 e1 	rcall	80005510 <__sprint_r>
80006f52:	e0 81 02 13 	brne	80007378 <_vfprintf_r+0x1e4c>
80006f56:	fa ca f9 d0 	sub	r10,sp,-1584
80006f5a:	41 09       	lddsp	r9,sp[0x40]
80006f5c:	95 03       	st.w	r10[0x0],r3
80006f5e:	95 19       	st.w	r10[0x4],r9
80006f60:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006f64:	cc 28       	rjmp	800070e8 <_vfprintf_r+0x1bbc>
80006f66:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006f6a:	fa fb 06 9c 	ld.w	r11,sp[1692]
80006f6e:	41 0a       	lddsp	r10,sp[0x40]
80006f70:	14 39       	cp.w	r9,r10
80006f72:	c7 75       	brlt	80007060 <_vfprintf_r+0x1b34>
80006f74:	14 08       	add	r8,r10
80006f76:	83 03       	st.w	r1[0x0],r3
80006f78:	fb 48 06 a0 	st.w	sp[1696],r8
80006f7c:	83 1a       	st.w	r1[0x4],r10
80006f7e:	f6 c8 ff ff 	sub	r8,r11,-1
80006f82:	fb 48 06 9c 	st.w	sp[1692],r8
80006f86:	58 78       	cp.w	r8,7
80006f88:	e0 89 00 05 	brgt	80006f92 <_vfprintf_r+0x1a66>
80006f8c:	e2 ca ff f8 	sub	r10,r1,-8
80006f90:	c0 b8       	rjmp	80006fa6 <_vfprintf_r+0x1a7a>
80006f92:	fa ca f9 68 	sub	r10,sp,-1688
80006f96:	40 4b       	lddsp	r11,sp[0x10]
80006f98:	40 5c       	lddsp	r12,sp[0x14]
80006f9a:	fe b0 f2 bb 	rcall	80005510 <__sprint_r>
80006f9e:	e0 81 01 ed 	brne	80007378 <_vfprintf_r+0x1e4c>
80006fa2:	fa ca f9 d0 	sub	r10,sp,-1584
80006fa6:	fa f8 06 bc 	ld.w	r8,sp[1724]
80006faa:	41 09       	lddsp	r9,sp[0x40]
80006fac:	f0 09 01 06 	sub	r6,r8,r9
80006fb0:	58 06       	cp.w	r6,0
80006fb2:	e0 89 00 1b 	brgt	80006fe8 <_vfprintf_r+0x1abc>
80006fb6:	c4 18       	rjmp	80007038 <_vfprintf_r+0x1b0c>
80006fb8:	2f 08       	sub	r8,-16
80006fba:	95 01       	st.w	r10[0x0],r1
80006fbc:	fb 48 06 a0 	st.w	sp[1696],r8
80006fc0:	95 12       	st.w	r10[0x4],r2
80006fc2:	f6 c8 ff ff 	sub	r8,r11,-1
80006fc6:	fb 48 06 9c 	st.w	sp[1692],r8
80006fca:	58 78       	cp.w	r8,7
80006fcc:	e0 89 00 04 	brgt	80006fd4 <_vfprintf_r+0x1aa8>
80006fd0:	2f 8a       	sub	r10,-8
80006fd2:	c0 98       	rjmp	80006fe4 <_vfprintf_r+0x1ab8>
80006fd4:	06 9a       	mov	r10,r3
80006fd6:	40 4b       	lddsp	r11,sp[0x10]
80006fd8:	40 5c       	lddsp	r12,sp[0x14]
80006fda:	fe b0 f2 9b 	rcall	80005510 <__sprint_r>
80006fde:	e0 81 01 cd 	brne	80007378 <_vfprintf_r+0x1e4c>
80006fe2:	0e 9a       	mov	r10,r7
80006fe4:	21 06       	sub	r6,16
80006fe6:	c0 78       	rjmp	80006ff4 <_vfprintf_r+0x1ac8>
80006fe8:	48 e1       	lddpc	r1,80007020 <_vfprintf_r+0x1af4>
80006fea:	31 02       	mov	r2,16
80006fec:	fa c3 f9 68 	sub	r3,sp,-1688
80006ff0:	fa c7 f9 d0 	sub	r7,sp,-1584
80006ff4:	fa f8 06 a0 	ld.w	r8,sp[1696]
80006ff8:	fa fb 06 9c 	ld.w	r11,sp[1692]
80006ffc:	48 99       	lddpc	r9,80007020 <_vfprintf_r+0x1af4>
80006ffe:	59 06       	cp.w	r6,16
80007000:	fe 99 ff dc 	brgt	80006fb8 <_vfprintf_r+0x1a8c>
80007004:	0c 08       	add	r8,r6
80007006:	95 09       	st.w	r10[0x0],r9
80007008:	fb 48 06 a0 	st.w	sp[1696],r8
8000700c:	95 16       	st.w	r10[0x4],r6
8000700e:	f6 c8 ff ff 	sub	r8,r11,-1
80007012:	fb 48 06 9c 	st.w	sp[1692],r8
80007016:	58 78       	cp.w	r8,7
80007018:	e0 89 00 06 	brgt	80007024 <_vfprintf_r+0x1af8>
8000701c:	2f 8a       	sub	r10,-8
8000701e:	c0 d8       	rjmp	80007038 <_vfprintf_r+0x1b0c>
80007020:	80 00       	ld.sh	r0,r0[0x0]
80007022:	a8 c8       	st.b	r4[0x4],r8
80007024:	fa ca f9 68 	sub	r10,sp,-1688
80007028:	40 4b       	lddsp	r11,sp[0x10]
8000702a:	40 5c       	lddsp	r12,sp[0x14]
8000702c:	fe b0 f2 72 	rcall	80005510 <__sprint_r>
80007030:	e0 81 01 a4 	brne	80007378 <_vfprintf_r+0x1e4c>
80007034:	fa ca f9 d0 	sub	r10,sp,-1584
80007038:	40 9b       	lddsp	r11,sp[0x24]
8000703a:	ed bb 00 00 	bld	r11,0x0
8000703e:	e0 81 01 31 	brne	800072a0 <_vfprintf_r+0x1d74>
80007042:	40 d9       	lddsp	r9,sp[0x34]
80007044:	fa f8 06 a0 	ld.w	r8,sp[1696]
80007048:	2f f8       	sub	r8,-1
8000704a:	95 09       	st.w	r10[0x0],r9
8000704c:	fb 48 06 a0 	st.w	sp[1696],r8
80007050:	30 19       	mov	r9,1
80007052:	fa f8 06 9c 	ld.w	r8,sp[1692]
80007056:	95 19       	st.w	r10[0x4],r9
80007058:	2f f8       	sub	r8,-1
8000705a:	fb 48 06 9c 	st.w	sp[1692],r8
8000705e:	c4 d8       	rjmp	800070f8 <_vfprintf_r+0x1bcc>
80007060:	12 08       	add	r8,r9
80007062:	83 03       	st.w	r1[0x0],r3
80007064:	fb 48 06 a0 	st.w	sp[1696],r8
80007068:	83 19       	st.w	r1[0x4],r9
8000706a:	f6 c8 ff ff 	sub	r8,r11,-1
8000706e:	fb 48 06 9c 	st.w	sp[1692],r8
80007072:	58 78       	cp.w	r8,7
80007074:	e0 89 00 05 	brgt	8000707e <_vfprintf_r+0x1b52>
80007078:	e2 ca ff f8 	sub	r10,r1,-8
8000707c:	c0 b8       	rjmp	80007092 <_vfprintf_r+0x1b66>
8000707e:	fa ca f9 68 	sub	r10,sp,-1688
80007082:	40 4b       	lddsp	r11,sp[0x10]
80007084:	40 5c       	lddsp	r12,sp[0x14]
80007086:	fe b0 f2 45 	rcall	80005510 <__sprint_r>
8000708a:	e0 81 01 77 	brne	80007378 <_vfprintf_r+0x1e4c>
8000708e:	fa ca f9 d0 	sub	r10,sp,-1584
80007092:	40 d8       	lddsp	r8,sp[0x34]
80007094:	95 08       	st.w	r10[0x0],r8
80007096:	fa f8 06 a0 	ld.w	r8,sp[1696]
8000709a:	2f f8       	sub	r8,-1
8000709c:	fa f9 06 9c 	ld.w	r9,sp[1692]
800070a0:	fb 48 06 a0 	st.w	sp[1696],r8
800070a4:	2f f9       	sub	r9,-1
800070a6:	30 18       	mov	r8,1
800070a8:	fb 49 06 9c 	st.w	sp[1692],r9
800070ac:	95 18       	st.w	r10[0x4],r8
800070ae:	fa f7 06 bc 	ld.w	r7,sp[1724]
800070b2:	58 79       	cp.w	r9,7
800070b4:	e0 89 00 04 	brgt	800070bc <_vfprintf_r+0x1b90>
800070b8:	2f 8a       	sub	r10,-8
800070ba:	c0 b8       	rjmp	800070d0 <_vfprintf_r+0x1ba4>
800070bc:	fa ca f9 68 	sub	r10,sp,-1688
800070c0:	40 4b       	lddsp	r11,sp[0x10]
800070c2:	40 5c       	lddsp	r12,sp[0x14]
800070c4:	fe b0 f2 26 	rcall	80005510 <__sprint_r>
800070c8:	e0 81 01 58 	brne	80007378 <_vfprintf_r+0x1e4c>
800070cc:	fa ca f9 d0 	sub	r10,sp,-1584
800070d0:	fa f9 06 bc 	ld.w	r9,sp[1724]
800070d4:	e6 07 00 08 	add	r8,r3,r7
800070d8:	41 0b       	lddsp	r11,sp[0x40]
800070da:	95 08       	st.w	r10[0x0],r8
800070dc:	12 1b       	sub	r11,r9
800070de:	fa f8 06 a0 	ld.w	r8,sp[1696]
800070e2:	95 1b       	st.w	r10[0x4],r11
800070e4:	12 18       	sub	r8,r9
800070e6:	41 09       	lddsp	r9,sp[0x40]
800070e8:	12 08       	add	r8,r9
800070ea:	fb 48 06 a0 	st.w	sp[1696],r8
800070ee:	fa f8 06 9c 	ld.w	r8,sp[1692]
800070f2:	2f f8       	sub	r8,-1
800070f4:	fb 48 06 9c 	st.w	sp[1692],r8
800070f8:	58 78       	cp.w	r8,7
800070fa:	e0 89 00 ca 	brgt	8000728e <_vfprintf_r+0x1d62>
800070fe:	2f 8a       	sub	r10,-8
80007100:	cd 08       	rjmp	800072a0 <_vfprintf_r+0x1d74>
80007102:	41 08       	lddsp	r8,sp[0x40]
80007104:	58 18       	cp.w	r8,1
80007106:	e0 89 00 07 	brgt	80007114 <_vfprintf_r+0x1be8>
8000710a:	40 9b       	lddsp	r11,sp[0x24]
8000710c:	ed bb 00 00 	bld	r11,0x0
80007110:	e0 81 00 8d 	brne	8000722a <_vfprintf_r+0x1cfe>
80007114:	fa f8 06 a0 	ld.w	r8,sp[1696]
80007118:	2f f8       	sub	r8,-1
8000711a:	30 19       	mov	r9,1
8000711c:	fb 48 06 a0 	st.w	sp[1696],r8
80007120:	83 03       	st.w	r1[0x0],r3
80007122:	fa f8 06 9c 	ld.w	r8,sp[1692]
80007126:	83 19       	st.w	r1[0x4],r9
80007128:	2f f8       	sub	r8,-1
8000712a:	fb 48 06 9c 	st.w	sp[1692],r8
8000712e:	58 78       	cp.w	r8,7
80007130:	e0 89 00 05 	brgt	8000713a <_vfprintf_r+0x1c0e>
80007134:	e2 ca ff f8 	sub	r10,r1,-8
80007138:	c0 b8       	rjmp	8000714e <_vfprintf_r+0x1c22>
8000713a:	fa ca f9 68 	sub	r10,sp,-1688
8000713e:	40 4b       	lddsp	r11,sp[0x10]
80007140:	40 5c       	lddsp	r12,sp[0x14]
80007142:	fe b0 f1 e7 	rcall	80005510 <__sprint_r>
80007146:	e0 81 01 19 	brne	80007378 <_vfprintf_r+0x1e4c>
8000714a:	fa ca f9 d0 	sub	r10,sp,-1584
8000714e:	40 d9       	lddsp	r9,sp[0x34]
80007150:	fa f8 06 a0 	ld.w	r8,sp[1696]
80007154:	2f f8       	sub	r8,-1
80007156:	95 09       	st.w	r10[0x0],r9
80007158:	fb 48 06 a0 	st.w	sp[1696],r8
8000715c:	30 19       	mov	r9,1
8000715e:	fa f8 06 9c 	ld.w	r8,sp[1692]
80007162:	95 19       	st.w	r10[0x4],r9
80007164:	2f f8       	sub	r8,-1
80007166:	fb 48 06 9c 	st.w	sp[1692],r8
8000716a:	58 78       	cp.w	r8,7
8000716c:	e0 89 00 05 	brgt	80007176 <_vfprintf_r+0x1c4a>
80007170:	f4 c7 ff f8 	sub	r7,r10,-8
80007174:	c0 b8       	rjmp	8000718a <_vfprintf_r+0x1c5e>
80007176:	fa ca f9 68 	sub	r10,sp,-1688
8000717a:	40 4b       	lddsp	r11,sp[0x10]
8000717c:	40 5c       	lddsp	r12,sp[0x14]
8000717e:	fe b0 f1 c9 	rcall	80005510 <__sprint_r>
80007182:	e0 81 00 fb 	brne	80007378 <_vfprintf_r+0x1e4c>
80007186:	fa c7 f9 d0 	sub	r7,sp,-1584
8000718a:	30 09       	mov	r9,0
8000718c:	30 08       	mov	r8,0
8000718e:	40 1b       	lddsp	r11,sp[0x4]
80007190:	40 0a       	lddsp	r10,sp[0x0]
80007192:	e0 a0 14 ba 	rcall	80009b06 <__avr32_f64_cmp_eq>
80007196:	41 09       	lddsp	r9,sp[0x40]
80007198:	20 19       	sub	r9,1
8000719a:	58 0c       	cp.w	r12,0
8000719c:	c0 e1       	brne	800071b8 <_vfprintf_r+0x1c8c>
8000719e:	e6 c8 ff ff 	sub	r8,r3,-1
800071a2:	8f 08       	st.w	r7[0x0],r8
800071a4:	fa f8 06 a0 	ld.w	r8,sp[1696]
800071a8:	12 08       	add	r8,r9
800071aa:	8f 19       	st.w	r7[0x4],r9
800071ac:	fb 48 06 a0 	st.w	sp[1696],r8
800071b0:	fa f8 06 9c 	ld.w	r8,sp[1692]
800071b4:	2f f8       	sub	r8,-1
800071b6:	c3 38       	rjmp	8000721c <_vfprintf_r+0x1cf0>
800071b8:	12 96       	mov	r6,r9
800071ba:	58 09       	cp.w	r9,0
800071bc:	e0 89 00 1c 	brgt	800071f4 <_vfprintf_r+0x1cc8>
800071c0:	c5 28       	rjmp	80007264 <_vfprintf_r+0x1d38>
800071c2:	2f 08       	sub	r8,-16
800071c4:	8f 11       	st.w	r7[0x4],r1
800071c6:	fb 48 06 a0 	st.w	sp[1696],r8
800071ca:	f6 c8 ff ff 	sub	r8,r11,-1
800071ce:	4c 6b       	lddpc	r11,800072e4 <_vfprintf_r+0x1db8>
800071d0:	fb 48 06 9c 	st.w	sp[1692],r8
800071d4:	8f 0b       	st.w	r7[0x0],r11
800071d6:	58 78       	cp.w	r8,7
800071d8:	e0 89 00 04 	brgt	800071e0 <_vfprintf_r+0x1cb4>
800071dc:	2f 87       	sub	r7,-8
800071de:	c0 98       	rjmp	800071f0 <_vfprintf_r+0x1cc4>
800071e0:	04 9a       	mov	r10,r2
800071e2:	40 4b       	lddsp	r11,sp[0x10]
800071e4:	40 5c       	lddsp	r12,sp[0x14]
800071e6:	fe b0 f1 95 	rcall	80005510 <__sprint_r>
800071ea:	e0 81 00 c7 	brne	80007378 <_vfprintf_r+0x1e4c>
800071ee:	06 97       	mov	r7,r3
800071f0:	21 06       	sub	r6,16
800071f2:	c0 68       	rjmp	800071fe <_vfprintf_r+0x1cd2>
800071f4:	31 01       	mov	r1,16
800071f6:	fa c2 f9 68 	sub	r2,sp,-1688
800071fa:	fa c3 f9 d0 	sub	r3,sp,-1584
800071fe:	fa f8 06 a0 	ld.w	r8,sp[1696]
80007202:	fa fb 06 9c 	ld.w	r11,sp[1692]
80007206:	4b 89       	lddpc	r9,800072e4 <_vfprintf_r+0x1db8>
80007208:	59 06       	cp.w	r6,16
8000720a:	fe 99 ff dc 	brgt	800071c2 <_vfprintf_r+0x1c96>
8000720e:	0c 08       	add	r8,r6
80007210:	8f 09       	st.w	r7[0x0],r9
80007212:	fb 48 06 a0 	st.w	sp[1696],r8
80007216:	8f 16       	st.w	r7[0x4],r6
80007218:	f6 c8 ff ff 	sub	r8,r11,-1
8000721c:	fb 48 06 9c 	st.w	sp[1692],r8
80007220:	58 78       	cp.w	r8,7
80007222:	e0 89 00 17 	brgt	80007250 <_vfprintf_r+0x1d24>
80007226:	2f 87       	sub	r7,-8
80007228:	c1 e8       	rjmp	80007264 <_vfprintf_r+0x1d38>
8000722a:	fa f8 06 a0 	ld.w	r8,sp[1696]
8000722e:	2f f8       	sub	r8,-1
80007230:	30 19       	mov	r9,1
80007232:	fb 48 06 a0 	st.w	sp[1696],r8
80007236:	83 03       	st.w	r1[0x0],r3
80007238:	fa f8 06 9c 	ld.w	r8,sp[1692]
8000723c:	83 19       	st.w	r1[0x4],r9
8000723e:	2f f8       	sub	r8,-1
80007240:	fb 48 06 9c 	st.w	sp[1692],r8
80007244:	58 78       	cp.w	r8,7
80007246:	e0 89 00 05 	brgt	80007250 <_vfprintf_r+0x1d24>
8000724a:	e2 c7 ff f8 	sub	r7,r1,-8
8000724e:	c0 b8       	rjmp	80007264 <_vfprintf_r+0x1d38>
80007250:	fa ca f9 68 	sub	r10,sp,-1688
80007254:	40 4b       	lddsp	r11,sp[0x10]
80007256:	40 5c       	lddsp	r12,sp[0x14]
80007258:	fe b0 f1 5c 	rcall	80005510 <__sprint_r>
8000725c:	e0 81 00 8e 	brne	80007378 <_vfprintf_r+0x1e4c>
80007260:	fa c7 f9 d0 	sub	r7,sp,-1584
80007264:	40 fa       	lddsp	r10,sp[0x3c]
80007266:	fa f8 06 a0 	ld.w	r8,sp[1696]
8000726a:	14 08       	add	r8,r10
8000726c:	fa c9 f9 54 	sub	r9,sp,-1708
80007270:	fb 48 06 a0 	st.w	sp[1696],r8
80007274:	8f 1a       	st.w	r7[0x4],r10
80007276:	fa f8 06 9c 	ld.w	r8,sp[1692]
8000727a:	8f 09       	st.w	r7[0x0],r9
8000727c:	2f f8       	sub	r8,-1
8000727e:	fb 48 06 9c 	st.w	sp[1692],r8
80007282:	58 78       	cp.w	r8,7
80007284:	e0 89 00 05 	brgt	8000728e <_vfprintf_r+0x1d62>
80007288:	ee ca ff f8 	sub	r10,r7,-8
8000728c:	c0 a8       	rjmp	800072a0 <_vfprintf_r+0x1d74>
8000728e:	fa ca f9 68 	sub	r10,sp,-1688
80007292:	40 4b       	lddsp	r11,sp[0x10]
80007294:	40 5c       	lddsp	r12,sp[0x14]
80007296:	fe b0 f1 3d 	rcall	80005510 <__sprint_r>
8000729a:	c6 f1       	brne	80007378 <_vfprintf_r+0x1e4c>
8000729c:	fa ca f9 d0 	sub	r10,sp,-1584
800072a0:	40 99       	lddsp	r9,sp[0x24]
800072a2:	ed b9 00 02 	bld	r9,0x2
800072a6:	c4 21       	brne	8000732a <_vfprintf_r+0x1dfe>
800072a8:	40 b6       	lddsp	r6,sp[0x2c]
800072aa:	41 18       	lddsp	r8,sp[0x44]
800072ac:	10 16       	sub	r6,r8
800072ae:	58 06       	cp.w	r6,0
800072b0:	e0 89 00 1c 	brgt	800072e8 <_vfprintf_r+0x1dbc>
800072b4:	c3 b8       	rjmp	8000732a <_vfprintf_r+0x1dfe>
800072b6:	2f 08       	sub	r8,-16
800072b8:	95 01       	st.w	r10[0x0],r1
800072ba:	fb 48 06 a0 	st.w	sp[1696],r8
800072be:	95 12       	st.w	r10[0x4],r2
800072c0:	f6 c8 ff ff 	sub	r8,r11,-1
800072c4:	fb 48 06 9c 	st.w	sp[1692],r8
800072c8:	58 78       	cp.w	r8,7
800072ca:	e0 89 00 04 	brgt	800072d2 <_vfprintf_r+0x1da6>
800072ce:	2f 8a       	sub	r10,-8
800072d0:	c0 88       	rjmp	800072e0 <_vfprintf_r+0x1db4>
800072d2:	06 9a       	mov	r10,r3
800072d4:	40 4b       	lddsp	r11,sp[0x10]
800072d6:	40 5c       	lddsp	r12,sp[0x14]
800072d8:	fe b0 f1 1c 	rcall	80005510 <__sprint_r>
800072dc:	c4 e1       	brne	80007378 <_vfprintf_r+0x1e4c>
800072de:	0e 9a       	mov	r10,r7
800072e0:	21 06       	sub	r6,16
800072e2:	c0 98       	rjmp	800072f4 <_vfprintf_r+0x1dc8>
800072e4:	80 00       	ld.sh	r0,r0[0x0]
800072e6:	a8 c8       	st.b	r4[0x4],r8
800072e8:	4a a1       	lddpc	r1,80007390 <_vfprintf_r+0x1e64>
800072ea:	31 02       	mov	r2,16
800072ec:	fa c3 f9 68 	sub	r3,sp,-1688
800072f0:	fa c7 f9 d0 	sub	r7,sp,-1584
800072f4:	fa f8 06 a0 	ld.w	r8,sp[1696]
800072f8:	fa fb 06 9c 	ld.w	r11,sp[1692]
800072fc:	4a 59       	lddpc	r9,80007390 <_vfprintf_r+0x1e64>
800072fe:	59 06       	cp.w	r6,16
80007300:	fe 99 ff db 	brgt	800072b6 <_vfprintf_r+0x1d8a>
80007304:	0c 08       	add	r8,r6
80007306:	95 09       	st.w	r10[0x0],r9
80007308:	fb 48 06 a0 	st.w	sp[1696],r8
8000730c:	95 16       	st.w	r10[0x4],r6
8000730e:	f6 c8 ff ff 	sub	r8,r11,-1
80007312:	fb 48 06 9c 	st.w	sp[1692],r8
80007316:	58 78       	cp.w	r8,7
80007318:	e0 8a 00 09 	brle	8000732a <_vfprintf_r+0x1dfe>
8000731c:	fa ca f9 68 	sub	r10,sp,-1688
80007320:	40 4b       	lddsp	r11,sp[0x10]
80007322:	40 5c       	lddsp	r12,sp[0x14]
80007324:	fe b0 f0 f6 	rcall	80005510 <__sprint_r>
80007328:	c2 81       	brne	80007378 <_vfprintf_r+0x1e4c>
8000732a:	40 a9       	lddsp	r9,sp[0x28]
8000732c:	41 1b       	lddsp	r11,sp[0x44]
8000732e:	40 ba       	lddsp	r10,sp[0x2c]
80007330:	f6 0a 0c 48 	max	r8,r11,r10
80007334:	10 09       	add	r9,r8
80007336:	50 a9       	stdsp	sp[0x28],r9
80007338:	fa f8 06 a0 	ld.w	r8,sp[1696]
8000733c:	58 08       	cp.w	r8,0
8000733e:	c0 80       	breq	8000734e <_vfprintf_r+0x1e22>
80007340:	fa ca f9 68 	sub	r10,sp,-1688
80007344:	40 4b       	lddsp	r11,sp[0x10]
80007346:	40 5c       	lddsp	r12,sp[0x14]
80007348:	fe b0 f0 e4 	rcall	80005510 <__sprint_r>
8000734c:	c1 61       	brne	80007378 <_vfprintf_r+0x1e4c>
8000734e:	30 08       	mov	r8,0
80007350:	fa c1 f9 d0 	sub	r1,sp,-1584
80007354:	fb 48 06 9c 	st.w	sp[1692],r8
80007358:	fe 9f f1 82 	bral	8000565c <_vfprintf_r+0x130>
8000735c:	fa f8 06 a0 	ld.w	r8,sp[1696]
80007360:	58 08       	cp.w	r8,0
80007362:	c0 80       	breq	80007372 <_vfprintf_r+0x1e46>
80007364:	40 5c       	lddsp	r12,sp[0x14]
80007366:	fa ca f9 68 	sub	r10,sp,-1688
8000736a:	40 4b       	lddsp	r11,sp[0x10]
8000736c:	fe b0 f0 d2 	rcall	80005510 <__sprint_r>
80007370:	c0 41       	brne	80007378 <_vfprintf_r+0x1e4c>
80007372:	30 08       	mov	r8,0
80007374:	fb 48 06 9c 	st.w	sp[1692],r8
80007378:	40 4b       	lddsp	r11,sp[0x10]
8000737a:	96 68       	ld.sh	r8,r11[0xc]
8000737c:	ed b8 00 06 	bld	r8,0x6
80007380:	c0 31       	brne	80007386 <_vfprintf_r+0x1e5a>
80007382:	3f fa       	mov	r10,-1
80007384:	50 aa       	stdsp	sp[0x28],r10
80007386:	40 ac       	lddsp	r12,sp[0x28]
80007388:	fe 3d f9 34 	sub	sp,-1740
8000738c:	d8 32       	popm	r0-r7,pc
8000738e:	d7 03       	nop
80007390:	80 00       	ld.sh	r0,r0[0x0]
80007392:	a7 f4       	*unknown*

80007394 <_write_r>:
80007394:	d4 21       	pushm	r4-r7,lr
80007396:	16 98       	mov	r8,r11
80007398:	18 96       	mov	r6,r12
8000739a:	10 9c       	mov	r12,r8
8000739c:	30 08       	mov	r8,0
8000739e:	14 9b       	mov	r11,r10
800073a0:	48 67       	lddpc	r7,800073b8 <_write_r+0x24>
800073a2:	12 9a       	mov	r10,r9
800073a4:	8f 08       	st.w	r7[0x0],r8
800073a6:	fe b0 e6 91 	rcall	800040c8 <_write>
800073aa:	5b fc       	cp.w	r12,-1
800073ac:	c0 51       	brne	800073b6 <_write_r+0x22>
800073ae:	6e 08       	ld.w	r8,r7[0x0]
800073b0:	58 08       	cp.w	r8,0
800073b2:	ed f8 1a 03 	st.wne	r6[0xc],r8
800073b6:	d8 22       	popm	r4-r7,pc
800073b8:	00 00       	add	r0,r0
800073ba:	07 48       	ld.w	r8,--r3

800073bc <__swsetup_r>:
800073bc:	d4 21       	pushm	r4-r7,lr
800073be:	4b 48       	lddpc	r8,8000748c <__swsetup_r+0xd0>
800073c0:	18 96       	mov	r6,r12
800073c2:	16 97       	mov	r7,r11
800073c4:	70 0c       	ld.w	r12,r8[0x0]
800073c6:	58 0c       	cp.w	r12,0
800073c8:	c0 60       	breq	800073d4 <__swsetup_r+0x18>
800073ca:	78 68       	ld.w	r8,r12[0x18]
800073cc:	58 08       	cp.w	r8,0
800073ce:	c0 31       	brne	800073d4 <__swsetup_r+0x18>
800073d0:	fe b0 eb 10 	rcall	800049f0 <__sinit>
800073d4:	4a f8       	lddpc	r8,80007490 <__swsetup_r+0xd4>
800073d6:	10 37       	cp.w	r7,r8
800073d8:	c0 51       	brne	800073e2 <__swsetup_r+0x26>
800073da:	4a d8       	lddpc	r8,8000748c <__swsetup_r+0xd0>
800073dc:	70 08       	ld.w	r8,r8[0x0]
800073de:	70 07       	ld.w	r7,r8[0x0]
800073e0:	c0 e8       	rjmp	800073fc <__swsetup_r+0x40>
800073e2:	4a d8       	lddpc	r8,80007494 <__swsetup_r+0xd8>
800073e4:	10 37       	cp.w	r7,r8
800073e6:	c0 51       	brne	800073f0 <__swsetup_r+0x34>
800073e8:	4a 98       	lddpc	r8,8000748c <__swsetup_r+0xd0>
800073ea:	70 08       	ld.w	r8,r8[0x0]
800073ec:	70 17       	ld.w	r7,r8[0x4]
800073ee:	c0 78       	rjmp	800073fc <__swsetup_r+0x40>
800073f0:	4a a8       	lddpc	r8,80007498 <__swsetup_r+0xdc>
800073f2:	10 37       	cp.w	r7,r8
800073f4:	c0 41       	brne	800073fc <__swsetup_r+0x40>
800073f6:	4a 68       	lddpc	r8,8000748c <__swsetup_r+0xd0>
800073f8:	70 08       	ld.w	r8,r8[0x0]
800073fa:	70 27       	ld.w	r7,r8[0x8]
800073fc:	8e 69       	ld.sh	r9,r7[0xc]
800073fe:	ed b9 00 03 	bld	r9,0x3
80007402:	c1 e0       	breq	8000743e <__swsetup_r+0x82>
80007404:	ed b9 00 04 	bld	r9,0x4
80007408:	c4 01       	brne	80007488 <__swsetup_r+0xcc>
8000740a:	ed b9 00 02 	bld	r9,0x2
8000740e:	c1 51       	brne	80007438 <__swsetup_r+0x7c>
80007410:	6e db       	ld.w	r11,r7[0x34]
80007412:	58 0b       	cp.w	r11,0
80007414:	c0 a0       	breq	80007428 <__swsetup_r+0x6c>
80007416:	ee c8 ff bc 	sub	r8,r7,-68
8000741a:	10 3b       	cp.w	r11,r8
8000741c:	c0 40       	breq	80007424 <__swsetup_r+0x68>
8000741e:	0c 9c       	mov	r12,r6
80007420:	e0 a0 08 40 	rcall	800084a0 <_free_r>
80007424:	30 08       	mov	r8,0
80007426:	8f d8       	st.w	r7[0x34],r8
80007428:	8e 68       	ld.sh	r8,r7[0xc]
8000742a:	e0 18 ff db 	andl	r8,0xffdb
8000742e:	ae 68       	st.h	r7[0xc],r8
80007430:	30 08       	mov	r8,0
80007432:	8f 18       	st.w	r7[0x4],r8
80007434:	6e 48       	ld.w	r8,r7[0x10]
80007436:	8f 08       	st.w	r7[0x0],r8
80007438:	8e 68       	ld.sh	r8,r7[0xc]
8000743a:	a3 b8       	sbr	r8,0x3
8000743c:	ae 68       	st.h	r7[0xc],r8
8000743e:	6e 48       	ld.w	r8,r7[0x10]
80007440:	58 08       	cp.w	r8,0
80007442:	c0 b1       	brne	80007458 <__swsetup_r+0x9c>
80007444:	8e 68       	ld.sh	r8,r7[0xc]
80007446:	e2 18 02 80 	andl	r8,0x280,COH
8000744a:	e0 48 02 00 	cp.w	r8,512
8000744e:	c0 50       	breq	80007458 <__swsetup_r+0x9c>
80007450:	0c 9c       	mov	r12,r6
80007452:	0e 9b       	mov	r11,r7
80007454:	e0 a0 0a 4c 	rcall	800088ec <__smakebuf_r>
80007458:	8e 68       	ld.sh	r8,r7[0xc]
8000745a:	f3 d8 c0 01 	bfextu	r9,r8,0x0,0x1
8000745e:	c0 70       	breq	8000746c <__swsetup_r+0xb0>
80007460:	30 08       	mov	r8,0
80007462:	8f 28       	st.w	r7[0x8],r8
80007464:	6e 58       	ld.w	r8,r7[0x14]
80007466:	5c 38       	neg	r8
80007468:	8f 68       	st.w	r7[0x18],r8
8000746a:	c0 88       	rjmp	8000747a <__swsetup_r+0xbe>
8000746c:	ed b8 00 01 	bld	r8,0x1
80007470:	f2 08 17 00 	moveq	r8,r9
80007474:	ef f8 10 05 	ld.wne	r8,r7[0x14]
80007478:	8f 28       	st.w	r7[0x8],r8
8000747a:	6e 48       	ld.w	r8,r7[0x10]
8000747c:	58 08       	cp.w	r8,0
8000747e:	c0 61       	brne	8000748a <__swsetup_r+0xce>
80007480:	8e 68       	ld.sh	r8,r7[0xc]
80007482:	ed b8 00 07 	bld	r8,0x7
80007486:	c0 21       	brne	8000748a <__swsetup_r+0xce>
80007488:	dc 2a       	popm	r4-r7,pc,r12=-1
8000748a:	d8 2a       	popm	r4-r7,pc,r12=0
8000748c:	00 00       	add	r0,r0
8000748e:	01 28       	ld.uh	r8,r0++
80007490:	80 00       	ld.sh	r0,r0[0x0]
80007492:	a5 80       	lsr	r0,0x4
80007494:	80 00       	ld.sh	r0,r0[0x0]
80007496:	a5 a0       	sbr	r0,0x4
80007498:	80 00       	ld.sh	r0,r0[0x0]
8000749a:	a5 c0       	cbr	r0,0x4

8000749c <__register_exitproc>:
8000749c:	d4 31       	pushm	r0-r7,lr
8000749e:	4a 98       	lddpc	r8,80007540 <__register_exitproc+0xa4>
800074a0:	70 06       	ld.w	r6,r8[0x0]
800074a2:	6d 27       	ld.w	r7,r6[0x48]
800074a4:	58 07       	cp.w	r7,0
800074a6:	f9 b8 00 4c 	moveq	r8,76
800074aa:	ed d8 e0 07 	addeq	r7,r6,r8
800074ae:	ed f7 0a 12 	st.weq	r6[0x48],r7
800074b2:	18 95       	mov	r5,r12
800074b4:	16 92       	mov	r2,r11
800074b6:	14 94       	mov	r4,r10
800074b8:	12 93       	mov	r3,r9
800074ba:	6e 18       	ld.w	r8,r7[0x4]
800074bc:	59 f8       	cp.w	r8,31
800074be:	e0 8a 00 0e 	brle	800074da <__register_exitproc+0x3e>
800074c2:	e0 6c 00 8c 	mov	r12,140
800074c6:	fe b0 eb 37 	rcall	80004b34 <malloc>
800074ca:	18 97       	mov	r7,r12
800074cc:	c3 80       	breq	8000753c <__register_exitproc+0xa0>
800074ce:	6d 28       	ld.w	r8,r6[0x48]
800074d0:	99 08       	st.w	r12[0x0],r8
800074d2:	ed 4c 00 48 	st.w	r6[72],r12
800074d6:	30 08       	mov	r8,0
800074d8:	99 18       	st.w	r12[0x4],r8
800074da:	58 05       	cp.w	r5,0
800074dc:	c2 70       	breq	8000752a <__register_exitproc+0x8e>
800074de:	ee fc 00 88 	ld.w	r12,r7[136]
800074e2:	58 0c       	cp.w	r12,0
800074e4:	c0 d1       	brne	800074fe <__register_exitproc+0x62>
800074e6:	e0 6c 01 08 	mov	r12,264
800074ea:	fe b0 eb 25 	rcall	80004b34 <malloc>
800074ee:	c2 70       	breq	8000753c <__register_exitproc+0xa0>
800074f0:	30 08       	mov	r8,0
800074f2:	ef 4c 00 88 	st.w	r7[136],r12
800074f6:	f9 48 01 04 	st.w	r12[260],r8
800074fa:	f9 48 01 00 	st.w	r12[256],r8
800074fe:	6e 1a       	ld.w	r10,r7[0x4]
80007500:	f4 c8 ff e0 	sub	r8,r10,-32
80007504:	30 19       	mov	r9,1
80007506:	f8 08 09 23 	st.w	r12[r8<<0x2],r3
8000750a:	f2 0a 09 49 	lsl	r9,r9,r10
8000750e:	f8 f8 01 00 	ld.w	r8,r12[256]
80007512:	f8 0a 09 24 	st.w	r12[r10<<0x2],r4
80007516:	12 48       	or	r8,r9
80007518:	f9 48 01 00 	st.w	r12[256],r8
8000751c:	58 25       	cp.w	r5,2
8000751e:	f9 f8 00 41 	ld.weq	r8,r12[0x104]
80007522:	f1 d9 e0 38 	oreq	r8,r8,r9
80007526:	f9 f8 0a 41 	st.weq	r12[0x104],r8
8000752a:	6e 18       	ld.w	r8,r7[0x4]
8000752c:	30 0c       	mov	r12,0
8000752e:	f0 c9 ff ff 	sub	r9,r8,-1
80007532:	2f e8       	sub	r8,-2
80007534:	8f 19       	st.w	r7[0x4],r9
80007536:	ee 08 09 22 	st.w	r7[r8<<0x2],r2
8000753a:	d8 32       	popm	r0-r7,pc
8000753c:	dc 3a       	popm	r0-r7,pc,r12=-1
8000753e:	d7 03       	nop
80007540:	80 00       	ld.sh	r0,r0[0x0]
80007542:	a5 e4       	*unknown*

80007544 <__call_exitprocs>:
80007544:	d4 31       	pushm	r0-r7,lr
80007546:	20 3d       	sub	sp,12
80007548:	4b 38       	lddpc	r8,80007614 <__call_exitprocs+0xd0>
8000754a:	50 0c       	stdsp	sp[0x0],r12
8000754c:	70 08       	ld.w	r8,r8[0x0]
8000754e:	16 90       	mov	r0,r11
80007550:	50 18       	stdsp	sp[0x4],r8
80007552:	2b 88       	sub	r8,-72
80007554:	50 28       	stdsp	sp[0x8],r8
80007556:	40 18       	lddsp	r8,sp[0x4]
80007558:	40 22       	lddsp	r2,sp[0x8]
8000755a:	71 27       	ld.w	r7,r8[0x48]
8000755c:	c5 78       	rjmp	8000760a <__call_exitprocs+0xc6>
8000755e:	6e 19       	ld.w	r9,r7[0x4]
80007560:	ee f5 00 88 	ld.w	r5,r7[136]
80007564:	f2 c8 ff ff 	sub	r8,r9,-1
80007568:	f2 c6 00 01 	sub	r6,r9,1
8000756c:	ee 08 00 23 	add	r3,r7,r8<<0x2
80007570:	ea 06 00 24 	add	r4,r5,r6<<0x2
80007574:	c3 68       	rjmp	800075e0 <__call_exitprocs+0x9c>
80007576:	58 00       	cp.w	r0,0
80007578:	c0 70       	breq	80007586 <__call_exitprocs+0x42>
8000757a:	58 05       	cp.w	r5,0
8000757c:	c2 f0       	breq	800075da <__call_exitprocs+0x96>
8000757e:	e8 f8 00 80 	ld.w	r8,r4[128]
80007582:	00 38       	cp.w	r8,r0
80007584:	c2 b1       	brne	800075da <__call_exitprocs+0x96>
80007586:	6e 18       	ld.w	r8,r7[0x4]
80007588:	66 0a       	ld.w	r10,r3[0x0]
8000758a:	20 18       	sub	r8,1
8000758c:	10 36       	cp.w	r6,r8
8000758e:	ef f6 0a 01 	st.weq	r7[0x4],r6
80007592:	f9 b8 01 00 	movne	r8,0
80007596:	e7 f8 1a 00 	st.wne	r3[0x0],r8
8000759a:	58 0a       	cp.w	r10,0
8000759c:	c1 f0       	breq	800075da <__call_exitprocs+0x96>
8000759e:	6e 11       	ld.w	r1,r7[0x4]
800075a0:	58 05       	cp.w	r5,0
800075a2:	c0 90       	breq	800075b4 <__call_exitprocs+0x70>
800075a4:	30 18       	mov	r8,1
800075a6:	f0 06 09 49 	lsl	r9,r8,r6
800075aa:	ea f8 01 00 	ld.w	r8,r5[256]
800075ae:	f3 e8 00 08 	and	r8,r9,r8
800075b2:	c0 31       	brne	800075b8 <__call_exitprocs+0x74>
800075b4:	5d 1a       	icall	r10
800075b6:	c0 c8       	rjmp	800075ce <__call_exitprocs+0x8a>
800075b8:	ea f8 01 04 	ld.w	r8,r5[260]
800075bc:	68 0c       	ld.w	r12,r4[0x0]
800075be:	f3 e8 00 08 	and	r8,r9,r8
800075c2:	c0 51       	brne	800075cc <__call_exitprocs+0x88>
800075c4:	18 9b       	mov	r11,r12
800075c6:	40 0c       	lddsp	r12,sp[0x0]
800075c8:	5d 1a       	icall	r10
800075ca:	c0 28       	rjmp	800075ce <__call_exitprocs+0x8a>
800075cc:	5d 1a       	icall	r10
800075ce:	6e 18       	ld.w	r8,r7[0x4]
800075d0:	10 31       	cp.w	r1,r8
800075d2:	cc 21       	brne	80007556 <__call_exitprocs+0x12>
800075d4:	64 08       	ld.w	r8,r2[0x0]
800075d6:	0e 38       	cp.w	r8,r7
800075d8:	cb f1       	brne	80007556 <__call_exitprocs+0x12>
800075da:	20 16       	sub	r6,1
800075dc:	20 44       	sub	r4,4
800075de:	20 43       	sub	r3,4
800075e0:	58 06       	cp.w	r6,0
800075e2:	cc a4       	brge	80007576 <__call_exitprocs+0x32>
800075e4:	6e 18       	ld.w	r8,r7[0x4]
800075e6:	58 08       	cp.w	r8,0
800075e8:	c0 f1       	brne	80007606 <__call_exitprocs+0xc2>
800075ea:	6e 08       	ld.w	r8,r7[0x0]
800075ec:	58 08       	cp.w	r8,0
800075ee:	c0 c0       	breq	80007606 <__call_exitprocs+0xc2>
800075f0:	85 08       	st.w	r2[0x0],r8
800075f2:	58 05       	cp.w	r5,0
800075f4:	c0 40       	breq	800075fc <__call_exitprocs+0xb8>
800075f6:	0a 9c       	mov	r12,r5
800075f8:	fe b0 ea 94 	rcall	80004b20 <free>
800075fc:	0e 9c       	mov	r12,r7
800075fe:	fe b0 ea 91 	rcall	80004b20 <free>
80007602:	64 07       	ld.w	r7,r2[0x0]
80007604:	c0 38       	rjmp	8000760a <__call_exitprocs+0xc6>
80007606:	0e 92       	mov	r2,r7
80007608:	6e 07       	ld.w	r7,r7[0x0]
8000760a:	58 07       	cp.w	r7,0
8000760c:	ca 91       	brne	8000755e <__call_exitprocs+0x1a>
8000760e:	2f dd       	sub	sp,-12
80007610:	d8 32       	popm	r0-r7,pc
80007612:	d7 03       	nop
80007614:	80 00       	ld.sh	r0,r0[0x0]
80007616:	a5 e4       	*unknown*

80007618 <_close_r>:
80007618:	d4 21       	pushm	r4-r7,lr
8000761a:	30 08       	mov	r8,0
8000761c:	18 96       	mov	r6,r12
8000761e:	48 77       	lddpc	r7,80007638 <_close_r+0x20>
80007620:	16 9c       	mov	r12,r11
80007622:	8f 08       	st.w	r7[0x0],r8
80007624:	fe b0 e5 46 	rcall	800040b0 <_close>
80007628:	5b fc       	cp.w	r12,-1
8000762a:	c0 51       	brne	80007634 <_close_r+0x1c>
8000762c:	6e 08       	ld.w	r8,r7[0x0]
8000762e:	58 08       	cp.w	r8,0
80007630:	ed f8 1a 03 	st.wne	r6[0xc],r8
80007634:	d8 22       	popm	r4-r7,pc
80007636:	d7 03       	nop
80007638:	00 00       	add	r0,r0
8000763a:	07 48       	ld.w	r8,--r3

8000763c <quorem>:
8000763c:	d4 31       	pushm	r0-r7,lr
8000763e:	20 2d       	sub	sp,8
80007640:	16 93       	mov	r3,r11
80007642:	18 95       	mov	r5,r12
80007644:	78 48       	ld.w	r8,r12[0x10]
80007646:	76 4b       	ld.w	r11,r11[0x10]
80007648:	16 38       	cp.w	r8,r11
8000764a:	c0 34       	brge	80007650 <quorem+0x14>
8000764c:	30 0c       	mov	r12,0
8000764e:	c8 68       	rjmp	8000775a <quorem+0x11e>
80007650:	f6 ca ff fc 	sub	r10,r11,-4
80007654:	f8 0a 03 2c 	ld.w	r12,r12[r10<<0x2]
80007658:	e6 0a 03 29 	ld.w	r9,r3[r10<<0x2]
8000765c:	50 0c       	stdsp	sp[0x0],r12
8000765e:	e6 0a 00 2a 	add	r10,r3,r10<<0x2
80007662:	50 1a       	stdsp	sp[0x4],r10
80007664:	2f f9       	sub	r9,-1
80007666:	e6 c1 ff ec 	sub	r1,r3,-20
8000766a:	f8 09 0d 08 	divu	r8,r12,r9
8000766e:	f6 c6 00 01 	sub	r6,r11,1
80007672:	ea c0 ff ec 	sub	r0,r5,-20
80007676:	10 92       	mov	r2,r8
80007678:	58 08       	cp.w	r8,0
8000767a:	c3 d0       	breq	800076f4 <quorem+0xb8>
8000767c:	30 07       	mov	r7,0
8000767e:	00 9e       	mov	lr,r0
80007680:	02 94       	mov	r4,r1
80007682:	0e 9c       	mov	r12,r7
80007684:	09 08       	ld.w	r8,r4++
80007686:	f0 0a 16 10 	lsr	r10,r8,0x10
8000768a:	e4 0a 02 4a 	mul	r10,r2,r10
8000768e:	7c 09       	ld.w	r9,lr[0x0]
80007690:	f1 d8 c0 10 	bfextu	r8,r8,0x0,0x10
80007694:	f2 0b 16 10 	lsr	r11,r9,0x10
80007698:	e4 08 02 48 	mul	r8,r2,r8
8000769c:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
800076a0:	f8 08 00 08 	add	r8,r12,r8
800076a4:	ee 09 00 09 	add	r9,r7,r9
800076a8:	f9 d8 c0 10 	bfextu	r12,r8,0x0,0x10
800076ac:	b1 88       	lsr	r8,0x10
800076ae:	18 19       	sub	r9,r12
800076b0:	14 08       	add	r8,r10
800076b2:	bc 19       	st.h	lr[0x2],r9
800076b4:	f5 d8 c0 10 	bfextu	r10,r8,0x0,0x10
800076b8:	b1 49       	asr	r9,0x10
800076ba:	14 1b       	sub	r11,r10
800076bc:	12 0b       	add	r11,r9
800076be:	bc 0b       	st.h	lr[0x0],r11
800076c0:	f0 0c 16 10 	lsr	r12,r8,0x10
800076c4:	2f ce       	sub	lr,-4
800076c6:	f6 07 14 10 	asr	r7,r11,0x10
800076ca:	40 18       	lddsp	r8,sp[0x4]
800076cc:	10 34       	cp.w	r4,r8
800076ce:	fe 98 ff db 	brls	80007684 <quorem+0x48>
800076d2:	40 0c       	lddsp	r12,sp[0x0]
800076d4:	58 0c       	cp.w	r12,0
800076d6:	c0 f1       	brne	800076f4 <quorem+0xb8>
800076d8:	ec c8 ff fb 	sub	r8,r6,-5
800076dc:	ea 08 00 29 	add	r9,r5,r8<<0x2
800076e0:	c0 28       	rjmp	800076e4 <quorem+0xa8>
800076e2:	20 16       	sub	r6,1
800076e4:	20 49       	sub	r9,4
800076e6:	00 39       	cp.w	r9,r0
800076e8:	e0 88 00 05 	brls	800076f2 <quorem+0xb6>
800076ec:	72 08       	ld.w	r8,r9[0x0]
800076ee:	58 08       	cp.w	r8,0
800076f0:	cf 90       	breq	800076e2 <quorem+0xa6>
800076f2:	8b 46       	st.w	r5[0x10],r6
800076f4:	06 9b       	mov	r11,r3
800076f6:	0a 9c       	mov	r12,r5
800076f8:	e0 a0 0a a1 	rcall	80008c3a <__mcmp>
800076fc:	c2 e5       	brlt	80007758 <quorem+0x11c>
800076fe:	2f f2       	sub	r2,-1
80007700:	00 9c       	mov	r12,r0
80007702:	30 0e       	mov	lr,0
80007704:	78 08       	ld.w	r8,r12[0x0]
80007706:	03 09       	ld.w	r9,r1++
80007708:	f0 0b 16 10 	lsr	r11,r8,0x10
8000770c:	f2 0a 16 10 	lsr	r10,r9,0x10
80007710:	f1 d8 c0 10 	bfextu	r8,r8,0x0,0x10
80007714:	14 1b       	sub	r11,r10
80007716:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
8000771a:	12 18       	sub	r8,r9
8000771c:	1c 08       	add	r8,lr
8000771e:	b8 18       	st.h	r12[0x2],r8
80007720:	b1 48       	asr	r8,0x10
80007722:	10 0b       	add	r11,r8
80007724:	b8 0b       	st.h	r12[0x0],r11
80007726:	f6 0e 14 10 	asr	lr,r11,0x10
8000772a:	2f cc       	sub	r12,-4
8000772c:	40 18       	lddsp	r8,sp[0x4]
8000772e:	10 31       	cp.w	r1,r8
80007730:	fe 98 ff ea 	brls	80007704 <quorem+0xc8>
80007734:	ec c9 ff fb 	sub	r9,r6,-5
80007738:	ea 09 03 28 	ld.w	r8,r5[r9<<0x2]
8000773c:	58 08       	cp.w	r8,0
8000773e:	c0 d1       	brne	80007758 <quorem+0x11c>
80007740:	ea 09 00 29 	add	r9,r5,r9<<0x2
80007744:	c0 28       	rjmp	80007748 <quorem+0x10c>
80007746:	20 16       	sub	r6,1
80007748:	20 49       	sub	r9,4
8000774a:	00 39       	cp.w	r9,r0
8000774c:	e0 88 00 05 	brls	80007756 <quorem+0x11a>
80007750:	72 08       	ld.w	r8,r9[0x0]
80007752:	58 08       	cp.w	r8,0
80007754:	cf 90       	breq	80007746 <quorem+0x10a>
80007756:	8b 46       	st.w	r5[0x10],r6
80007758:	04 9c       	mov	r12,r2
8000775a:	2f ed       	sub	sp,-8
8000775c:	d8 32       	popm	r0-r7,pc
8000775e:	d7 03       	nop

80007760 <_dtoa_r>:
80007760:	d4 31       	pushm	r0-r7,lr
80007762:	21 9d       	sub	sp,100
80007764:	fa ce ff 78 	sub	lr,sp,-136
80007768:	50 5c       	stdsp	sp[0x14],r12
8000776a:	50 49       	stdsp	sp[0x10],r9
8000776c:	7c 2c       	ld.w	r12,lr[0x8]
8000776e:	14 90       	mov	r0,r10
80007770:	50 38       	stdsp	sp[0xc],r8
80007772:	7c 0a       	ld.w	r10,lr[0x0]
80007774:	50 1c       	stdsp	sp[0x4],r12
80007776:	50 2a       	stdsp	sp[0x8],r10
80007778:	40 59       	lddsp	r9,sp[0x14]
8000777a:	16 91       	mov	r1,r11
8000777c:	7c 16       	ld.w	r6,lr[0x4]
8000777e:	72 97       	ld.w	r7,r9[0x24]
80007780:	58 07       	cp.w	r7,0
80007782:	c0 a1       	brne	80007796 <_dtoa_r+0x36>
80007784:	31 0c       	mov	r12,16
80007786:	fe b0 e9 d7 	rcall	80004b34 <malloc>
8000778a:	40 58       	lddsp	r8,sp[0x14]
8000778c:	99 37       	st.w	r12[0xc],r7
8000778e:	91 9c       	st.w	r8[0x24],r12
80007790:	99 17       	st.w	r12[0x4],r7
80007792:	99 27       	st.w	r12[0x8],r7
80007794:	99 07       	st.w	r12[0x0],r7
80007796:	40 5c       	lddsp	r12,sp[0x14]
80007798:	78 99       	ld.w	r9,r12[0x24]
8000779a:	72 0a       	ld.w	r10,r9[0x0]
8000779c:	58 0a       	cp.w	r10,0
8000779e:	c0 f0       	breq	800077bc <_dtoa_r+0x5c>
800077a0:	72 18       	ld.w	r8,r9[0x4]
800077a2:	95 18       	st.w	r10[0x4],r8
800077a4:	30 18       	mov	r8,1
800077a6:	72 19       	ld.w	r9,r9[0x4]
800077a8:	f0 09 09 48 	lsl	r8,r8,r9
800077ac:	14 9b       	mov	r11,r10
800077ae:	95 28       	st.w	r10[0x8],r8
800077b0:	e0 a0 0a 62 	rcall	80008c74 <_Bfree>
800077b4:	40 5a       	lddsp	r10,sp[0x14]
800077b6:	30 08       	mov	r8,0
800077b8:	74 99       	ld.w	r9,r10[0x24]
800077ba:	93 08       	st.w	r9[0x0],r8
800077bc:	58 01       	cp.w	r1,0
800077be:	c0 54       	brge	800077c8 <_dtoa_r+0x68>
800077c0:	e3 d1 c0 1f 	bfextu	r1,r1,0x0,0x1f
800077c4:	30 18       	mov	r8,1
800077c6:	c0 28       	rjmp	800077ca <_dtoa_r+0x6a>
800077c8:	30 08       	mov	r8,0
800077ca:	8d 08       	st.w	r6[0x0],r8
800077cc:	02 97       	mov	r7,r1
800077ce:	02 98       	mov	r8,r1
800077d0:	fc 19 7f f0 	movh	r9,0x7ff0
800077d4:	e6 18 7f f0 	andh	r8,0x7ff0,COH
800077d8:	12 38       	cp.w	r8,r9
800077da:	c1 e1       	brne	80007816 <_dtoa_r+0xb6>
800077dc:	e0 68 27 0f 	mov	r8,9999
800077e0:	40 2c       	lddsp	r12,sp[0x8]
800077e2:	99 08       	st.w	r12[0x0],r8
800077e4:	58 00       	cp.w	r0,0
800077e6:	c0 61       	brne	800077f2 <_dtoa_r+0x92>
800077e8:	f1 d1 c0 14 	bfextu	r8,r1,0x0,0x14
800077ec:	c0 31       	brne	800077f2 <_dtoa_r+0x92>
800077ee:	4b 0c       	lddpc	r12,800078ac <_dtoa_r+0x14c>
800077f0:	c0 28       	rjmp	800077f4 <_dtoa_r+0x94>
800077f2:	4b 0c       	lddpc	r12,800078b0 <_dtoa_r+0x150>
800077f4:	40 1a       	lddsp	r10,sp[0x4]
800077f6:	58 0a       	cp.w	r10,0
800077f8:	e0 80 05 a0 	breq	80008338 <_dtoa_r+0xbd8>
800077fc:	f8 ca ff fd 	sub	r10,r12,-3
80007800:	30 08       	mov	r8,0
80007802:	15 89       	ld.ub	r9,r10[0x0]
80007804:	f0 09 18 00 	cp.b	r9,r8
80007808:	c0 30       	breq	8000780e <_dtoa_r+0xae>
8000780a:	f8 ca ff f8 	sub	r10,r12,-8
8000780e:	40 19       	lddsp	r9,sp[0x4]
80007810:	93 0a       	st.w	r9[0x0],r10
80007812:	e0 8f 05 93 	bral	80008338 <_dtoa_r+0xbd8>
80007816:	fa e1 00 50 	st.d	sp[80],r0
8000781a:	30 08       	mov	r8,0
8000781c:	30 09       	mov	r9,0
8000781e:	00 9a       	mov	r10,r0
80007820:	02 9b       	mov	r11,r1
80007822:	e0 a0 11 72 	rcall	80009b06 <__avr32_f64_cmp_eq>
80007826:	c1 50       	breq	80007850 <_dtoa_r+0xf0>
80007828:	30 18       	mov	r8,1
8000782a:	40 2c       	lddsp	r12,sp[0x8]
8000782c:	40 1a       	lddsp	r10,sp[0x4]
8000782e:	99 08       	st.w	r12[0x0],r8
80007830:	4a 18       	lddpc	r8,800078b4 <_dtoa_r+0x154>
80007832:	58 0a       	cp.w	r10,0
80007834:	f0 0c 17 00 	moveq	r12,r8
80007838:	f0 0c 17 10 	movne	r12,r8
8000783c:	f9 b9 01 01 	movne	r9,1
80007840:	f1 d9 e1 08 	addne	r8,r8,r9
80007844:	fb f9 10 01 	ld.wne	r9,sp[0x4]
80007848:	f3 f8 1a 00 	st.wne	r9[0x0],r8
8000784c:	e0 8f 05 76 	bral	80008338 <_dtoa_r+0xbd8>
80007850:	fa c8 ff a0 	sub	r8,sp,-96
80007854:	fa c9 ff a4 	sub	r9,sp,-92
80007858:	fa ea 00 50 	ld.d	r10,sp[80]
8000785c:	40 5c       	lddsp	r12,sp[0x14]
8000785e:	e0 a0 0a 5d 	rcall	80008d18 <__d2b>
80007862:	51 0c       	stdsp	sp[0x40],r12
80007864:	f9 d1 c2 8b 	bfextu	r12,r1,0x14,0xb
80007868:	c0 d0       	breq	80007882 <_dtoa_r+0x122>
8000786a:	fa ea 00 50 	ld.d	r10,sp[80]
8000786e:	30 08       	mov	r8,0
80007870:	f8 c5 03 ff 	sub	r5,r12,1023
80007874:	50 f8       	stdsp	sp[0x3c],r8
80007876:	f1 db c0 14 	bfextu	r8,r11,0x0,0x14
8000787a:	10 9b       	mov	r11,r8
8000787c:	ea 1b 3f f0 	orh	r11,0x3ff0
80007880:	c2 a8       	rjmp	800078d4 <_dtoa_r+0x174>
80007882:	41 79       	lddsp	r9,sp[0x5c]
80007884:	41 88       	lddsp	r8,sp[0x60]
80007886:	f0 09 00 09 	add	r9,r8,r9
8000788a:	f2 ca fb ce 	sub	r10,r9,-1074
8000788e:	e0 4a 00 20 	cp.w	r10,32
80007892:	e0 8a 00 13 	brle	800078b8 <_dtoa_r+0x158>
80007896:	f2 c9 fb ee 	sub	r9,r9,-1042
8000789a:	f4 08 11 40 	rsub	r8,r10,64
8000789e:	e0 09 0a 49 	lsr	r9,r0,r9
800078a2:	e2 08 09 48 	lsl	r8,r1,r8
800078a6:	f3 e8 10 0c 	or	r12,r9,r8
800078aa:	c0 b8       	rjmp	800078c0 <_dtoa_r+0x160>
800078ac:	80 00       	ld.sh	r0,r0[0x0]
800078ae:	a9 d8       	cbr	r8,0x9
800078b0:	80 00       	ld.sh	r0,r0[0x0]
800078b2:	a9 e4       	*unknown*
800078b4:	80 00       	ld.sh	r0,r0[0x0]
800078b6:	a8 c4       	st.b	r4[0x4],r4
800078b8:	f4 08 11 20 	rsub	r8,r10,32
800078bc:	e0 08 09 4c 	lsl	r12,r0,r8
800078c0:	f4 c5 04 33 	sub	r5,r10,1075
800078c4:	e0 a0 10 a6 	rcall	80009a10 <__avr32_u32_to_f64>
800078c8:	fc 18 fe 10 	movh	r8,0xfe10
800078cc:	30 1c       	mov	r12,1
800078ce:	f0 0b 00 0b 	add	r11,r8,r11
800078d2:	50 fc       	stdsp	sp[0x3c],r12
800078d4:	30 08       	mov	r8,0
800078d6:	fc 19 3f f8 	movh	r9,0x3ff8
800078da:	e0 a0 0f 25 	rcall	80009724 <__avr32_f64_sub>
800078de:	e0 68 43 61 	mov	r8,17249
800078e2:	ea 18 63 6f 	orh	r8,0x636f
800078e6:	e0 69 87 a7 	mov	r9,34727
800078ea:	ea 19 3f d2 	orh	r9,0x3fd2
800078ee:	e0 a0 0e 27 	rcall	8000953c <__avr32_f64_mul>
800078f2:	e0 68 c8 b3 	mov	r8,51379
800078f6:	ea 18 8b 60 	orh	r8,0x8b60
800078fa:	e0 69 8a 28 	mov	r9,35368
800078fe:	ea 19 3f c6 	orh	r9,0x3fc6
80007902:	e0 a0 0f df 	rcall	800098c0 <__avr32_f64_add>
80007906:	0a 9c       	mov	r12,r5
80007908:	14 92       	mov	r2,r10
8000790a:	16 93       	mov	r3,r11
8000790c:	e0 a0 10 86 	rcall	80009a18 <__avr32_s32_to_f64>
80007910:	e0 68 79 fb 	mov	r8,31227
80007914:	ea 18 50 9f 	orh	r8,0x509f
80007918:	e0 69 44 13 	mov	r9,17427
8000791c:	ea 19 3f d3 	orh	r9,0x3fd3
80007920:	e0 a0 0e 0e 	rcall	8000953c <__avr32_f64_mul>
80007924:	14 98       	mov	r8,r10
80007926:	16 99       	mov	r9,r11
80007928:	04 9a       	mov	r10,r2
8000792a:	06 9b       	mov	r11,r3
8000792c:	e0 a0 0f ca 	rcall	800098c0 <__avr32_f64_add>
80007930:	16 97       	mov	r7,r11
80007932:	14 96       	mov	r6,r10
80007934:	0e 9b       	mov	r11,r7
80007936:	e0 a0 10 53 	rcall	800099dc <__avr32_f64_to_s32>
8000793a:	30 08       	mov	r8,0
8000793c:	50 ac       	stdsp	sp[0x28],r12
8000793e:	30 09       	mov	r9,0
80007940:	0c 9a       	mov	r10,r6
80007942:	0e 9b       	mov	r11,r7
80007944:	e0 a0 11 2f 	rcall	80009ba2 <__avr32_f64_cmp_lt>
80007948:	c1 00       	breq	80007968 <_dtoa_r+0x208>
8000794a:	40 ac       	lddsp	r12,sp[0x28]
8000794c:	e0 a0 10 66 	rcall	80009a18 <__avr32_s32_to_f64>
80007950:	14 98       	mov	r8,r10
80007952:	16 99       	mov	r9,r11
80007954:	0c 9a       	mov	r10,r6
80007956:	0e 9b       	mov	r11,r7
80007958:	e0 a0 10 d7 	rcall	80009b06 <__avr32_f64_cmp_eq>
8000795c:	fb fa 00 0a 	ld.weq	r10,sp[0x28]
80007960:	f7 ba 00 01 	subeq	r10,1
80007964:	fb fa 0a 0a 	st.weq	sp[0x28],r10
80007968:	40 a9       	lddsp	r9,sp[0x28]
8000796a:	59 69       	cp.w	r9,22
8000796c:	e0 88 00 04 	brls	80007974 <_dtoa_r+0x214>
80007970:	30 18       	mov	r8,1
80007972:	c1 18       	rjmp	80007994 <_dtoa_r+0x234>
80007974:	40 ac       	lddsp	r12,sp[0x28]
80007976:	4c 58       	lddpc	r8,80007a88 <_dtoa_r+0x328>
80007978:	fa ea 00 50 	ld.d	r10,sp[80]
8000797c:	f0 0c 02 38 	ld.d	r8,r8[r12<<0x3]
80007980:	e0 a0 11 11 	rcall	80009ba2 <__avr32_f64_cmp_lt>
80007984:	c0 41       	brne	8000798c <_dtoa_r+0x22c>
80007986:	30 0a       	mov	r10,0
80007988:	50 ba       	stdsp	sp[0x2c],r10
8000798a:	c0 68       	rjmp	80007996 <_dtoa_r+0x236>
8000798c:	40 a9       	lddsp	r9,sp[0x28]
8000798e:	30 08       	mov	r8,0
80007990:	20 19       	sub	r9,1
80007992:	50 a9       	stdsp	sp[0x28],r9
80007994:	50 b8       	stdsp	sp[0x2c],r8
80007996:	41 88       	lddsp	r8,sp[0x60]
80007998:	20 18       	sub	r8,1
8000799a:	f0 05 01 0a 	sub	r10,r8,r5
8000799e:	c0 56       	brmi	800079a8 <_dtoa_r+0x248>
800079a0:	30 0c       	mov	r12,0
800079a2:	50 da       	stdsp	sp[0x34],r10
800079a4:	50 6c       	stdsp	sp[0x18],r12
800079a6:	c0 58       	rjmp	800079b0 <_dtoa_r+0x250>
800079a8:	5c 3a       	neg	r10
800079aa:	50 6a       	stdsp	sp[0x18],r10
800079ac:	30 0a       	mov	r10,0
800079ae:	50 da       	stdsp	sp[0x34],r10
800079b0:	40 aa       	lddsp	r10,sp[0x28]
800079b2:	40 a9       	lddsp	r9,sp[0x28]
800079b4:	5c 3a       	neg	r10
800079b6:	58 09       	cp.w	r9,0
800079b8:	c0 85       	brlt	800079c8 <_dtoa_r+0x268>
800079ba:	40 d8       	lddsp	r8,sp[0x34]
800079bc:	30 0c       	mov	r12,0
800079be:	12 08       	add	r8,r9
800079c0:	50 e9       	stdsp	sp[0x38],r9
800079c2:	50 d8       	stdsp	sp[0x34],r8
800079c4:	50 7c       	stdsp	sp[0x1c],r12
800079c6:	c0 88       	rjmp	800079d6 <_dtoa_r+0x276>
800079c8:	40 69       	lddsp	r9,sp[0x18]
800079ca:	40 a8       	lddsp	r8,sp[0x28]
800079cc:	30 0c       	mov	r12,0
800079ce:	10 19       	sub	r9,r8
800079d0:	50 7a       	stdsp	sp[0x1c],r10
800079d2:	50 69       	stdsp	sp[0x18],r9
800079d4:	50 ec       	stdsp	sp[0x38],r12
800079d6:	40 4a       	lddsp	r10,sp[0x10]
800079d8:	58 9a       	cp.w	r10,9
800079da:	e0 8b 00 26 	brhi	80007a26 <_dtoa_r+0x2c6>
800079de:	58 5a       	cp.w	r10,5
800079e0:	f9 b6 0a 01 	movle	r6,1
800079e4:	fb f9 90 04 	ld.wgt	r9,sp[0x10]
800079e8:	f7 b9 09 04 	subgt	r9,4
800079ec:	fb f9 9a 04 	st.wgt	sp[0x10],r9
800079f0:	f9 b6 09 00 	movgt	r6,0
800079f4:	40 48       	lddsp	r8,sp[0x10]
800079f6:	58 28       	cp.w	r8,2
800079f8:	c2 30       	breq	80007a3e <_dtoa_r+0x2de>
800079fa:	e0 89 00 05 	brgt	80007a04 <_dtoa_r+0x2a4>
800079fe:	58 08       	cp.w	r8,0
80007a00:	c1 64       	brge	80007a2c <_dtoa_r+0x2cc>
80007a02:	c0 78       	rjmp	80007a10 <_dtoa_r+0x2b0>
80007a04:	40 4c       	lddsp	r12,sp[0x10]
80007a06:	58 4c       	cp.w	r12,4
80007a08:	c0 a0       	breq	80007a1c <_dtoa_r+0x2bc>
80007a0a:	c2 95       	brlt	80007a5c <_dtoa_r+0x2fc>
80007a0c:	58 5c       	cp.w	r12,5
80007a0e:	c0 a0       	breq	80007a22 <_dtoa_r+0x2c2>
80007a10:	3f fa       	mov	r10,-1
80007a12:	30 19       	mov	r9,1
80007a14:	50 8a       	stdsp	sp[0x20],r10
80007a16:	50 c9       	stdsp	sp[0x30],r9
80007a18:	50 9a       	stdsp	sp[0x24],r10
80007a1a:	c3 08       	rjmp	80007a7a <_dtoa_r+0x31a>
80007a1c:	30 18       	mov	r8,1
80007a1e:	50 c8       	stdsp	sp[0x30],r8
80007a20:	c1 18       	rjmp	80007a42 <_dtoa_r+0x2e2>
80007a22:	30 1c       	mov	r12,1
80007a24:	c1 d8       	rjmp	80007a5e <_dtoa_r+0x2fe>
80007a26:	30 0a       	mov	r10,0
80007a28:	30 16       	mov	r6,1
80007a2a:	50 4a       	stdsp	sp[0x10],r10
80007a2c:	3f f9       	mov	r9,-1
80007a2e:	30 08       	mov	r8,0
80007a30:	30 1c       	mov	r12,1
80007a32:	50 89       	stdsp	sp[0x20],r9
80007a34:	50 38       	stdsp	sp[0xc],r8
80007a36:	31 25       	mov	r5,18
80007a38:	50 99       	stdsp	sp[0x24],r9
80007a3a:	50 cc       	stdsp	sp[0x30],r12
80007a3c:	c1 f8       	rjmp	80007a7a <_dtoa_r+0x31a>
80007a3e:	30 0a       	mov	r10,0
80007a40:	50 ca       	stdsp	sp[0x30],r10
80007a42:	40 39       	lddsp	r9,sp[0xc]
80007a44:	58 09       	cp.w	r9,0
80007a46:	e0 89 00 07 	brgt	80007a54 <_dtoa_r+0x2f4>
80007a4a:	30 18       	mov	r8,1
80007a4c:	50 38       	stdsp	sp[0xc],r8
80007a4e:	10 95       	mov	r5,r8
80007a50:	50 88       	stdsp	sp[0x20],r8
80007a52:	c0 38       	rjmp	80007a58 <_dtoa_r+0x2f8>
80007a54:	40 35       	lddsp	r5,sp[0xc]
80007a56:	50 85       	stdsp	sp[0x20],r5
80007a58:	50 95       	stdsp	sp[0x24],r5
80007a5a:	c1 08       	rjmp	80007a7a <_dtoa_r+0x31a>
80007a5c:	30 0c       	mov	r12,0
80007a5e:	40 aa       	lddsp	r10,sp[0x28]
80007a60:	40 39       	lddsp	r9,sp[0xc]
80007a62:	50 cc       	stdsp	sp[0x30],r12
80007a64:	12 0a       	add	r10,r9
80007a66:	50 9a       	stdsp	sp[0x24],r10
80007a68:	14 95       	mov	r5,r10
80007a6a:	2f f5       	sub	r5,-1
80007a6c:	58 05       	cp.w	r5,0
80007a6e:	e0 89 00 05 	brgt	80007a78 <_dtoa_r+0x318>
80007a72:	50 85       	stdsp	sp[0x20],r5
80007a74:	30 15       	mov	r5,1
80007a76:	c0 28       	rjmp	80007a7a <_dtoa_r+0x31a>
80007a78:	50 85       	stdsp	sp[0x20],r5
80007a7a:	40 58       	lddsp	r8,sp[0x14]
80007a7c:	70 99       	ld.w	r9,r8[0x24]
80007a7e:	30 08       	mov	r8,0
80007a80:	93 18       	st.w	r9[0x4],r8
80007a82:	30 49       	mov	r9,4
80007a84:	c0 88       	rjmp	80007a94 <_dtoa_r+0x334>
80007a86:	d7 03       	nop
80007a88:	80 00       	ld.sh	r0,r0[0x0]
80007a8a:	aa 28       	st.h	r5[0x4],r8
80007a8c:	6e 18       	ld.w	r8,r7[0x4]
80007a8e:	a1 79       	lsl	r9,0x1
80007a90:	2f f8       	sub	r8,-1
80007a92:	8f 18       	st.w	r7[0x4],r8
80007a94:	40 5c       	lddsp	r12,sp[0x14]
80007a96:	f2 c8 ff ec 	sub	r8,r9,-20
80007a9a:	78 97       	ld.w	r7,r12[0x24]
80007a9c:	0a 38       	cp.w	r8,r5
80007a9e:	fe 98 ff f7 	brls	80007a8c <_dtoa_r+0x32c>
80007aa2:	6e 1b       	ld.w	r11,r7[0x4]
80007aa4:	e0 a0 09 02 	rcall	80008ca8 <_Balloc>
80007aa8:	8f 0c       	st.w	r7[0x0],r12
80007aaa:	40 5c       	lddsp	r12,sp[0x14]
80007aac:	78 99       	ld.w	r9,r12[0x24]
80007aae:	72 09       	ld.w	r9,r9[0x0]
80007ab0:	51 69       	stdsp	sp[0x58],r9
80007ab2:	40 8a       	lddsp	r10,sp[0x20]
80007ab4:	58 ea       	cp.w	r10,14
80007ab6:	5f 88       	srls	r8
80007ab8:	0c 68       	and	r8,r6
80007aba:	e0 80 01 69 	breq	80007d8c <_dtoa_r+0x62c>
80007abe:	40 aa       	lddsp	r10,sp[0x28]
80007ac0:	58 0a       	cp.w	r10,0
80007ac2:	e0 8a 00 35 	brle	80007b2c <_dtoa_r+0x3cc>
80007ac6:	f1 da c0 04 	bfextu	r8,r10,0x0,0x4
80007aca:	4c 19       	lddpc	r9,80007bcc <_dtoa_r+0x46c>
80007acc:	14 97       	mov	r7,r10
80007ace:	f2 08 02 34 	ld.d	r4,r9[r8<<0x3]
80007ad2:	a5 47       	asr	r7,0x4
80007ad4:	ed b7 00 04 	bld	r7,0x4
80007ad8:	c0 30       	breq	80007ade <_dtoa_r+0x37e>
80007ada:	30 23       	mov	r3,2
80007adc:	c0 d8       	rjmp	80007af6 <_dtoa_r+0x396>
80007ade:	ef d7 c0 04 	bfextu	r7,r7,0x0,0x4
80007ae2:	4b c8       	lddpc	r8,80007bd0 <_dtoa_r+0x470>
80007ae4:	fa ea 00 50 	ld.d	r10,sp[80]
80007ae8:	f0 e8 00 20 	ld.d	r8,r8[32]
80007aec:	30 33       	mov	r3,3
80007aee:	e0 a0 10 97 	rcall	80009c1c <__avr32_f64_div>
80007af2:	14 90       	mov	r0,r10
80007af4:	16 91       	mov	r1,r11
80007af6:	4b 76       	lddpc	r6,80007bd0 <_dtoa_r+0x470>
80007af8:	c0 f8       	rjmp	80007b16 <_dtoa_r+0x3b6>
80007afa:	08 9a       	mov	r10,r4
80007afc:	0a 9b       	mov	r11,r5
80007afe:	ed b7 00 00 	bld	r7,0x0
80007b02:	c0 81       	brne	80007b12 <_dtoa_r+0x3b2>
80007b04:	ec e8 00 00 	ld.d	r8,r6[0]
80007b08:	2f f3       	sub	r3,-1
80007b0a:	e0 a0 0d 19 	rcall	8000953c <__avr32_f64_mul>
80007b0e:	14 94       	mov	r4,r10
80007b10:	16 95       	mov	r5,r11
80007b12:	a1 57       	asr	r7,0x1
80007b14:	2f 86       	sub	r6,-8
80007b16:	58 07       	cp.w	r7,0
80007b18:	cf 11       	brne	80007afa <_dtoa_r+0x39a>
80007b1a:	00 9a       	mov	r10,r0
80007b1c:	02 9b       	mov	r11,r1
80007b1e:	08 98       	mov	r8,r4
80007b20:	0a 99       	mov	r9,r5
80007b22:	e0 a0 10 7d 	rcall	80009c1c <__avr32_f64_div>
80007b26:	14 90       	mov	r0,r10
80007b28:	16 91       	mov	r1,r11
80007b2a:	c2 88       	rjmp	80007b7a <_dtoa_r+0x41a>
80007b2c:	40 a9       	lddsp	r9,sp[0x28]
80007b2e:	5c 39       	neg	r9
80007b30:	c0 31       	brne	80007b36 <_dtoa_r+0x3d6>
80007b32:	30 23       	mov	r3,2
80007b34:	c2 38       	rjmp	80007b7a <_dtoa_r+0x41a>
80007b36:	f2 04 14 04 	asr	r4,r9,0x4
80007b3a:	4a 58       	lddpc	r8,80007bcc <_dtoa_r+0x46c>
80007b3c:	f3 d9 c0 04 	bfextu	r9,r9,0x0,0x4
80007b40:	fa ea 00 50 	ld.d	r10,sp[80]
80007b44:	f0 09 02 38 	ld.d	r8,r8[r9<<0x3]
80007b48:	4a 25       	lddpc	r5,80007bd0 <_dtoa_r+0x470>
80007b4a:	e0 a0 0c f9 	rcall	8000953c <__avr32_f64_mul>
80007b4e:	30 23       	mov	r3,2
80007b50:	14 96       	mov	r6,r10
80007b52:	16 97       	mov	r7,r11
80007b54:	c0 f8       	rjmp	80007b72 <_dtoa_r+0x412>
80007b56:	0c 9a       	mov	r10,r6
80007b58:	0e 9b       	mov	r11,r7
80007b5a:	ed b4 00 00 	bld	r4,0x0
80007b5e:	c0 81       	brne	80007b6e <_dtoa_r+0x40e>
80007b60:	ea e8 00 00 	ld.d	r8,r5[0]
80007b64:	2f f3       	sub	r3,-1
80007b66:	e0 a0 0c eb 	rcall	8000953c <__avr32_f64_mul>
80007b6a:	14 96       	mov	r6,r10
80007b6c:	16 97       	mov	r7,r11
80007b6e:	a1 54       	asr	r4,0x1
80007b70:	2f 85       	sub	r5,-8
80007b72:	58 04       	cp.w	r4,0
80007b74:	cf 11       	brne	80007b56 <_dtoa_r+0x3f6>
80007b76:	0c 90       	mov	r0,r6
80007b78:	0e 91       	mov	r1,r7
80007b7a:	40 b9       	lddsp	r9,sp[0x2c]
80007b7c:	58 09       	cp.w	r9,0
80007b7e:	c2 b0       	breq	80007bd4 <_dtoa_r+0x474>
80007b80:	30 08       	mov	r8,0
80007b82:	02 97       	mov	r7,r1
80007b84:	fc 19 3f f0 	movh	r9,0x3ff0
80007b88:	00 9a       	mov	r10,r0
80007b8a:	02 9b       	mov	r11,r1
80007b8c:	e0 a0 10 0b 	rcall	80009ba2 <__avr32_f64_cmp_lt>
80007b90:	40 88       	lddsp	r8,sp[0x20]
80007b92:	f9 bc 00 00 	moveq	r12,0
80007b96:	f9 bc 01 01 	movne	r12,1
80007b9a:	58 08       	cp.w	r8,0
80007b9c:	5f 98       	srgt	r8
80007b9e:	00 96       	mov	r6,r0
80007ba0:	18 68       	and	r8,r12
80007ba2:	c1 90       	breq	80007bd4 <_dtoa_r+0x474>
80007ba4:	40 9c       	lddsp	r12,sp[0x24]
80007ba6:	58 0c       	cp.w	r12,0
80007ba8:	e0 8a 00 f0 	brle	80007d88 <_dtoa_r+0x628>
80007bac:	40 ac       	lddsp	r12,sp[0x28]
80007bae:	20 1c       	sub	r12,1
80007bb0:	00 9a       	mov	r10,r0
80007bb2:	02 9b       	mov	r11,r1
80007bb4:	30 08       	mov	r8,0
80007bb6:	fc 19 40 24 	movh	r9,0x4024
80007bba:	51 3c       	stdsp	sp[0x4c],r12
80007bbc:	e0 a0 0c c0 	rcall	8000953c <__avr32_f64_mul>
80007bc0:	2f f3       	sub	r3,-1
80007bc2:	14 90       	mov	r0,r10
80007bc4:	16 91       	mov	r1,r11
80007bc6:	40 9a       	lddsp	r10,sp[0x24]
80007bc8:	51 2a       	stdsp	sp[0x48],r10
80007bca:	c0 98       	rjmp	80007bdc <_dtoa_r+0x47c>
80007bcc:	80 00       	ld.sh	r0,r0[0x0]
80007bce:	aa 28       	st.h	r5[0x4],r8
80007bd0:	80 00       	ld.sh	r0,r0[0x0]
80007bd2:	aa f0       	st.b	r5[0x7],r0
80007bd4:	40 89       	lddsp	r9,sp[0x20]
80007bd6:	40 a8       	lddsp	r8,sp[0x28]
80007bd8:	51 29       	stdsp	sp[0x48],r9
80007bda:	51 38       	stdsp	sp[0x4c],r8
80007bdc:	06 9c       	mov	r12,r3
80007bde:	e0 a0 0f 1d 	rcall	80009a18 <__avr32_s32_to_f64>
80007be2:	00 98       	mov	r8,r0
80007be4:	02 99       	mov	r9,r1
80007be6:	e0 a0 0c ab 	rcall	8000953c <__avr32_f64_mul>
80007bea:	30 08       	mov	r8,0
80007bec:	fc 19 40 1c 	movh	r9,0x401c
80007bf0:	e0 a0 0e 68 	rcall	800098c0 <__avr32_f64_add>
80007bf4:	fc 18 fc c0 	movh	r8,0xfcc0
80007bf8:	16 97       	mov	r7,r11
80007bfa:	00 94       	mov	r4,r0
80007bfc:	02 95       	mov	r5,r1
80007bfe:	14 96       	mov	r6,r10
80007c00:	f0 07 00 07 	add	r7,r8,r7
80007c04:	41 2c       	lddsp	r12,sp[0x48]
80007c06:	58 0c       	cp.w	r12,0
80007c08:	c2 01       	brne	80007c48 <_dtoa_r+0x4e8>
80007c0a:	30 08       	mov	r8,0
80007c0c:	fc 19 40 14 	movh	r9,0x4014
80007c10:	00 9a       	mov	r10,r0
80007c12:	02 9b       	mov	r11,r1
80007c14:	e0 a0 0d 88 	rcall	80009724 <__avr32_f64_sub>
80007c18:	0c 93       	mov	r3,r6
80007c1a:	16 95       	mov	r5,r11
80007c1c:	14 94       	mov	r4,r10
80007c1e:	14 98       	mov	r8,r10
80007c20:	0a 99       	mov	r9,r5
80007c22:	0e 9b       	mov	r11,r7
80007c24:	0c 9a       	mov	r10,r6
80007c26:	e0 a0 0f be 	rcall	80009ba2 <__avr32_f64_cmp_lt>
80007c2a:	e0 81 02 5d 	brne	800080e4 <_dtoa_r+0x984>
80007c2e:	0e 98       	mov	r8,r7
80007c30:	ee 18 80 00 	eorh	r8,0x8000
80007c34:	08 9a       	mov	r10,r4
80007c36:	10 93       	mov	r3,r8
80007c38:	0a 9b       	mov	r11,r5
80007c3a:	0c 98       	mov	r8,r6
80007c3c:	06 99       	mov	r9,r3
80007c3e:	e0 a0 0f b2 	rcall	80009ba2 <__avr32_f64_cmp_lt>
80007c42:	e0 81 02 4a 	brne	800080d6 <_dtoa_r+0x976>
80007c46:	ca 18       	rjmp	80007d88 <_dtoa_r+0x628>
80007c48:	41 28       	lddsp	r8,sp[0x48]
80007c4a:	4c f9       	lddpc	r9,80007d84 <_dtoa_r+0x624>
80007c4c:	20 18       	sub	r8,1
80007c4e:	40 ca       	lddsp	r10,sp[0x30]
80007c50:	58 0a       	cp.w	r10,0
80007c52:	c4 c0       	breq	80007cea <_dtoa_r+0x58a>
80007c54:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
80007c58:	30 0a       	mov	r10,0
80007c5a:	fc 1b 3f e0 	movh	r11,0x3fe0
80007c5e:	e0 a0 0f df 	rcall	80009c1c <__avr32_f64_div>
80007c62:	0e 99       	mov	r9,r7
80007c64:	0c 98       	mov	r8,r6
80007c66:	30 07       	mov	r7,0
80007c68:	41 61       	lddsp	r1,sp[0x58]
80007c6a:	e0 a0 0d 5d 	rcall	80009724 <__avr32_f64_sub>
80007c6e:	14 92       	mov	r2,r10
80007c70:	16 93       	mov	r3,r11
80007c72:	08 9a       	mov	r10,r4
80007c74:	0a 9b       	mov	r11,r5
80007c76:	e0 a0 0e b3 	rcall	800099dc <__avr32_f64_to_s32>
80007c7a:	18 96       	mov	r6,r12
80007c7c:	e0 a0 0e ce 	rcall	80009a18 <__avr32_s32_to_f64>
80007c80:	14 98       	mov	r8,r10
80007c82:	16 99       	mov	r9,r11
80007c84:	08 9a       	mov	r10,r4
80007c86:	0a 9b       	mov	r11,r5
80007c88:	e0 a0 0d 4e 	rcall	80009724 <__avr32_f64_sub>
80007c8c:	2d 06       	sub	r6,-48
80007c8e:	16 95       	mov	r5,r11
80007c90:	14 94       	mov	r4,r10
80007c92:	02 c6       	st.b	r1++,r6
80007c94:	2f f7       	sub	r7,-1
80007c96:	04 98       	mov	r8,r2
80007c98:	06 99       	mov	r9,r3
80007c9a:	0a 9b       	mov	r11,r5
80007c9c:	e0 a0 0f 83 	rcall	80009ba2 <__avr32_f64_cmp_lt>
80007ca0:	e0 81 03 3b 	brne	80008316 <_dtoa_r+0xbb6>
80007ca4:	08 98       	mov	r8,r4
80007ca6:	0a 99       	mov	r9,r5
80007ca8:	30 0a       	mov	r10,0
80007caa:	fc 1b 3f f0 	movh	r11,0x3ff0
80007cae:	e0 a0 0d 3b 	rcall	80009724 <__avr32_f64_sub>
80007cb2:	04 98       	mov	r8,r2
80007cb4:	06 99       	mov	r9,r3
80007cb6:	e0 a0 0f 76 	rcall	80009ba2 <__avr32_f64_cmp_lt>
80007cba:	04 9a       	mov	r10,r2
80007cbc:	06 9b       	mov	r11,r3
80007cbe:	30 08       	mov	r8,0
80007cc0:	fc 19 40 24 	movh	r9,0x4024
80007cc4:	e0 81 00 de 	brne	80007e80 <_dtoa_r+0x720>
80007cc8:	41 2c       	lddsp	r12,sp[0x48]
80007cca:	18 37       	cp.w	r7,r12
80007ccc:	c5 e4       	brge	80007d88 <_dtoa_r+0x628>
80007cce:	e0 a0 0c 37 	rcall	8000953c <__avr32_f64_mul>
80007cd2:	30 08       	mov	r8,0
80007cd4:	14 92       	mov	r2,r10
80007cd6:	16 93       	mov	r3,r11
80007cd8:	08 9a       	mov	r10,r4
80007cda:	0a 9b       	mov	r11,r5
80007cdc:	fc 19 40 24 	movh	r9,0x4024
80007ce0:	e0 a0 0c 2e 	rcall	8000953c <__avr32_f64_mul>
80007ce4:	14 94       	mov	r4,r10
80007ce6:	16 95       	mov	r5,r11
80007ce8:	cc 5b       	rjmp	80007c72 <_dtoa_r+0x512>
80007cea:	41 2c       	lddsp	r12,sp[0x48]
80007cec:	f2 08 02 3a 	ld.d	r10,r9[r8<<0x3]
80007cf0:	41 61       	lddsp	r1,sp[0x58]
80007cf2:	0e 99       	mov	r9,r7
80007cf4:	0c 98       	mov	r8,r6
80007cf6:	18 01       	add	r1,r12
80007cf8:	e0 a0 0c 22 	rcall	8000953c <__avr32_f64_mul>
80007cfc:	41 67       	lddsp	r7,sp[0x58]
80007cfe:	14 92       	mov	r2,r10
80007d00:	16 93       	mov	r3,r11
80007d02:	08 9a       	mov	r10,r4
80007d04:	0a 9b       	mov	r11,r5
80007d06:	e0 a0 0e 6b 	rcall	800099dc <__avr32_f64_to_s32>
80007d0a:	18 96       	mov	r6,r12
80007d0c:	e0 a0 0e 86 	rcall	80009a18 <__avr32_s32_to_f64>
80007d10:	2d 06       	sub	r6,-48
80007d12:	14 98       	mov	r8,r10
80007d14:	16 99       	mov	r9,r11
80007d16:	08 9a       	mov	r10,r4
80007d18:	0a 9b       	mov	r11,r5
80007d1a:	e0 a0 0d 05 	rcall	80009724 <__avr32_f64_sub>
80007d1e:	0e c6       	st.b	r7++,r6
80007d20:	14 94       	mov	r4,r10
80007d22:	16 95       	mov	r5,r11
80007d24:	02 37       	cp.w	r7,r1
80007d26:	c2 61       	brne	80007d72 <_dtoa_r+0x612>
80007d28:	30 08       	mov	r8,0
80007d2a:	fc 19 3f e0 	movh	r9,0x3fe0
80007d2e:	04 9a       	mov	r10,r2
80007d30:	06 9b       	mov	r11,r3
80007d32:	e0 a0 0d c7 	rcall	800098c0 <__avr32_f64_add>
80007d36:	0e 91       	mov	r1,r7
80007d38:	08 98       	mov	r8,r4
80007d3a:	0a 99       	mov	r9,r5
80007d3c:	e0 a0 0f 33 	rcall	80009ba2 <__avr32_f64_cmp_lt>
80007d40:	e0 81 00 a0 	brne	80007e80 <_dtoa_r+0x720>
80007d44:	04 98       	mov	r8,r2
80007d46:	06 99       	mov	r9,r3
80007d48:	30 0a       	mov	r10,0
80007d4a:	fc 1b 3f e0 	movh	r11,0x3fe0
80007d4e:	e0 a0 0c eb 	rcall	80009724 <__avr32_f64_sub>
80007d52:	14 98       	mov	r8,r10
80007d54:	16 99       	mov	r9,r11
80007d56:	08 9a       	mov	r10,r4
80007d58:	0a 9b       	mov	r11,r5
80007d5a:	e0 a0 0f 24 	rcall	80009ba2 <__avr32_f64_cmp_lt>
80007d5e:	c1 50       	breq	80007d88 <_dtoa_r+0x628>
80007d60:	33 0a       	mov	r10,48
80007d62:	02 99       	mov	r9,r1
80007d64:	13 78       	ld.ub	r8,--r9
80007d66:	f4 08 18 00 	cp.b	r8,r10
80007d6a:	e0 81 02 d6 	brne	80008316 <_dtoa_r+0xbb6>
80007d6e:	12 91       	mov	r1,r9
80007d70:	cf 9b       	rjmp	80007d62 <_dtoa_r+0x602>
80007d72:	0a 9b       	mov	r11,r5
80007d74:	30 08       	mov	r8,0
80007d76:	fc 19 40 24 	movh	r9,0x4024
80007d7a:	e0 a0 0b e1 	rcall	8000953c <__avr32_f64_mul>
80007d7e:	14 94       	mov	r4,r10
80007d80:	16 95       	mov	r5,r11
80007d82:	cc 0b       	rjmp	80007d02 <_dtoa_r+0x5a2>
80007d84:	80 00       	ld.sh	r0,r0[0x0]
80007d86:	aa 28       	st.h	r5[0x4],r8
80007d88:	fa e0 00 50 	ld.d	r0,sp[80]
80007d8c:	40 aa       	lddsp	r10,sp[0x28]
80007d8e:	30 0b       	mov	r11,0
80007d90:	58 ea       	cp.w	r10,14
80007d92:	5f a9       	srle	r9
80007d94:	41 7a       	lddsp	r10,sp[0x5c]
80007d96:	f4 08 11 ff 	rsub	r8,r10,-1
80007d9a:	f3 e8 03 f9 	and	r9,r9,r8>>0x1f
80007d9e:	f6 09 18 00 	cp.b	r9,r11
80007da2:	e0 80 00 8b 	breq	80007eb8 <_dtoa_r+0x758>
80007da6:	40 89       	lddsp	r9,sp[0x20]
80007da8:	40 3c       	lddsp	r12,sp[0xc]
80007daa:	58 09       	cp.w	r9,0
80007dac:	5f a8       	srle	r8
80007dae:	4c b9       	lddpc	r9,80007ed8 <_dtoa_r+0x778>
80007db0:	40 aa       	lddsp	r10,sp[0x28]
80007db2:	f1 ec 03 f8 	and	r8,r8,r12>>0x1f
80007db6:	f2 0a 02 34 	ld.d	r4,r9[r10<<0x3]
80007dba:	f6 08 18 00 	cp.b	r8,r11
80007dbe:	c1 50       	breq	80007de8 <_dtoa_r+0x688>
80007dc0:	40 89       	lddsp	r9,sp[0x20]
80007dc2:	58 09       	cp.w	r9,0
80007dc4:	e0 81 01 89 	brne	800080d6 <_dtoa_r+0x976>
80007dc8:	30 08       	mov	r8,0
80007dca:	fc 19 40 14 	movh	r9,0x4014
80007dce:	08 9a       	mov	r10,r4
80007dd0:	0a 9b       	mov	r11,r5
80007dd2:	e0 a0 0b b5 	rcall	8000953c <__avr32_f64_mul>
80007dd6:	00 98       	mov	r8,r0
80007dd8:	02 99       	mov	r9,r1
80007dda:	e0 a0 0e b0 	rcall	80009b3a <__avr32_f64_cmp_ge>
80007dde:	e0 81 01 7c 	brne	800080d6 <_dtoa_r+0x976>
80007de2:	40 84       	lddsp	r4,sp[0x20]
80007de4:	e0 8f 01 83 	bral	800080ea <_dtoa_r+0x98a>
80007de8:	02 97       	mov	r7,r1
80007dea:	00 96       	mov	r6,r0
80007dec:	41 61       	lddsp	r1,sp[0x58]
80007dee:	30 13       	mov	r3,1
80007df0:	08 98       	mov	r8,r4
80007df2:	0a 99       	mov	r9,r5
80007df4:	0c 9a       	mov	r10,r6
80007df6:	0e 9b       	mov	r11,r7
80007df8:	e0 a0 0f 12 	rcall	80009c1c <__avr32_f64_div>
80007dfc:	e0 a0 0d f0 	rcall	800099dc <__avr32_f64_to_s32>
80007e00:	18 92       	mov	r2,r12
80007e02:	e0 a0 0e 0b 	rcall	80009a18 <__avr32_s32_to_f64>
80007e06:	08 98       	mov	r8,r4
80007e08:	0a 99       	mov	r9,r5
80007e0a:	e0 a0 0b 99 	rcall	8000953c <__avr32_f64_mul>
80007e0e:	14 98       	mov	r8,r10
80007e10:	16 99       	mov	r9,r11
80007e12:	0c 9a       	mov	r10,r6
80007e14:	0e 9b       	mov	r11,r7
80007e16:	e0 a0 0c 87 	rcall	80009724 <__avr32_f64_sub>
80007e1a:	e4 c8 ff d0 	sub	r8,r2,-48
80007e1e:	02 c8       	st.b	r1++,r8
80007e20:	16 97       	mov	r7,r11
80007e22:	14 96       	mov	r6,r10
80007e24:	0e 9b       	mov	r11,r7
80007e26:	30 08       	mov	r8,0
80007e28:	fc 19 40 24 	movh	r9,0x4024
80007e2c:	40 8c       	lddsp	r12,sp[0x20]
80007e2e:	18 33       	cp.w	r3,r12
80007e30:	c3 71       	brne	80007e9e <_dtoa_r+0x73e>
80007e32:	0c 98       	mov	r8,r6
80007e34:	0e 99       	mov	r9,r7
80007e36:	e0 a0 0d 45 	rcall	800098c0 <__avr32_f64_add>
80007e3a:	16 97       	mov	r7,r11
80007e3c:	14 96       	mov	r6,r10
80007e3e:	14 98       	mov	r8,r10
80007e40:	0e 99       	mov	r9,r7
80007e42:	08 9a       	mov	r10,r4
80007e44:	0a 9b       	mov	r11,r5
80007e46:	e0 a0 0e ae 	rcall	80009ba2 <__avr32_f64_cmp_lt>
80007e4a:	c1 d1       	brne	80007e84 <_dtoa_r+0x724>
80007e4c:	08 98       	mov	r8,r4
80007e4e:	0a 99       	mov	r9,r5
80007e50:	0c 9a       	mov	r10,r6
80007e52:	0e 9b       	mov	r11,r7
80007e54:	e0 a0 0e 59 	rcall	80009b06 <__avr32_f64_cmp_eq>
80007e58:	e0 80 02 5d 	breq	80008312 <_dtoa_r+0xbb2>
80007e5c:	ed b2 00 00 	bld	r2,0x0
80007e60:	c1 20       	breq	80007e84 <_dtoa_r+0x724>
80007e62:	e0 8f 02 58 	bral	80008312 <_dtoa_r+0xbb2>
80007e66:	41 68       	lddsp	r8,sp[0x58]
80007e68:	10 39       	cp.w	r9,r8
80007e6a:	c0 30       	breq	80007e70 <_dtoa_r+0x710>
80007e6c:	12 91       	mov	r1,r9
80007e6e:	c0 c8       	rjmp	80007e86 <_dtoa_r+0x726>
80007e70:	40 ac       	lddsp	r12,sp[0x28]
80007e72:	2f fc       	sub	r12,-1
80007e74:	50 ac       	stdsp	sp[0x28],r12
80007e76:	33 08       	mov	r8,48
80007e78:	41 6a       	lddsp	r10,sp[0x58]
80007e7a:	b4 88       	st.b	r10[0x0],r8
80007e7c:	41 69       	lddsp	r9,sp[0x58]
80007e7e:	c0 98       	rjmp	80007e90 <_dtoa_r+0x730>
80007e80:	41 39       	lddsp	r9,sp[0x4c]
80007e82:	50 a9       	stdsp	sp[0x28],r9
80007e84:	33 9a       	mov	r10,57
80007e86:	02 99       	mov	r9,r1
80007e88:	13 78       	ld.ub	r8,--r9
80007e8a:	f4 08 18 00 	cp.b	r8,r10
80007e8e:	ce c0       	breq	80007e66 <_dtoa_r+0x706>
80007e90:	40 a8       	lddsp	r8,sp[0x28]
80007e92:	51 38       	stdsp	sp[0x4c],r8
80007e94:	13 88       	ld.ub	r8,r9[0x0]
80007e96:	2f f8       	sub	r8,-1
80007e98:	b2 88       	st.b	r9[0x0],r8
80007e9a:	e0 8f 02 3e 	bral	80008316 <_dtoa_r+0xbb6>
80007e9e:	e0 a0 0b 4f 	rcall	8000953c <__avr32_f64_mul>
80007ea2:	2f f3       	sub	r3,-1
80007ea4:	16 97       	mov	r7,r11
80007ea6:	14 96       	mov	r6,r10
80007ea8:	30 08       	mov	r8,0
80007eaa:	30 09       	mov	r9,0
80007eac:	0e 9b       	mov	r11,r7
80007eae:	e0 a0 0e 2c 	rcall	80009b06 <__avr32_f64_cmp_eq>
80007eb2:	c9 f0       	breq	80007df0 <_dtoa_r+0x690>
80007eb4:	e0 8f 02 2f 	bral	80008312 <_dtoa_r+0xbb2>
80007eb8:	40 cc       	lddsp	r12,sp[0x30]
80007eba:	58 0c       	cp.w	r12,0
80007ebc:	c0 41       	brne	80007ec4 <_dtoa_r+0x764>
80007ebe:	40 65       	lddsp	r5,sp[0x18]
80007ec0:	40 77       	lddsp	r7,sp[0x1c]
80007ec2:	c3 88       	rjmp	80007f32 <_dtoa_r+0x7d2>
80007ec4:	40 49       	lddsp	r9,sp[0x10]
80007ec6:	58 19       	cp.w	r9,1
80007ec8:	e0 89 00 10 	brgt	80007ee8 <_dtoa_r+0x788>
80007ecc:	40 f8       	lddsp	r8,sp[0x3c]
80007ece:	58 08       	cp.w	r8,0
80007ed0:	c0 60       	breq	80007edc <_dtoa_r+0x77c>
80007ed2:	f4 c8 fb cd 	sub	r8,r10,-1075
80007ed6:	c0 68       	rjmp	80007ee2 <_dtoa_r+0x782>
80007ed8:	80 00       	ld.sh	r0,r0[0x0]
80007eda:	aa 28       	st.h	r5[0x4],r8
80007edc:	41 88       	lddsp	r8,sp[0x60]
80007ede:	f0 08 11 36 	rsub	r8,r8,54
80007ee2:	40 65       	lddsp	r5,sp[0x18]
80007ee4:	40 77       	lddsp	r7,sp[0x1c]
80007ee6:	c1 c8       	rjmp	80007f1e <_dtoa_r+0x7be>
80007ee8:	40 8a       	lddsp	r10,sp[0x20]
80007eea:	40 7c       	lddsp	r12,sp[0x1c]
80007eec:	20 1a       	sub	r10,1
80007eee:	14 3c       	cp.w	r12,r10
80007ef0:	c0 45       	brlt	80007ef8 <_dtoa_r+0x798>
80007ef2:	18 97       	mov	r7,r12
80007ef4:	14 17       	sub	r7,r10
80007ef6:	c0 a8       	rjmp	80007f0a <_dtoa_r+0x7aa>
80007ef8:	40 79       	lddsp	r9,sp[0x1c]
80007efa:	40 ec       	lddsp	r12,sp[0x38]
80007efc:	f4 09 01 08 	sub	r8,r10,r9
80007f00:	30 07       	mov	r7,0
80007f02:	10 09       	add	r9,r8
80007f04:	10 0c       	add	r12,r8
80007f06:	50 79       	stdsp	sp[0x1c],r9
80007f08:	50 ec       	stdsp	sp[0x38],r12
80007f0a:	40 8a       	lddsp	r10,sp[0x20]
80007f0c:	58 0a       	cp.w	r10,0
80007f0e:	c0 45       	brlt	80007f16 <_dtoa_r+0x7b6>
80007f10:	14 98       	mov	r8,r10
80007f12:	40 65       	lddsp	r5,sp[0x18]
80007f14:	c0 58       	rjmp	80007f1e <_dtoa_r+0x7be>
80007f16:	40 65       	lddsp	r5,sp[0x18]
80007f18:	40 89       	lddsp	r9,sp[0x20]
80007f1a:	30 08       	mov	r8,0
80007f1c:	12 15       	sub	r5,r9
80007f1e:	40 dc       	lddsp	r12,sp[0x34]
80007f20:	40 6a       	lddsp	r10,sp[0x18]
80007f22:	10 0c       	add	r12,r8
80007f24:	10 0a       	add	r10,r8
80007f26:	50 dc       	stdsp	sp[0x34],r12
80007f28:	50 6a       	stdsp	sp[0x18],r10
80007f2a:	30 1b       	mov	r11,1
80007f2c:	40 5c       	lddsp	r12,sp[0x14]
80007f2e:	e0 a0 08 7b 	rcall	80009024 <__i2b>
80007f32:	58 05       	cp.w	r5,0
80007f34:	5f 98       	srgt	r8
80007f36:	40 d9       	lddsp	r9,sp[0x34]
80007f38:	18 94       	mov	r4,r12
80007f3a:	58 09       	cp.w	r9,0
80007f3c:	5f 99       	srgt	r9
80007f3e:	12 68       	and	r8,r9
80007f40:	c0 a0       	breq	80007f54 <_dtoa_r+0x7f4>
80007f42:	40 dc       	lddsp	r12,sp[0x34]
80007f44:	40 6a       	lddsp	r10,sp[0x18]
80007f46:	f8 05 0d 48 	min	r8,r12,r5
80007f4a:	10 1c       	sub	r12,r8
80007f4c:	10 1a       	sub	r10,r8
80007f4e:	50 dc       	stdsp	sp[0x34],r12
80007f50:	50 6a       	stdsp	sp[0x18],r10
80007f52:	10 15       	sub	r5,r8
80007f54:	40 79       	lddsp	r9,sp[0x1c]
80007f56:	58 09       	cp.w	r9,0
80007f58:	e0 8a 00 23 	brle	80007f9e <_dtoa_r+0x83e>
80007f5c:	40 c8       	lddsp	r8,sp[0x30]
80007f5e:	58 08       	cp.w	r8,0
80007f60:	c1 90       	breq	80007f92 <_dtoa_r+0x832>
80007f62:	58 07       	cp.w	r7,0
80007f64:	e0 8a 00 13 	brle	80007f8a <_dtoa_r+0x82a>
80007f68:	08 9b       	mov	r11,r4
80007f6a:	0e 9a       	mov	r10,r7
80007f6c:	40 5c       	lddsp	r12,sp[0x14]
80007f6e:	e0 a0 08 a5 	rcall	800090b8 <__pow5mult>
80007f72:	41 0a       	lddsp	r10,sp[0x40]
80007f74:	18 9b       	mov	r11,r12
80007f76:	18 94       	mov	r4,r12
80007f78:	40 5c       	lddsp	r12,sp[0x14]
80007f7a:	e0 a0 07 d3 	rcall	80008f20 <__multiply>
80007f7e:	41 0b       	lddsp	r11,sp[0x40]
80007f80:	18 96       	mov	r6,r12
80007f82:	40 5c       	lddsp	r12,sp[0x14]
80007f84:	e0 a0 06 78 	rcall	80008c74 <_Bfree>
80007f88:	51 06       	stdsp	sp[0x40],r6
80007f8a:	40 7a       	lddsp	r10,sp[0x1c]
80007f8c:	0e 1a       	sub	r10,r7
80007f8e:	c0 80       	breq	80007f9e <_dtoa_r+0x83e>
80007f90:	c0 28       	rjmp	80007f94 <_dtoa_r+0x834>
80007f92:	40 7a       	lddsp	r10,sp[0x1c]
80007f94:	41 0b       	lddsp	r11,sp[0x40]
80007f96:	40 5c       	lddsp	r12,sp[0x14]
80007f98:	e0 a0 08 90 	rcall	800090b8 <__pow5mult>
80007f9c:	51 0c       	stdsp	sp[0x40],r12
80007f9e:	30 1b       	mov	r11,1
80007fa0:	40 5c       	lddsp	r12,sp[0x14]
80007fa2:	e0 a0 08 41 	rcall	80009024 <__i2b>
80007fa6:	51 1c       	stdsp	sp[0x44],r12
80007fa8:	40 ec       	lddsp	r12,sp[0x38]
80007faa:	58 0c       	cp.w	r12,0
80007fac:	e0 8a 00 08 	brle	80007fbc <_dtoa_r+0x85c>
80007fb0:	18 9a       	mov	r10,r12
80007fb2:	41 1b       	lddsp	r11,sp[0x44]
80007fb4:	40 5c       	lddsp	r12,sp[0x14]
80007fb6:	e0 a0 08 81 	rcall	800090b8 <__pow5mult>
80007fba:	51 1c       	stdsp	sp[0x44],r12
80007fbc:	40 4a       	lddsp	r10,sp[0x10]
80007fbe:	58 1a       	cp.w	r10,1
80007fc0:	e0 89 00 13 	brgt	80007fe6 <_dtoa_r+0x886>
80007fc4:	58 00       	cp.w	r0,0
80007fc6:	c1 01       	brne	80007fe6 <_dtoa_r+0x886>
80007fc8:	02 99       	mov	r9,r1
80007fca:	f1 d1 c0 14 	bfextu	r8,r1,0x0,0x14
80007fce:	c0 c1       	brne	80007fe6 <_dtoa_r+0x886>
80007fd0:	e6 19 7f f0 	andh	r9,0x7ff0,COH
80007fd4:	c0 90       	breq	80007fe6 <_dtoa_r+0x886>
80007fd6:	40 69       	lddsp	r9,sp[0x18]
80007fd8:	40 d8       	lddsp	r8,sp[0x34]
80007fda:	2f f9       	sub	r9,-1
80007fdc:	2f f8       	sub	r8,-1
80007fde:	50 69       	stdsp	sp[0x18],r9
80007fe0:	50 d8       	stdsp	sp[0x34],r8
80007fe2:	30 17       	mov	r7,1
80007fe4:	c0 28       	rjmp	80007fe8 <_dtoa_r+0x888>
80007fe6:	30 07       	mov	r7,0
80007fe8:	40 ec       	lddsp	r12,sp[0x38]
80007fea:	58 0c       	cp.w	r12,0
80007fec:	c0 31       	brne	80007ff2 <_dtoa_r+0x892>
80007fee:	30 18       	mov	r8,1
80007ff0:	c0 a8       	rjmp	80008004 <_dtoa_r+0x8a4>
80007ff2:	41 1a       	lddsp	r10,sp[0x44]
80007ff4:	74 48       	ld.w	r8,r10[0x10]
80007ff6:	2f c8       	sub	r8,-4
80007ff8:	f4 08 03 2c 	ld.w	r12,r10[r8<<0x2]
80007ffc:	e0 a0 05 aa 	rcall	80008b50 <__hi0bits>
80008000:	f8 08 11 20 	rsub	r8,r12,32
80008004:	40 d9       	lddsp	r9,sp[0x34]
80008006:	12 08       	add	r8,r9
80008008:	f1 d8 c0 05 	bfextu	r8,r8,0x0,0x5
8000800c:	c0 f0       	breq	8000802a <_dtoa_r+0x8ca>
8000800e:	f0 08 11 20 	rsub	r8,r8,32
80008012:	58 48       	cp.w	r8,4
80008014:	e0 8a 00 09 	brle	80008026 <_dtoa_r+0x8c6>
80008018:	20 48       	sub	r8,4
8000801a:	40 6c       	lddsp	r12,sp[0x18]
8000801c:	10 09       	add	r9,r8
8000801e:	10 0c       	add	r12,r8
80008020:	50 d9       	stdsp	sp[0x34],r9
80008022:	50 6c       	stdsp	sp[0x18],r12
80008024:	c0 a8       	rjmp	80008038 <_dtoa_r+0x8d8>
80008026:	58 48       	cp.w	r8,4
80008028:	c0 90       	breq	8000803a <_dtoa_r+0x8da>
8000802a:	2e 48       	sub	r8,-28
8000802c:	40 da       	lddsp	r10,sp[0x34]
8000802e:	40 69       	lddsp	r9,sp[0x18]
80008030:	10 0a       	add	r10,r8
80008032:	10 09       	add	r9,r8
80008034:	50 da       	stdsp	sp[0x34],r10
80008036:	50 69       	stdsp	sp[0x18],r9
80008038:	10 05       	add	r5,r8
8000803a:	40 68       	lddsp	r8,sp[0x18]
8000803c:	58 08       	cp.w	r8,0
8000803e:	e0 8a 00 08 	brle	8000804e <_dtoa_r+0x8ee>
80008042:	10 9a       	mov	r10,r8
80008044:	41 0b       	lddsp	r11,sp[0x40]
80008046:	40 5c       	lddsp	r12,sp[0x14]
80008048:	e0 a0 07 26 	rcall	80008e94 <__lshift>
8000804c:	51 0c       	stdsp	sp[0x40],r12
8000804e:	40 dc       	lddsp	r12,sp[0x34]
80008050:	58 0c       	cp.w	r12,0
80008052:	e0 8a 00 08 	brle	80008062 <_dtoa_r+0x902>
80008056:	18 9a       	mov	r10,r12
80008058:	41 1b       	lddsp	r11,sp[0x44]
8000805a:	40 5c       	lddsp	r12,sp[0x14]
8000805c:	e0 a0 07 1c 	rcall	80008e94 <__lshift>
80008060:	51 1c       	stdsp	sp[0x44],r12
80008062:	40 ba       	lddsp	r10,sp[0x2c]
80008064:	58 0a       	cp.w	r10,0
80008066:	c1 f0       	breq	800080a4 <_dtoa_r+0x944>
80008068:	41 1b       	lddsp	r11,sp[0x44]
8000806a:	41 0c       	lddsp	r12,sp[0x40]
8000806c:	e0 a0 05 e7 	rcall	80008c3a <__mcmp>
80008070:	c1 a4       	brge	800080a4 <_dtoa_r+0x944>
80008072:	40 a9       	lddsp	r9,sp[0x28]
80008074:	20 19       	sub	r9,1
80008076:	41 0b       	lddsp	r11,sp[0x40]
80008078:	50 a9       	stdsp	sp[0x28],r9
8000807a:	30 aa       	mov	r10,10
8000807c:	30 09       	mov	r9,0
8000807e:	40 5c       	lddsp	r12,sp[0x14]
80008080:	e0 a0 07 da 	rcall	80009034 <__multadd>
80008084:	51 0c       	stdsp	sp[0x40],r12
80008086:	40 c8       	lddsp	r8,sp[0x30]
80008088:	58 08       	cp.w	r8,0
8000808a:	c0 41       	brne	80008092 <_dtoa_r+0x932>
8000808c:	40 9c       	lddsp	r12,sp[0x24]
8000808e:	50 8c       	stdsp	sp[0x20],r12
80008090:	c0 a8       	rjmp	800080a4 <_dtoa_r+0x944>
80008092:	40 9a       	lddsp	r10,sp[0x24]
80008094:	08 9b       	mov	r11,r4
80008096:	50 8a       	stdsp	sp[0x20],r10
80008098:	30 09       	mov	r9,0
8000809a:	30 aa       	mov	r10,10
8000809c:	40 5c       	lddsp	r12,sp[0x14]
8000809e:	e0 a0 07 cb 	rcall	80009034 <__multadd>
800080a2:	18 94       	mov	r4,r12
800080a4:	40 89       	lddsp	r9,sp[0x20]
800080a6:	40 4c       	lddsp	r12,sp[0x10]
800080a8:	58 09       	cp.w	r9,0
800080aa:	5f a8       	srle	r8
800080ac:	58 2c       	cp.w	r12,2
800080ae:	5f 99       	srgt	r9
800080b0:	12 68       	and	r8,r9
800080b2:	c2 50       	breq	800080fc <_dtoa_r+0x99c>
800080b4:	40 8a       	lddsp	r10,sp[0x20]
800080b6:	58 0a       	cp.w	r10,0
800080b8:	c1 11       	brne	800080da <_dtoa_r+0x97a>
800080ba:	14 99       	mov	r9,r10
800080bc:	41 1b       	lddsp	r11,sp[0x44]
800080be:	30 5a       	mov	r10,5
800080c0:	40 5c       	lddsp	r12,sp[0x14]
800080c2:	e0 a0 07 b9 	rcall	80009034 <__multadd>
800080c6:	51 1c       	stdsp	sp[0x44],r12
800080c8:	18 9b       	mov	r11,r12
800080ca:	41 0c       	lddsp	r12,sp[0x40]
800080cc:	e0 a0 05 b7 	rcall	80008c3a <__mcmp>
800080d0:	e0 89 00 0e 	brgt	800080ec <_dtoa_r+0x98c>
800080d4:	c0 38       	rjmp	800080da <_dtoa_r+0x97a>
800080d6:	30 04       	mov	r4,0
800080d8:	51 14       	stdsp	sp[0x44],r4
800080da:	40 39       	lddsp	r9,sp[0xc]
800080dc:	41 61       	lddsp	r1,sp[0x58]
800080de:	5c d9       	com	r9
800080e0:	51 39       	stdsp	sp[0x4c],r9
800080e2:	c0 b8       	rjmp	800080f8 <_dtoa_r+0x998>
800080e4:	41 38       	lddsp	r8,sp[0x4c]
800080e6:	41 24       	lddsp	r4,sp[0x48]
800080e8:	50 a8       	stdsp	sp[0x28],r8
800080ea:	51 14       	stdsp	sp[0x44],r4
800080ec:	40 ac       	lddsp	r12,sp[0x28]
800080ee:	2f fc       	sub	r12,-1
800080f0:	51 3c       	stdsp	sp[0x4c],r12
800080f2:	41 61       	lddsp	r1,sp[0x58]
800080f4:	33 18       	mov	r8,49
800080f6:	02 c8       	st.b	r1++,r8
800080f8:	30 02       	mov	r2,0
800080fa:	cf 78       	rjmp	800082e8 <_dtoa_r+0xb88>
800080fc:	40 ca       	lddsp	r10,sp[0x30]
800080fe:	58 0a       	cp.w	r10,0
80008100:	e0 80 00 ad 	breq	8000825a <_dtoa_r+0xafa>
80008104:	58 05       	cp.w	r5,0
80008106:	e0 8a 00 08 	brle	80008116 <_dtoa_r+0x9b6>
8000810a:	08 9b       	mov	r11,r4
8000810c:	0a 9a       	mov	r10,r5
8000810e:	40 5c       	lddsp	r12,sp[0x14]
80008110:	e0 a0 06 c2 	rcall	80008e94 <__lshift>
80008114:	18 94       	mov	r4,r12
80008116:	58 07       	cp.w	r7,0
80008118:	c0 31       	brne	8000811e <_dtoa_r+0x9be>
8000811a:	08 9c       	mov	r12,r4
8000811c:	c1 38       	rjmp	80008142 <_dtoa_r+0x9e2>
8000811e:	68 1b       	ld.w	r11,r4[0x4]
80008120:	40 5c       	lddsp	r12,sp[0x14]
80008122:	e0 a0 05 c3 	rcall	80008ca8 <_Balloc>
80008126:	68 4a       	ld.w	r10,r4[0x10]
80008128:	18 96       	mov	r6,r12
8000812a:	e8 cb ff f4 	sub	r11,r4,-12
8000812e:	2f ea       	sub	r10,-2
80008130:	2f 4c       	sub	r12,-12
80008132:	a3 6a       	lsl	r10,0x2
80008134:	e0 a0 04 4b 	rcall	800089ca <memcpy>
80008138:	0c 9b       	mov	r11,r6
8000813a:	30 1a       	mov	r10,1
8000813c:	40 5c       	lddsp	r12,sp[0x14]
8000813e:	e0 a0 06 ab 	rcall	80008e94 <__lshift>
80008142:	08 92       	mov	r2,r4
80008144:	41 61       	lddsp	r1,sp[0x58]
80008146:	e1 d0 c0 01 	bfextu	r0,r0,0x0,0x1
8000814a:	02 99       	mov	r9,r1
8000814c:	18 94       	mov	r4,r12
8000814e:	5c 39       	neg	r9
80008150:	50 09       	stdsp	sp[0x0],r9
80008152:	41 1b       	lddsp	r11,sp[0x44]
80008154:	41 0c       	lddsp	r12,sp[0x40]
80008156:	fe b0 fa 73 	rcall	8000763c <quorem>
8000815a:	04 9b       	mov	r11,r2
8000815c:	f8 c6 ff d0 	sub	r6,r12,-48
80008160:	41 0c       	lddsp	r12,sp[0x40]
80008162:	e0 a0 05 6c 	rcall	80008c3a <__mcmp>
80008166:	08 9a       	mov	r10,r4
80008168:	18 93       	mov	r3,r12
8000816a:	41 1b       	lddsp	r11,sp[0x44]
8000816c:	40 5c       	lddsp	r12,sp[0x14]
8000816e:	e0 a0 06 29 	rcall	80008dc0 <__mdiff>
80008172:	18 97       	mov	r7,r12
80008174:	78 38       	ld.w	r8,r12[0xc]
80008176:	58 08       	cp.w	r8,0
80008178:	c0 30       	breq	8000817e <_dtoa_r+0xa1e>
8000817a:	30 15       	mov	r5,1
8000817c:	c0 68       	rjmp	80008188 <_dtoa_r+0xa28>
8000817e:	18 9b       	mov	r11,r12
80008180:	41 0c       	lddsp	r12,sp[0x40]
80008182:	e0 a0 05 5c 	rcall	80008c3a <__mcmp>
80008186:	18 95       	mov	r5,r12
80008188:	40 5c       	lddsp	r12,sp[0x14]
8000818a:	0e 9b       	mov	r11,r7
8000818c:	e0 a0 05 74 	rcall	80008c74 <_Bfree>
80008190:	40 4c       	lddsp	r12,sp[0x10]
80008192:	eb ec 10 08 	or	r8,r5,r12
80008196:	c0 d1       	brne	800081b0 <_dtoa_r+0xa50>
80008198:	58 00       	cp.w	r0,0
8000819a:	c0 b1       	brne	800081b0 <_dtoa_r+0xa50>
8000819c:	e0 46 00 39 	cp.w	r6,57
800081a0:	c2 e0       	breq	800081fc <_dtoa_r+0xa9c>
800081a2:	58 03       	cp.w	r3,0
800081a4:	f7 b6 09 ff 	subgt	r6,-1
800081a8:	02 c6       	st.b	r1++,r6
800081aa:	40 aa       	lddsp	r10,sp[0x28]
800081ac:	51 3a       	stdsp	sp[0x4c],r10
800081ae:	c9 d8       	rjmp	800082e8 <_dtoa_r+0xb88>
800081b0:	58 03       	cp.w	r3,0
800081b2:	c0 75       	brlt	800081c0 <_dtoa_r+0xa60>
800081b4:	40 49       	lddsp	r9,sp[0x10]
800081b6:	e7 e9 10 08 	or	r8,r3,r9
800081ba:	c1 b1       	brne	800081f0 <_dtoa_r+0xa90>
800081bc:	58 00       	cp.w	r0,0
800081be:	c1 91       	brne	800081f0 <_dtoa_r+0xa90>
800081c0:	58 05       	cp.w	r5,0
800081c2:	e0 8a 00 15 	brle	800081ec <_dtoa_r+0xa8c>
800081c6:	41 0b       	lddsp	r11,sp[0x40]
800081c8:	30 1a       	mov	r10,1
800081ca:	40 5c       	lddsp	r12,sp[0x14]
800081cc:	e0 a0 06 64 	rcall	80008e94 <__lshift>
800081d0:	41 1b       	lddsp	r11,sp[0x44]
800081d2:	51 0c       	stdsp	sp[0x40],r12
800081d4:	e0 a0 05 33 	rcall	80008c3a <__mcmp>
800081d8:	e0 89 00 06 	brgt	800081e4 <_dtoa_r+0xa84>
800081dc:	c0 81       	brne	800081ec <_dtoa_r+0xa8c>
800081de:	ed b6 00 00 	bld	r6,0x0
800081e2:	c0 51       	brne	800081ec <_dtoa_r+0xa8c>
800081e4:	e0 46 00 39 	cp.w	r6,57
800081e8:	c0 a0       	breq	800081fc <_dtoa_r+0xa9c>
800081ea:	2f f6       	sub	r6,-1
800081ec:	02 c6       	st.b	r1++,r6
800081ee:	c7 08       	rjmp	800082ce <_dtoa_r+0xb6e>
800081f0:	58 05       	cp.w	r5,0
800081f2:	e0 8a 00 0c 	brle	8000820a <_dtoa_r+0xaaa>
800081f6:	e0 46 00 39 	cp.w	r6,57
800081fa:	c0 41       	brne	80008202 <_dtoa_r+0xaa2>
800081fc:	33 98       	mov	r8,57
800081fe:	02 c8       	st.b	r1++,r8
80008200:	c5 f8       	rjmp	800082be <_dtoa_r+0xb5e>
80008202:	ec c8 ff ff 	sub	r8,r6,-1
80008206:	02 c8       	st.b	r1++,r8
80008208:	c6 e8       	rjmp	800082e4 <_dtoa_r+0xb84>
8000820a:	02 c6       	st.b	r1++,r6
8000820c:	40 0a       	lddsp	r10,sp[0x0]
8000820e:	40 89       	lddsp	r9,sp[0x20]
80008210:	e2 0a 00 08 	add	r8,r1,r10
80008214:	12 38       	cp.w	r8,r9
80008216:	c3 80       	breq	80008286 <_dtoa_r+0xb26>
80008218:	41 0b       	lddsp	r11,sp[0x40]
8000821a:	30 09       	mov	r9,0
8000821c:	30 aa       	mov	r10,10
8000821e:	40 5c       	lddsp	r12,sp[0x14]
80008220:	e0 a0 07 0a 	rcall	80009034 <__multadd>
80008224:	51 0c       	stdsp	sp[0x40],r12
80008226:	08 32       	cp.w	r2,r4
80008228:	c0 a1       	brne	8000823c <_dtoa_r+0xadc>
8000822a:	04 9b       	mov	r11,r2
8000822c:	30 09       	mov	r9,0
8000822e:	30 aa       	mov	r10,10
80008230:	40 5c       	lddsp	r12,sp[0x14]
80008232:	e0 a0 07 01 	rcall	80009034 <__multadd>
80008236:	18 92       	mov	r2,r12
80008238:	18 94       	mov	r4,r12
8000823a:	c8 cb       	rjmp	80008152 <_dtoa_r+0x9f2>
8000823c:	04 9b       	mov	r11,r2
8000823e:	30 09       	mov	r9,0
80008240:	30 aa       	mov	r10,10
80008242:	40 5c       	lddsp	r12,sp[0x14]
80008244:	e0 a0 06 f8 	rcall	80009034 <__multadd>
80008248:	08 9b       	mov	r11,r4
8000824a:	18 92       	mov	r2,r12
8000824c:	30 09       	mov	r9,0
8000824e:	30 aa       	mov	r10,10
80008250:	40 5c       	lddsp	r12,sp[0x14]
80008252:	e0 a0 06 f1 	rcall	80009034 <__multadd>
80008256:	18 94       	mov	r4,r12
80008258:	c7 db       	rjmp	80008152 <_dtoa_r+0x9f2>
8000825a:	41 61       	lddsp	r1,sp[0x58]
8000825c:	30 17       	mov	r7,1
8000825e:	41 1b       	lddsp	r11,sp[0x44]
80008260:	41 0c       	lddsp	r12,sp[0x40]
80008262:	fe b0 f9 ed 	rcall	8000763c <quorem>
80008266:	f8 c6 ff d0 	sub	r6,r12,-48
8000826a:	02 c6       	st.b	r1++,r6
8000826c:	40 88       	lddsp	r8,sp[0x20]
8000826e:	10 37       	cp.w	r7,r8
80008270:	c0 a4       	brge	80008284 <_dtoa_r+0xb24>
80008272:	41 0b       	lddsp	r11,sp[0x40]
80008274:	2f f7       	sub	r7,-1
80008276:	30 09       	mov	r9,0
80008278:	30 aa       	mov	r10,10
8000827a:	40 5c       	lddsp	r12,sp[0x14]
8000827c:	e0 a0 06 dc 	rcall	80009034 <__multadd>
80008280:	51 0c       	stdsp	sp[0x40],r12
80008282:	ce eb       	rjmp	8000825e <_dtoa_r+0xafe>
80008284:	30 02       	mov	r2,0
80008286:	41 0b       	lddsp	r11,sp[0x40]
80008288:	30 1a       	mov	r10,1
8000828a:	40 5c       	lddsp	r12,sp[0x14]
8000828c:	e0 a0 06 04 	rcall	80008e94 <__lshift>
80008290:	41 1b       	lddsp	r11,sp[0x44]
80008292:	51 0c       	stdsp	sp[0x40],r12
80008294:	e0 a0 04 d3 	rcall	80008c3a <__mcmp>
80008298:	e0 89 00 13 	brgt	800082be <_dtoa_r+0xb5e>
8000829c:	c1 e1       	brne	800082d8 <_dtoa_r+0xb78>
8000829e:	ed b6 00 00 	bld	r6,0x0
800082a2:	c0 e0       	breq	800082be <_dtoa_r+0xb5e>
800082a4:	c1 a8       	rjmp	800082d8 <_dtoa_r+0xb78>
800082a6:	41 6c       	lddsp	r12,sp[0x58]
800082a8:	18 39       	cp.w	r9,r12
800082aa:	c0 30       	breq	800082b0 <_dtoa_r+0xb50>
800082ac:	12 91       	mov	r1,r9
800082ae:	c0 98       	rjmp	800082c0 <_dtoa_r+0xb60>
800082b0:	40 aa       	lddsp	r10,sp[0x28]
800082b2:	2f fa       	sub	r10,-1
800082b4:	51 3a       	stdsp	sp[0x4c],r10
800082b6:	33 18       	mov	r8,49
800082b8:	41 69       	lddsp	r9,sp[0x58]
800082ba:	b2 88       	st.b	r9[0x0],r8
800082bc:	c1 68       	rjmp	800082e8 <_dtoa_r+0xb88>
800082be:	33 9a       	mov	r10,57
800082c0:	02 99       	mov	r9,r1
800082c2:	13 78       	ld.ub	r8,--r9
800082c4:	f4 08 18 00 	cp.b	r8,r10
800082c8:	ce f0       	breq	800082a6 <_dtoa_r+0xb46>
800082ca:	2f f8       	sub	r8,-1
800082cc:	b2 88       	st.b	r9[0x0],r8
800082ce:	40 a8       	lddsp	r8,sp[0x28]
800082d0:	51 38       	stdsp	sp[0x4c],r8
800082d2:	c0 b8       	rjmp	800082e8 <_dtoa_r+0xb88>
800082d4:	12 91       	mov	r1,r9
800082d6:	c0 28       	rjmp	800082da <_dtoa_r+0xb7a>
800082d8:	33 0a       	mov	r10,48
800082da:	02 99       	mov	r9,r1
800082dc:	13 78       	ld.ub	r8,--r9
800082de:	f4 08 18 00 	cp.b	r8,r10
800082e2:	cf 90       	breq	800082d4 <_dtoa_r+0xb74>
800082e4:	40 ac       	lddsp	r12,sp[0x28]
800082e6:	51 3c       	stdsp	sp[0x4c],r12
800082e8:	41 1b       	lddsp	r11,sp[0x44]
800082ea:	40 5c       	lddsp	r12,sp[0x14]
800082ec:	e0 a0 04 c4 	rcall	80008c74 <_Bfree>
800082f0:	58 04       	cp.w	r4,0
800082f2:	c1 20       	breq	80008316 <_dtoa_r+0xbb6>
800082f4:	58 02       	cp.w	r2,0
800082f6:	5f 18       	srne	r8
800082f8:	08 32       	cp.w	r2,r4
800082fa:	5f 19       	srne	r9
800082fc:	12 68       	and	r8,r9
800082fe:	c0 50       	breq	80008308 <_dtoa_r+0xba8>
80008300:	04 9b       	mov	r11,r2
80008302:	40 5c       	lddsp	r12,sp[0x14]
80008304:	e0 a0 04 b8 	rcall	80008c74 <_Bfree>
80008308:	08 9b       	mov	r11,r4
8000830a:	40 5c       	lddsp	r12,sp[0x14]
8000830c:	e0 a0 04 b4 	rcall	80008c74 <_Bfree>
80008310:	c0 38       	rjmp	80008316 <_dtoa_r+0xbb6>
80008312:	40 aa       	lddsp	r10,sp[0x28]
80008314:	51 3a       	stdsp	sp[0x4c],r10
80008316:	40 5c       	lddsp	r12,sp[0x14]
80008318:	41 0b       	lddsp	r11,sp[0x40]
8000831a:	e0 a0 04 ad 	rcall	80008c74 <_Bfree>
8000831e:	30 08       	mov	r8,0
80008320:	a2 88       	st.b	r1[0x0],r8
80008322:	41 38       	lddsp	r8,sp[0x4c]
80008324:	2f f8       	sub	r8,-1
80008326:	40 29       	lddsp	r9,sp[0x8]
80008328:	93 08       	st.w	r9[0x0],r8
8000832a:	40 18       	lddsp	r8,sp[0x4]
8000832c:	58 08       	cp.w	r8,0
8000832e:	fb fc 10 01 	ld.wne	r12,sp[0x4]
80008332:	f9 f1 1a 00 	st.wne	r12[0x0],r1
80008336:	41 6c       	lddsp	r12,sp[0x58]
80008338:	2e 7d       	sub	sp,-100
8000833a:	d8 32       	popm	r0-r7,pc

8000833c <_fclose_r>:
8000833c:	d4 21       	pushm	r4-r7,lr
8000833e:	18 96       	mov	r6,r12
80008340:	16 97       	mov	r7,r11
80008342:	58 0b       	cp.w	r11,0
80008344:	c0 31       	brne	8000834a <_fclose_r+0xe>
80008346:	16 95       	mov	r5,r11
80008348:	c4 d8       	rjmp	800083e2 <_fclose_r+0xa6>
8000834a:	fe b0 e2 ff 	rcall	80004948 <__sfp_lock_acquire>
8000834e:	58 06       	cp.w	r6,0
80008350:	c0 70       	breq	8000835e <_fclose_r+0x22>
80008352:	6c 68       	ld.w	r8,r6[0x18]
80008354:	58 08       	cp.w	r8,0
80008356:	c0 41       	brne	8000835e <_fclose_r+0x22>
80008358:	0c 9c       	mov	r12,r6
8000835a:	fe b0 e3 4b 	rcall	800049f0 <__sinit>
8000835e:	4a 38       	lddpc	r8,800083e8 <_fclose_r+0xac>
80008360:	10 37       	cp.w	r7,r8
80008362:	c0 31       	brne	80008368 <_fclose_r+0x2c>
80008364:	6c 07       	ld.w	r7,r6[0x0]
80008366:	c0 a8       	rjmp	8000837a <_fclose_r+0x3e>
80008368:	4a 18       	lddpc	r8,800083ec <_fclose_r+0xb0>
8000836a:	10 37       	cp.w	r7,r8
8000836c:	c0 31       	brne	80008372 <_fclose_r+0x36>
8000836e:	6c 17       	ld.w	r7,r6[0x4]
80008370:	c0 58       	rjmp	8000837a <_fclose_r+0x3e>
80008372:	4a 08       	lddpc	r8,800083f0 <_fclose_r+0xb4>
80008374:	10 37       	cp.w	r7,r8
80008376:	ed f7 00 02 	ld.weq	r7,r6[0x8]
8000837a:	8e 69       	ld.sh	r9,r7[0xc]
8000837c:	30 08       	mov	r8,0
8000837e:	f0 09 19 00 	cp.h	r9,r8
80008382:	c0 51       	brne	8000838c <_fclose_r+0x50>
80008384:	fe b0 e2 e3 	rcall	8000494a <__sfp_lock_release>
80008388:	30 05       	mov	r5,0
8000838a:	c2 c8       	rjmp	800083e2 <_fclose_r+0xa6>
8000838c:	0e 9b       	mov	r11,r7
8000838e:	0c 9c       	mov	r12,r6
80008390:	fe b0 e2 40 	rcall	80004810 <_fflush_r>
80008394:	6e c8       	ld.w	r8,r7[0x30]
80008396:	18 95       	mov	r5,r12
80008398:	58 08       	cp.w	r8,0
8000839a:	c0 60       	breq	800083a6 <_fclose_r+0x6a>
8000839c:	6e 8b       	ld.w	r11,r7[0x20]
8000839e:	0c 9c       	mov	r12,r6
800083a0:	5d 18       	icall	r8
800083a2:	f9 b5 05 ff 	movlt	r5,-1
800083a6:	8e 68       	ld.sh	r8,r7[0xc]
800083a8:	ed b8 00 07 	bld	r8,0x7
800083ac:	c0 41       	brne	800083b4 <_fclose_r+0x78>
800083ae:	6e 4b       	ld.w	r11,r7[0x10]
800083b0:	0c 9c       	mov	r12,r6
800083b2:	c7 7c       	rcall	800084a0 <_free_r>
800083b4:	6e db       	ld.w	r11,r7[0x34]
800083b6:	58 0b       	cp.w	r11,0
800083b8:	c0 90       	breq	800083ca <_fclose_r+0x8e>
800083ba:	ee c8 ff bc 	sub	r8,r7,-68
800083be:	10 3b       	cp.w	r11,r8
800083c0:	c0 30       	breq	800083c6 <_fclose_r+0x8a>
800083c2:	0c 9c       	mov	r12,r6
800083c4:	c6 ec       	rcall	800084a0 <_free_r>
800083c6:	30 08       	mov	r8,0
800083c8:	8f d8       	st.w	r7[0x34],r8
800083ca:	6f 2b       	ld.w	r11,r7[0x48]
800083cc:	58 0b       	cp.w	r11,0
800083ce:	c0 60       	breq	800083da <_fclose_r+0x9e>
800083d0:	0c 9c       	mov	r12,r6
800083d2:	c6 7c       	rcall	800084a0 <_free_r>
800083d4:	30 08       	mov	r8,0
800083d6:	ef 48 00 48 	st.w	r7[72],r8
800083da:	30 08       	mov	r8,0
800083dc:	ae 68       	st.h	r7[0xc],r8
800083de:	fe b0 e2 b6 	rcall	8000494a <__sfp_lock_release>
800083e2:	0a 9c       	mov	r12,r5
800083e4:	d8 22       	popm	r4-r7,pc
800083e6:	d7 03       	nop
800083e8:	80 00       	ld.sh	r0,r0[0x0]
800083ea:	a5 80       	lsr	r0,0x4
800083ec:	80 00       	ld.sh	r0,r0[0x0]
800083ee:	a5 a0       	sbr	r0,0x4
800083f0:	80 00       	ld.sh	r0,r0[0x0]
800083f2:	a5 c0       	cbr	r0,0x4

800083f4 <fclose>:
800083f4:	d4 01       	pushm	lr
800083f6:	48 38       	lddpc	r8,80008400 <fclose+0xc>
800083f8:	18 9b       	mov	r11,r12
800083fa:	70 0c       	ld.w	r12,r8[0x0]
800083fc:	ca 0f       	rcall	8000833c <_fclose_r>
800083fe:	d8 02       	popm	pc
80008400:	00 00       	add	r0,r0
80008402:	01 28       	ld.uh	r8,r0++

80008404 <_malloc_trim_r>:
80008404:	d4 21       	pushm	r4-r7,lr
80008406:	16 96       	mov	r6,r11
80008408:	18 97       	mov	r7,r12
8000840a:	fe b0 e5 d2 	rcall	80004fae <__malloc_lock>
8000840e:	4a 24       	lddpc	r4,80008494 <_malloc_trim_r+0x90>
80008410:	68 28       	ld.w	r8,r4[0x8]
80008412:	70 15       	ld.w	r5,r8[0x4]
80008414:	e0 15 ff fc 	andl	r5,0xfffc
80008418:	ea c8 ff 91 	sub	r8,r5,-111
8000841c:	0c 18       	sub	r8,r6
8000841e:	e0 18 ff 80 	andl	r8,0xff80
80008422:	f0 c6 00 80 	sub	r6,r8,128
80008426:	e0 46 00 7f 	cp.w	r6,127
8000842a:	e0 8a 00 23 	brle	80008470 <_malloc_trim_r+0x6c>
8000842e:	30 0b       	mov	r11,0
80008430:	0e 9c       	mov	r12,r7
80008432:	fe b0 e5 d9 	rcall	80004fe4 <_sbrk_r>
80008436:	68 28       	ld.w	r8,r4[0x8]
80008438:	0a 08       	add	r8,r5
8000843a:	10 3c       	cp.w	r12,r8
8000843c:	c1 a1       	brne	80008470 <_malloc_trim_r+0x6c>
8000843e:	ec 0b 11 00 	rsub	r11,r6,0
80008442:	0e 9c       	mov	r12,r7
80008444:	fe b0 e5 d0 	rcall	80004fe4 <_sbrk_r>
80008448:	5b fc       	cp.w	r12,-1
8000844a:	c1 71       	brne	80008478 <_malloc_trim_r+0x74>
8000844c:	30 0b       	mov	r11,0
8000844e:	0e 9c       	mov	r12,r7
80008450:	fe b0 e5 ca 	rcall	80004fe4 <_sbrk_r>
80008454:	68 29       	ld.w	r9,r4[0x8]
80008456:	f8 09 01 08 	sub	r8,r12,r9
8000845a:	58 f8       	cp.w	r8,15
8000845c:	e0 8a 00 0a 	brle	80008470 <_malloc_trim_r+0x6c>
80008460:	a1 a8       	sbr	r8,0x0
80008462:	93 18       	st.w	r9[0x4],r8
80008464:	48 d8       	lddpc	r8,80008498 <_malloc_trim_r+0x94>
80008466:	70 09       	ld.w	r9,r8[0x0]
80008468:	48 d8       	lddpc	r8,8000849c <_malloc_trim_r+0x98>
8000846a:	f8 09 01 09 	sub	r9,r12,r9
8000846e:	91 09       	st.w	r8[0x0],r9
80008470:	0e 9c       	mov	r12,r7
80008472:	fe b0 e5 9f 	rcall	80004fb0 <__malloc_unlock>
80008476:	d8 2a       	popm	r4-r7,pc,r12=0
80008478:	68 29       	ld.w	r9,r4[0x8]
8000847a:	ea 06 01 08 	sub	r8,r5,r6
8000847e:	a1 a8       	sbr	r8,0x0
80008480:	93 18       	st.w	r9[0x4],r8
80008482:	48 79       	lddpc	r9,8000849c <_malloc_trim_r+0x98>
80008484:	72 08       	ld.w	r8,r9[0x0]
80008486:	0c 18       	sub	r8,r6
80008488:	0e 9c       	mov	r12,r7
8000848a:	93 08       	st.w	r9[0x0],r8
8000848c:	fe b0 e5 92 	rcall	80004fb0 <__malloc_unlock>
80008490:	da 2a       	popm	r4-r7,pc,r12=1
80008492:	d7 03       	nop
80008494:	00 00       	add	r0,r0
80008496:	01 2c       	ld.uh	r12,r0++
80008498:	00 00       	add	r0,r0
8000849a:	05 38       	ld.ub	r8,r2++
8000849c:	00 00       	add	r0,r0
8000849e:	06 c8       	st.b	r3++,r8

800084a0 <_free_r>:
800084a0:	d4 21       	pushm	r4-r7,lr
800084a2:	16 97       	mov	r7,r11
800084a4:	18 95       	mov	r5,r12
800084a6:	58 0b       	cp.w	r11,0
800084a8:	e0 80 00 c6 	breq	80008634 <_free_r+0x194>
800084ac:	fe b0 e5 81 	rcall	80004fae <__malloc_lock>
800084b0:	ee cb 00 08 	sub	r11,r7,8
800084b4:	76 18       	ld.w	r8,r11[0x4]
800084b6:	4c 96       	lddpc	r6,800085d8 <_free_r+0x138>
800084b8:	10 9e       	mov	lr,r8
800084ba:	ef d8 c0 01 	bfextu	r7,r8,0x0,0x1
800084be:	a1 ce       	cbr	lr,0x0
800084c0:	6c 28       	ld.w	r8,r6[0x8]
800084c2:	f6 0e 00 0a 	add	r10,r11,lr
800084c6:	74 1c       	ld.w	r12,r10[0x4]
800084c8:	e0 1c ff fc 	andl	r12,0xfffc
800084cc:	10 3a       	cp.w	r10,r8
800084ce:	c1 c1       	brne	80008506 <_free_r+0x66>
800084d0:	f8 0e 00 0a 	add	r10,r12,lr
800084d4:	58 07       	cp.w	r7,0
800084d6:	c0 81       	brne	800084e6 <_free_r+0x46>
800084d8:	76 08       	ld.w	r8,r11[0x0]
800084da:	10 1b       	sub	r11,r8
800084dc:	10 0a       	add	r10,r8
800084de:	76 39       	ld.w	r9,r11[0xc]
800084e0:	76 28       	ld.w	r8,r11[0x8]
800084e2:	93 28       	st.w	r9[0x8],r8
800084e4:	91 39       	st.w	r8[0xc],r9
800084e6:	14 98       	mov	r8,r10
800084e8:	8d 2b       	st.w	r6[0x8],r11
800084ea:	a1 a8       	sbr	r8,0x0
800084ec:	97 18       	st.w	r11[0x4],r8
800084ee:	4b c8       	lddpc	r8,800085dc <_free_r+0x13c>
800084f0:	70 08       	ld.w	r8,r8[0x0]
800084f2:	10 3a       	cp.w	r10,r8
800084f4:	c0 53       	brcs	800084fe <_free_r+0x5e>
800084f6:	4b b8       	lddpc	r8,800085e0 <_free_r+0x140>
800084f8:	0a 9c       	mov	r12,r5
800084fa:	70 0b       	ld.w	r11,r8[0x0]
800084fc:	c8 4f       	rcall	80008404 <_malloc_trim_r>
800084fe:	0a 9c       	mov	r12,r5
80008500:	fe b0 e5 58 	rcall	80004fb0 <__malloc_unlock>
80008504:	d8 22       	popm	r4-r7,pc
80008506:	95 1c       	st.w	r10[0x4],r12
80008508:	58 07       	cp.w	r7,0
8000850a:	c0 30       	breq	80008510 <_free_r+0x70>
8000850c:	30 07       	mov	r7,0
8000850e:	c1 08       	rjmp	8000852e <_free_r+0x8e>
80008510:	76 08       	ld.w	r8,r11[0x0]
80008512:	10 1b       	sub	r11,r8
80008514:	10 0e       	add	lr,r8
80008516:	76 29       	ld.w	r9,r11[0x8]
80008518:	ec c8 ff f8 	sub	r8,r6,-8
8000851c:	10 39       	cp.w	r9,r8
8000851e:	f9 b7 00 01 	moveq	r7,1
80008522:	f7 f8 10 03 	ld.wne	r8,r11[0xc]
80008526:	f1 f9 1a 02 	st.wne	r8[0x8],r9
8000852a:	f3 f8 1a 03 	st.wne	r9[0xc],r8
8000852e:	f4 0c 00 08 	add	r8,r10,r12
80008532:	70 18       	ld.w	r8,r8[0x4]
80008534:	ed b8 00 00 	bld	r8,0x0
80008538:	c1 30       	breq	8000855e <_free_r+0xbe>
8000853a:	18 0e       	add	lr,r12
8000853c:	58 07       	cp.w	r7,0
8000853e:	c0 c1       	brne	80008556 <_free_r+0xb6>
80008540:	4a 68       	lddpc	r8,800085d8 <_free_r+0x138>
80008542:	74 29       	ld.w	r9,r10[0x8]
80008544:	2f 88       	sub	r8,-8
80008546:	10 39       	cp.w	r9,r8
80008548:	c0 71       	brne	80008556 <_free_r+0xb6>
8000854a:	93 3b       	st.w	r9[0xc],r11
8000854c:	93 2b       	st.w	r9[0x8],r11
8000854e:	97 29       	st.w	r11[0x8],r9
80008550:	97 39       	st.w	r11[0xc],r9
80008552:	30 17       	mov	r7,1
80008554:	c0 58       	rjmp	8000855e <_free_r+0xbe>
80008556:	74 29       	ld.w	r9,r10[0x8]
80008558:	74 38       	ld.w	r8,r10[0xc]
8000855a:	91 29       	st.w	r8[0x8],r9
8000855c:	93 38       	st.w	r9[0xc],r8
8000855e:	1c 98       	mov	r8,lr
80008560:	f6 0e 09 0e 	st.w	r11[lr],lr
80008564:	a1 a8       	sbr	r8,0x0
80008566:	97 18       	st.w	r11[0x4],r8
80008568:	58 07       	cp.w	r7,0
8000856a:	c6 21       	brne	8000862e <_free_r+0x18e>
8000856c:	e0 4e 01 ff 	cp.w	lr,511
80008570:	e0 8b 00 13 	brhi	80008596 <_free_r+0xf6>
80008574:	fc 0a 16 03 	lsr	r10,lr,0x3
80008578:	ec 0a 00 38 	add	r8,r6,r10<<0x3
8000857c:	70 29       	ld.w	r9,r8[0x8]
8000857e:	97 38       	st.w	r11[0xc],r8
80008580:	97 29       	st.w	r11[0x8],r9
80008582:	93 3b       	st.w	r9[0xc],r11
80008584:	91 2b       	st.w	r8[0x8],r11
80008586:	6c 19       	ld.w	r9,r6[0x4]
80008588:	a3 4a       	asr	r10,0x2
8000858a:	30 18       	mov	r8,1
8000858c:	f0 0a 09 48 	lsl	r8,r8,r10
80008590:	10 49       	or	r9,r8
80008592:	8d 19       	st.w	r6[0x4],r9
80008594:	c4 d8       	rjmp	8000862e <_free_r+0x18e>
80008596:	fc 0a 16 09 	lsr	r10,lr,0x9
8000859a:	58 4a       	cp.w	r10,4
8000859c:	e0 8b 00 07 	brhi	800085aa <_free_r+0x10a>
800085a0:	fc 08 16 06 	lsr	r8,lr,0x6
800085a4:	f0 ca ff c8 	sub	r10,r8,-56
800085a8:	c2 88       	rjmp	800085f8 <_free_r+0x158>
800085aa:	59 4a       	cp.w	r10,20
800085ac:	e0 8b 00 04 	brhi	800085b4 <_free_r+0x114>
800085b0:	2a 5a       	sub	r10,-91
800085b2:	c2 38       	rjmp	800085f8 <_free_r+0x158>
800085b4:	e0 4a 00 54 	cp.w	r10,84
800085b8:	e0 8b 00 07 	brhi	800085c6 <_free_r+0x126>
800085bc:	fc 08 16 0c 	lsr	r8,lr,0xc
800085c0:	f0 ca ff 92 	sub	r10,r8,-110
800085c4:	c1 a8       	rjmp	800085f8 <_free_r+0x158>
800085c6:	e0 4a 01 54 	cp.w	r10,340
800085ca:	e0 8b 00 0d 	brhi	800085e4 <_free_r+0x144>
800085ce:	fc 08 16 0f 	lsr	r8,lr,0xf
800085d2:	f0 ca ff 89 	sub	r10,r8,-119
800085d6:	c1 18       	rjmp	800085f8 <_free_r+0x158>
800085d8:	00 00       	add	r0,r0
800085da:	01 2c       	ld.uh	r12,r0++
800085dc:	00 00       	add	r0,r0
800085de:	05 34       	ld.ub	r4,r2++
800085e0:	00 00       	add	r0,r0
800085e2:	06 c4       	st.b	r3++,r4
800085e4:	fc 08 16 12 	lsr	r8,lr,0x12
800085e8:	e0 4a 05 54 	cp.w	r10,1364
800085ec:	f9 ba 0b 7e 	movhi	r10,126
800085f0:	f9 b9 08 7c 	movls	r9,124
800085f4:	f1 d9 e8 0a 	addls	r10,r8,r9
800085f8:	ec 0a 00 39 	add	r9,r6,r10<<0x3
800085fc:	72 2c       	ld.w	r12,r9[0x8]
800085fe:	12 3c       	cp.w	r12,r9
80008600:	c0 d1       	brne	8000861a <_free_r+0x17a>
80008602:	a3 4a       	asr	r10,0x2
80008604:	30 18       	mov	r8,1
80008606:	f0 0a 09 48 	lsl	r8,r8,r10
8000860a:	6c 19       	ld.w	r9,r6[0x4]
8000860c:	10 49       	or	r9,r8
8000860e:	18 98       	mov	r8,r12
80008610:	8d 19       	st.w	r6[0x4],r9
80008612:	c0 a8       	rjmp	80008626 <_free_r+0x186>
80008614:	78 2c       	ld.w	r12,r12[0x8]
80008616:	12 3c       	cp.w	r12,r9
80008618:	c0 60       	breq	80008624 <_free_r+0x184>
8000861a:	78 18       	ld.w	r8,r12[0x4]
8000861c:	e0 18 ff fc 	andl	r8,0xfffc
80008620:	10 3e       	cp.w	lr,r8
80008622:	cf 93       	brcs	80008614 <_free_r+0x174>
80008624:	78 38       	ld.w	r8,r12[0xc]
80008626:	97 38       	st.w	r11[0xc],r8
80008628:	97 2c       	st.w	r11[0x8],r12
8000862a:	99 3b       	st.w	r12[0xc],r11
8000862c:	91 2b       	st.w	r8[0x8],r11
8000862e:	0a 9c       	mov	r12,r5
80008630:	fe b0 e4 c0 	rcall	80004fb0 <__malloc_unlock>
80008634:	d8 22       	popm	r4-r7,pc
80008636:	d7 03       	nop

80008638 <__sfvwrite_r>:
80008638:	d4 31       	pushm	r0-r7,lr
8000863a:	20 2d       	sub	sp,8
8000863c:	50 0a       	stdsp	sp[0x0],r10
8000863e:	50 1c       	stdsp	sp[0x4],r12
80008640:	16 96       	mov	r6,r11
80008642:	74 28       	ld.w	r8,r10[0x8]
80008644:	58 08       	cp.w	r8,0
80008646:	e0 80 01 38 	breq	800088b6 <__sfvwrite_r+0x27e>
8000864a:	96 68       	ld.sh	r8,r11[0xc]
8000864c:	ed b8 00 03 	bld	r8,0x3
80008650:	c0 41       	brne	80008658 <__sfvwrite_r+0x20>
80008652:	76 48       	ld.w	r8,r11[0x10]
80008654:	58 08       	cp.w	r8,0
80008656:	c0 d1       	brne	80008670 <__sfvwrite_r+0x38>
80008658:	0c 9b       	mov	r11,r6
8000865a:	40 1c       	lddsp	r12,sp[0x4]
8000865c:	fe b0 f6 b0 	rcall	800073bc <__swsetup_r>
80008660:	c0 80       	breq	80008670 <__sfvwrite_r+0x38>
80008662:	8c 68       	ld.sh	r8,r6[0xc]
80008664:	a7 a8       	sbr	r8,0x6
80008666:	40 19       	lddsp	r9,sp[0x4]
80008668:	ac 68       	st.h	r6[0xc],r8
8000866a:	30 98       	mov	r8,9
8000866c:	93 38       	st.w	r9[0xc],r8
8000866e:	c2 29       	rjmp	800088b2 <__sfvwrite_r+0x27a>
80008670:	40 09       	lddsp	r9,sp[0x0]
80008672:	8c 68       	ld.sh	r8,r6[0xc]
80008674:	72 00       	ld.w	r0,r9[0x0]
80008676:	10 99       	mov	r9,r8
80008678:	e2 19 00 02 	andl	r9,0x2,COH
8000867c:	c2 20       	breq	800086c0 <__sfvwrite_r+0x88>
8000867e:	30 07       	mov	r7,0
80008680:	e0 64 04 00 	mov	r4,1024
80008684:	0e 95       	mov	r5,r7
80008686:	c0 48       	rjmp	8000868e <__sfvwrite_r+0x56>
80008688:	60 05       	ld.w	r5,r0[0x0]
8000868a:	60 17       	ld.w	r7,r0[0x4]
8000868c:	2f 80       	sub	r0,-8
8000868e:	58 07       	cp.w	r7,0
80008690:	cf c0       	breq	80008688 <__sfvwrite_r+0x50>
80008692:	e0 47 04 00 	cp.w	r7,1024
80008696:	ee 09 17 80 	movls	r9,r7
8000869a:	e8 09 17 b0 	movhi	r9,r4
8000869e:	0a 9a       	mov	r10,r5
800086a0:	6c a8       	ld.w	r8,r6[0x28]
800086a2:	6c 8b       	ld.w	r11,r6[0x20]
800086a4:	40 1c       	lddsp	r12,sp[0x4]
800086a6:	5d 18       	icall	r8
800086a8:	18 17       	sub	r7,r12
800086aa:	58 0c       	cp.w	r12,0
800086ac:	e0 8a 01 00 	brle	800088ac <__sfvwrite_r+0x274>
800086b0:	40 09       	lddsp	r9,sp[0x0]
800086b2:	72 28       	ld.w	r8,r9[0x8]
800086b4:	18 18       	sub	r8,r12
800086b6:	93 28       	st.w	r9[0x8],r8
800086b8:	e0 80 00 ff 	breq	800088b6 <__sfvwrite_r+0x27e>
800086bc:	18 05       	add	r5,r12
800086be:	ce 8b       	rjmp	8000868e <__sfvwrite_r+0x56>
800086c0:	f5 d8 c0 01 	bfextu	r10,r8,0x0,0x1
800086c4:	c0 60       	breq	800086d0 <__sfvwrite_r+0x98>
800086c6:	12 94       	mov	r4,r9
800086c8:	12 92       	mov	r2,r9
800086ca:	12 91       	mov	r1,r9
800086cc:	12 93       	mov	r3,r9
800086ce:	c9 68       	rjmp	800087fa <__sfvwrite_r+0x1c2>
800086d0:	14 94       	mov	r4,r10
800086d2:	30 21       	mov	r1,2
800086d4:	14 92       	mov	r2,r10
800086d6:	c0 48       	rjmp	800086de <__sfvwrite_r+0xa6>
800086d8:	60 02       	ld.w	r2,r0[0x0]
800086da:	60 14       	ld.w	r4,r0[0x4]
800086dc:	2f 80       	sub	r0,-8
800086de:	58 04       	cp.w	r4,0
800086e0:	cf c0       	breq	800086d8 <__sfvwrite_r+0xa0>
800086e2:	8c 6c       	ld.sh	r12,r6[0xc]
800086e4:	6c 27       	ld.w	r7,r6[0x8]
800086e6:	18 9a       	mov	r10,r12
800086e8:	e2 1a 02 00 	andl	r10,0x200,COH
800086ec:	c4 f0       	breq	8000878a <__sfvwrite_r+0x152>
800086ee:	0e 34       	cp.w	r4,r7
800086f0:	c3 e3       	brcs	8000876c <__sfvwrite_r+0x134>
800086f2:	18 98       	mov	r8,r12
800086f4:	e2 18 04 80 	andl	r8,0x480,COH
800086f8:	c3 a0       	breq	8000876c <__sfvwrite_r+0x134>
800086fa:	6c 08       	ld.w	r8,r6[0x0]
800086fc:	6c 4b       	ld.w	r11,r6[0x10]
800086fe:	6c 59       	ld.w	r9,r6[0x14]
80008700:	f0 0b 01 03 	sub	r3,r8,r11
80008704:	f2 09 00 19 	add	r9,r9,r9<<0x1
80008708:	f2 01 0c 08 	divs	r8,r9,r1
8000870c:	e2 1c 04 00 	andl	r12,0x400,COH
80008710:	10 97       	mov	r7,r8
80008712:	e6 c8 ff ff 	sub	r8,r3,-1
80008716:	08 08       	add	r8,r4
80008718:	10 37       	cp.w	r7,r8
8000871a:	f0 07 17 30 	movlo	r7,r8
8000871e:	58 0c       	cp.w	r12,0
80008720:	c1 00       	breq	80008740 <__sfvwrite_r+0x108>
80008722:	0e 9b       	mov	r11,r7
80008724:	40 1c       	lddsp	r12,sp[0x4]
80008726:	fe b0 e2 0f 	rcall	80004b44 <_malloc_r>
8000872a:	18 95       	mov	r5,r12
8000872c:	c1 30       	breq	80008752 <__sfvwrite_r+0x11a>
8000872e:	06 9a       	mov	r10,r3
80008730:	6c 4b       	ld.w	r11,r6[0x10]
80008732:	c4 cd       	rcall	800089ca <memcpy>
80008734:	8c 68       	ld.sh	r8,r6[0xc]
80008736:	e0 18 fb 7f 	andl	r8,0xfb7f
8000873a:	a7 b8       	sbr	r8,0x7
8000873c:	ac 68       	st.h	r6[0xc],r8
8000873e:	c0 e8       	rjmp	8000875a <__sfvwrite_r+0x122>
80008740:	0e 9a       	mov	r10,r7
80008742:	40 1c       	lddsp	r12,sp[0x4]
80008744:	e0 a0 05 16 	rcall	80009170 <_realloc_r>
80008748:	18 95       	mov	r5,r12
8000874a:	c0 81       	brne	8000875a <__sfvwrite_r+0x122>
8000874c:	6c 4b       	ld.w	r11,r6[0x10]
8000874e:	40 1c       	lddsp	r12,sp[0x4]
80008750:	ca 8e       	rcall	800084a0 <_free_r>
80008752:	30 c8       	mov	r8,12
80008754:	40 19       	lddsp	r9,sp[0x4]
80008756:	93 38       	st.w	r9[0xc],r8
80008758:	ca a8       	rjmp	800088ac <__sfvwrite_r+0x274>
8000875a:	ee 03 01 08 	sub	r8,r7,r3
8000875e:	8d 57       	st.w	r6[0x14],r7
80008760:	8d 28       	st.w	r6[0x8],r8
80008762:	8d 45       	st.w	r6[0x10],r5
80008764:	ea 03 00 08 	add	r8,r5,r3
80008768:	08 97       	mov	r7,r4
8000876a:	8d 08       	st.w	r6[0x0],r8
8000876c:	0e 34       	cp.w	r4,r7
8000876e:	e8 07 17 30 	movlo	r7,r4
80008772:	04 9b       	mov	r11,r2
80008774:	0e 9a       	mov	r10,r7
80008776:	6c 0c       	ld.w	r12,r6[0x0]
80008778:	cc dd       	rcall	80008b12 <memmove>
8000877a:	6c 08       	ld.w	r8,r6[0x0]
8000877c:	0e 08       	add	r8,r7
8000877e:	8d 08       	st.w	r6[0x0],r8
80008780:	6c 28       	ld.w	r8,r6[0x8]
80008782:	0e 18       	sub	r8,r7
80008784:	08 97       	mov	r7,r4
80008786:	8d 28       	st.w	r6[0x8],r8
80008788:	c2 d8       	rjmp	800087e2 <__sfvwrite_r+0x1aa>
8000878a:	0e 34       	cp.w	r4,r7
8000878c:	5f b9       	srhi	r9
8000878e:	6c 0c       	ld.w	r12,r6[0x0]
80008790:	6c 48       	ld.w	r8,r6[0x10]
80008792:	10 3c       	cp.w	r12,r8
80008794:	5f b8       	srhi	r8
80008796:	12 68       	and	r8,r9
80008798:	f4 08 18 00 	cp.b	r8,r10
8000879c:	c0 d0       	breq	800087b6 <__sfvwrite_r+0x17e>
8000879e:	04 9b       	mov	r11,r2
800087a0:	0e 9a       	mov	r10,r7
800087a2:	cb 8d       	rcall	80008b12 <memmove>
800087a4:	6c 08       	ld.w	r8,r6[0x0]
800087a6:	0e 08       	add	r8,r7
800087a8:	0c 9b       	mov	r11,r6
800087aa:	8d 08       	st.w	r6[0x0],r8
800087ac:	40 1c       	lddsp	r12,sp[0x4]
800087ae:	fe b0 e0 31 	rcall	80004810 <_fflush_r>
800087b2:	c1 80       	breq	800087e2 <__sfvwrite_r+0x1aa>
800087b4:	c7 c8       	rjmp	800088ac <__sfvwrite_r+0x274>
800087b6:	6c 59       	ld.w	r9,r6[0x14]
800087b8:	12 34       	cp.w	r4,r9
800087ba:	c0 a3       	brcs	800087ce <__sfvwrite_r+0x196>
800087bc:	6c a8       	ld.w	r8,r6[0x28]
800087be:	04 9a       	mov	r10,r2
800087c0:	6c 8b       	ld.w	r11,r6[0x20]
800087c2:	40 1c       	lddsp	r12,sp[0x4]
800087c4:	5d 18       	icall	r8
800087c6:	18 97       	mov	r7,r12
800087c8:	e0 89 00 0d 	brgt	800087e2 <__sfvwrite_r+0x1aa>
800087cc:	c7 08       	rjmp	800088ac <__sfvwrite_r+0x274>
800087ce:	08 9a       	mov	r10,r4
800087d0:	04 9b       	mov	r11,r2
800087d2:	ca 0d       	rcall	80008b12 <memmove>
800087d4:	6c 08       	ld.w	r8,r6[0x0]
800087d6:	08 08       	add	r8,r4
800087d8:	08 97       	mov	r7,r4
800087da:	8d 08       	st.w	r6[0x0],r8
800087dc:	6c 28       	ld.w	r8,r6[0x8]
800087de:	08 18       	sub	r8,r4
800087e0:	8d 28       	st.w	r6[0x8],r8
800087e2:	40 09       	lddsp	r9,sp[0x0]
800087e4:	72 28       	ld.w	r8,r9[0x8]
800087e6:	0e 18       	sub	r8,r7
800087e8:	93 28       	st.w	r9[0x8],r8
800087ea:	c6 60       	breq	800088b6 <__sfvwrite_r+0x27e>
800087ec:	0e 14       	sub	r4,r7
800087ee:	0e 02       	add	r2,r7
800087f0:	c7 7b       	rjmp	800086de <__sfvwrite_r+0xa6>
800087f2:	60 02       	ld.w	r2,r0[0x0]
800087f4:	60 14       	ld.w	r4,r0[0x4]
800087f6:	30 01       	mov	r1,0
800087f8:	2f 80       	sub	r0,-8
800087fa:	58 04       	cp.w	r4,0
800087fc:	cf b0       	breq	800087f2 <__sfvwrite_r+0x1ba>
800087fe:	58 01       	cp.w	r1,0
80008800:	c1 01       	brne	80008820 <__sfvwrite_r+0x1e8>
80008802:	08 9a       	mov	r10,r4
80008804:	30 ab       	mov	r11,10
80008806:	04 9c       	mov	r12,r2
80008808:	30 11       	mov	r1,1
8000880a:	cd 5c       	rcall	800089b4 <memchr>
8000880c:	f9 b9 01 01 	movne	r9,1
80008810:	f9 d9 e1 08 	addne	r8,r12,r9
80008814:	f1 d2 e1 13 	subne	r3,r8,r2
80008818:	f9 b8 00 01 	moveq	r8,1
8000881c:	e9 d8 e0 03 	addeq	r3,r4,r8
80008820:	6c 28       	ld.w	r8,r6[0x8]
80008822:	08 33       	cp.w	r3,r4
80008824:	e6 05 17 80 	movls	r5,r3
80008828:	e8 05 17 b0 	movhi	r5,r4
8000882c:	6c 5b       	ld.w	r11,r6[0x14]
8000882e:	f6 08 00 07 	add	r7,r11,r8
80008832:	0e 35       	cp.w	r5,r7
80008834:	5f 99       	srgt	r9
80008836:	6c 0c       	ld.w	r12,r6[0x0]
80008838:	6c 48       	ld.w	r8,r6[0x10]
8000883a:	10 3c       	cp.w	r12,r8
8000883c:	5f b8       	srhi	r8
8000883e:	12 68       	and	r8,r9
80008840:	30 09       	mov	r9,0
80008842:	f2 08 18 00 	cp.b	r8,r9
80008846:	c0 d0       	breq	80008860 <__sfvwrite_r+0x228>
80008848:	04 9b       	mov	r11,r2
8000884a:	0e 9a       	mov	r10,r7
8000884c:	c6 3d       	rcall	80008b12 <memmove>
8000884e:	6c 08       	ld.w	r8,r6[0x0]
80008850:	0e 08       	add	r8,r7
80008852:	0c 9b       	mov	r11,r6
80008854:	8d 08       	st.w	r6[0x0],r8
80008856:	40 1c       	lddsp	r12,sp[0x4]
80008858:	fe b0 df dc 	rcall	80004810 <_fflush_r>
8000885c:	c1 80       	breq	8000888c <__sfvwrite_r+0x254>
8000885e:	c2 78       	rjmp	800088ac <__sfvwrite_r+0x274>
80008860:	16 35       	cp.w	r5,r11
80008862:	c0 b5       	brlt	80008878 <__sfvwrite_r+0x240>
80008864:	16 99       	mov	r9,r11
80008866:	6c a8       	ld.w	r8,r6[0x28]
80008868:	04 9a       	mov	r10,r2
8000886a:	6c 8b       	ld.w	r11,r6[0x20]
8000886c:	40 1c       	lddsp	r12,sp[0x4]
8000886e:	5d 18       	icall	r8
80008870:	18 97       	mov	r7,r12
80008872:	e0 89 00 0d 	brgt	8000888c <__sfvwrite_r+0x254>
80008876:	c1 b8       	rjmp	800088ac <__sfvwrite_r+0x274>
80008878:	0a 97       	mov	r7,r5
8000887a:	0a 9a       	mov	r10,r5
8000887c:	04 9b       	mov	r11,r2
8000887e:	c4 ad       	rcall	80008b12 <memmove>
80008880:	6c 08       	ld.w	r8,r6[0x0]
80008882:	0a 08       	add	r8,r5
80008884:	8d 08       	st.w	r6[0x0],r8
80008886:	6c 28       	ld.w	r8,r6[0x8]
80008888:	0a 18       	sub	r8,r5
8000888a:	8d 28       	st.w	r6[0x8],r8
8000888c:	0e 13       	sub	r3,r7
8000888e:	c0 71       	brne	8000889c <__sfvwrite_r+0x264>
80008890:	0c 9b       	mov	r11,r6
80008892:	40 1c       	lddsp	r12,sp[0x4]
80008894:	fe b0 df be 	rcall	80004810 <_fflush_r>
80008898:	c0 a1       	brne	800088ac <__sfvwrite_r+0x274>
8000889a:	06 91       	mov	r1,r3
8000889c:	40 09       	lddsp	r9,sp[0x0]
8000889e:	72 28       	ld.w	r8,r9[0x8]
800088a0:	0e 18       	sub	r8,r7
800088a2:	93 28       	st.w	r9[0x8],r8
800088a4:	c0 90       	breq	800088b6 <__sfvwrite_r+0x27e>
800088a6:	0e 14       	sub	r4,r7
800088a8:	0e 02       	add	r2,r7
800088aa:	ca 8b       	rjmp	800087fa <__sfvwrite_r+0x1c2>
800088ac:	8c 68       	ld.sh	r8,r6[0xc]
800088ae:	a7 a8       	sbr	r8,0x6
800088b0:	ac 68       	st.h	r6[0xc],r8
800088b2:	3f fc       	mov	r12,-1
800088b4:	c0 28       	rjmp	800088b8 <__sfvwrite_r+0x280>
800088b6:	30 0c       	mov	r12,0
800088b8:	2f ed       	sub	sp,-8
800088ba:	d8 32       	popm	r0-r7,pc

800088bc <_localeconv_r>:
800088bc:	48 1c       	lddpc	r12,800088c0 <_localeconv_r+0x4>
800088be:	5e fc       	retal	r12
800088c0:	80 00       	ld.sh	r0,r0[0x0]
800088c2:	a9 e8       	*unknown*

800088c4 <_lseek_r>:
800088c4:	d4 21       	pushm	r4-r7,lr
800088c6:	16 98       	mov	r8,r11
800088c8:	18 96       	mov	r6,r12
800088ca:	10 9c       	mov	r12,r8
800088cc:	30 08       	mov	r8,0
800088ce:	14 9b       	mov	r11,r10
800088d0:	48 67       	lddpc	r7,800088e8 <_lseek_r+0x24>
800088d2:	12 9a       	mov	r10,r9
800088d4:	8f 08       	st.w	r7[0x0],r8
800088d6:	fe b0 db f3 	rcall	800040bc <_lseek>
800088da:	5b fc       	cp.w	r12,-1
800088dc:	c0 51       	brne	800088e6 <_lseek_r+0x22>
800088de:	6e 08       	ld.w	r8,r7[0x0]
800088e0:	58 08       	cp.w	r8,0
800088e2:	ed f8 1a 03 	st.wne	r6[0xc],r8
800088e6:	d8 22       	popm	r4-r7,pc
800088e8:	00 00       	add	r0,r0
800088ea:	07 48       	ld.w	r8,--r3

800088ec <__smakebuf_r>:
800088ec:	d4 21       	pushm	r4-r7,lr
800088ee:	20 fd       	sub	sp,60
800088f0:	96 68       	ld.sh	r8,r11[0xc]
800088f2:	16 97       	mov	r7,r11
800088f4:	18 94       	mov	r4,r12
800088f6:	e2 18 00 02 	andl	r8,0x2,COH
800088fa:	c3 f1       	brne	80008978 <__smakebuf_r+0x8c>
800088fc:	96 7b       	ld.sh	r11,r11[0xe]
800088fe:	f0 0b 19 00 	cp.h	r11,r8
80008902:	c0 55       	brlt	8000890c <__smakebuf_r+0x20>
80008904:	1a 9a       	mov	r10,sp
80008906:	e0 a0 06 07 	rcall	80009514 <_fstat_r>
8000890a:	c1 04       	brge	8000892a <__smakebuf_r+0x3e>
8000890c:	8e 68       	ld.sh	r8,r7[0xc]
8000890e:	e0 69 04 00 	mov	r9,1024
80008912:	10 9a       	mov	r10,r8
80008914:	30 05       	mov	r5,0
80008916:	e2 1a 00 80 	andl	r10,0x80,COH
8000891a:	ab b8       	sbr	r8,0xb
8000891c:	58 0a       	cp.w	r10,0
8000891e:	f9 b6 01 40 	movne	r6,64
80008922:	f2 06 17 00 	moveq	r6,r9
80008926:	ae 68       	st.h	r7[0xc],r8
80008928:	c1 d8       	rjmp	80008962 <__smakebuf_r+0x76>
8000892a:	40 18       	lddsp	r8,sp[0x4]
8000892c:	e2 18 f0 00 	andl	r8,0xf000,COH
80008930:	e0 48 20 00 	cp.w	r8,8192
80008934:	5f 05       	sreq	r5
80008936:	e0 48 80 00 	cp.w	r8,32768
8000893a:	c0 f1       	brne	80008958 <__smakebuf_r+0x6c>
8000893c:	6e b9       	ld.w	r9,r7[0x2c]
8000893e:	fe c8 37 be 	sub	r8,pc,14270
80008942:	10 39       	cp.w	r9,r8
80008944:	c0 a1       	brne	80008958 <__smakebuf_r+0x6c>
80008946:	8e 68       	ld.sh	r8,r7[0xc]
80008948:	ab a8       	sbr	r8,0xa
8000894a:	ae 68       	st.h	r7[0xc],r8
8000894c:	e0 68 04 00 	mov	r8,1024
80008950:	ef 48 00 50 	st.w	r7[80],r8
80008954:	10 96       	mov	r6,r8
80008956:	c0 68       	rjmp	80008962 <__smakebuf_r+0x76>
80008958:	8e 68       	ld.sh	r8,r7[0xc]
8000895a:	e0 66 04 00 	mov	r6,1024
8000895e:	ab b8       	sbr	r8,0xb
80008960:	ae 68       	st.h	r7[0xc],r8
80008962:	0c 9b       	mov	r11,r6
80008964:	08 9c       	mov	r12,r4
80008966:	fe b0 e0 ef 	rcall	80004b44 <_malloc_r>
8000896a:	8e 69       	ld.sh	r9,r7[0xc]
8000896c:	c0 d1       	brne	80008986 <__smakebuf_r+0x9a>
8000896e:	ed b9 00 09 	bld	r9,0x9
80008972:	c1 f0       	breq	800089b0 <__smakebuf_r+0xc4>
80008974:	a1 b9       	sbr	r9,0x1
80008976:	ae 69       	st.h	r7[0xc],r9
80008978:	ee c8 ff b9 	sub	r8,r7,-71
8000897c:	8f 48       	st.w	r7[0x10],r8
8000897e:	8f 08       	st.w	r7[0x0],r8
80008980:	30 18       	mov	r8,1
80008982:	8f 58       	st.w	r7[0x14],r8
80008984:	c1 68       	rjmp	800089b0 <__smakebuf_r+0xc4>
80008986:	a7 b9       	sbr	r9,0x7
80008988:	fe c8 40 3c 	sub	r8,pc,16444
8000898c:	8f 4c       	st.w	r7[0x10],r12
8000898e:	8f 56       	st.w	r7[0x14],r6
80008990:	ae 69       	st.h	r7[0xc],r9
80008992:	8f 0c       	st.w	r7[0x0],r12
80008994:	89 a8       	st.w	r4[0x28],r8
80008996:	58 05       	cp.w	r5,0
80008998:	c0 c0       	breq	800089b0 <__smakebuf_r+0xc4>
8000899a:	8e 7c       	ld.sh	r12,r7[0xe]
8000899c:	fe b0 db 87 	rcall	800040aa <isatty>
800089a0:	ef f8 12 06 	ld.shne	r8,r7[0xc]
800089a4:	f9 b9 01 01 	movne	r9,1
800089a8:	f1 d9 e1 38 	orne	r8,r8,r9
800089ac:	ef f8 1c 06 	st.hne	r7[0xc],r8
800089b0:	2f 1d       	sub	sp,-60
800089b2:	d8 22       	popm	r4-r7,pc

800089b4 <memchr>:
800089b4:	f7 db c0 08 	bfextu	r11,r11,0x0,0x8
800089b8:	c0 68       	rjmp	800089c4 <memchr+0x10>
800089ba:	20 1a       	sub	r10,1
800089bc:	19 88       	ld.ub	r8,r12[0x0]
800089be:	16 38       	cp.w	r8,r11
800089c0:	5e 0c       	reteq	r12
800089c2:	2f fc       	sub	r12,-1
800089c4:	58 0a       	cp.w	r10,0
800089c6:	cf a1       	brne	800089ba <memchr+0x6>
800089c8:	5e fa       	retal	r10

800089ca <memcpy>:
800089ca:	58 8a       	cp.w	r10,8
800089cc:	c2 f5       	brlt	80008a2a <memcpy+0x60>
800089ce:	f9 eb 10 09 	or	r9,r12,r11
800089d2:	e2 19 00 03 	andl	r9,0x3,COH
800089d6:	e0 81 00 97 	brne	80008b04 <memcpy+0x13a>
800089da:	e0 4a 00 20 	cp.w	r10,32
800089de:	c3 b4       	brge	80008a54 <memcpy+0x8a>
800089e0:	f4 08 14 02 	asr	r8,r10,0x2
800089e4:	f0 09 11 08 	rsub	r9,r8,8
800089e8:	fe 09 00 2f 	add	pc,pc,r9<<0x2
800089ec:	76 69       	ld.w	r9,r11[0x18]
800089ee:	99 69       	st.w	r12[0x18],r9
800089f0:	76 59       	ld.w	r9,r11[0x14]
800089f2:	99 59       	st.w	r12[0x14],r9
800089f4:	76 49       	ld.w	r9,r11[0x10]
800089f6:	99 49       	st.w	r12[0x10],r9
800089f8:	76 39       	ld.w	r9,r11[0xc]
800089fa:	99 39       	st.w	r12[0xc],r9
800089fc:	76 29       	ld.w	r9,r11[0x8]
800089fe:	99 29       	st.w	r12[0x8],r9
80008a00:	76 19       	ld.w	r9,r11[0x4]
80008a02:	99 19       	st.w	r12[0x4],r9
80008a04:	76 09       	ld.w	r9,r11[0x0]
80008a06:	99 09       	st.w	r12[0x0],r9
80008a08:	f6 08 00 2b 	add	r11,r11,r8<<0x2
80008a0c:	f8 08 00 28 	add	r8,r12,r8<<0x2
80008a10:	e0 1a 00 03 	andl	r10,0x3
80008a14:	f4 0a 11 04 	rsub	r10,r10,4
80008a18:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
80008a1c:	17 a9       	ld.ub	r9,r11[0x2]
80008a1e:	b0 a9       	st.b	r8[0x2],r9
80008a20:	17 99       	ld.ub	r9,r11[0x1]
80008a22:	b0 99       	st.b	r8[0x1],r9
80008a24:	17 89       	ld.ub	r9,r11[0x0]
80008a26:	b0 89       	st.b	r8[0x0],r9
80008a28:	5e fc       	retal	r12
80008a2a:	f4 0a 11 09 	rsub	r10,r10,9
80008a2e:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
80008a32:	17 f9       	ld.ub	r9,r11[0x7]
80008a34:	b8 f9       	st.b	r12[0x7],r9
80008a36:	17 e9       	ld.ub	r9,r11[0x6]
80008a38:	b8 e9       	st.b	r12[0x6],r9
80008a3a:	17 d9       	ld.ub	r9,r11[0x5]
80008a3c:	b8 d9       	st.b	r12[0x5],r9
80008a3e:	17 c9       	ld.ub	r9,r11[0x4]
80008a40:	b8 c9       	st.b	r12[0x4],r9
80008a42:	17 b9       	ld.ub	r9,r11[0x3]
80008a44:	b8 b9       	st.b	r12[0x3],r9
80008a46:	17 a9       	ld.ub	r9,r11[0x2]
80008a48:	b8 a9       	st.b	r12[0x2],r9
80008a4a:	17 99       	ld.ub	r9,r11[0x1]
80008a4c:	b8 99       	st.b	r12[0x1],r9
80008a4e:	17 89       	ld.ub	r9,r11[0x0]
80008a50:	b8 89       	st.b	r12[0x0],r9
80008a52:	5e fc       	retal	r12
80008a54:	eb cd 40 c0 	pushm	r6-r7,lr
80008a58:	18 99       	mov	r9,r12
80008a5a:	22 0a       	sub	r10,32
80008a5c:	b7 07       	ld.d	r6,r11++
80008a5e:	b3 26       	st.d	r9++,r6
80008a60:	b7 07       	ld.d	r6,r11++
80008a62:	b3 26       	st.d	r9++,r6
80008a64:	b7 07       	ld.d	r6,r11++
80008a66:	b3 26       	st.d	r9++,r6
80008a68:	b7 07       	ld.d	r6,r11++
80008a6a:	b3 26       	st.d	r9++,r6
80008a6c:	22 0a       	sub	r10,32
80008a6e:	cf 74       	brge	80008a5c <memcpy+0x92>
80008a70:	2f 0a       	sub	r10,-16
80008a72:	c0 65       	brlt	80008a7e <memcpy+0xb4>
80008a74:	b7 07       	ld.d	r6,r11++
80008a76:	b3 26       	st.d	r9++,r6
80008a78:	b7 07       	ld.d	r6,r11++
80008a7a:	b3 26       	st.d	r9++,r6
80008a7c:	21 0a       	sub	r10,16
80008a7e:	5c 3a       	neg	r10
80008a80:	fe 0a 00 3f 	add	pc,pc,r10<<0x3
80008a84:	d7 03       	nop
80008a86:	d7 03       	nop
80008a88:	f7 36 00 0e 	ld.ub	r6,r11[14]
80008a8c:	f3 66 00 0e 	st.b	r9[14],r6
80008a90:	f7 36 00 0d 	ld.ub	r6,r11[13]
80008a94:	f3 66 00 0d 	st.b	r9[13],r6
80008a98:	f7 36 00 0c 	ld.ub	r6,r11[12]
80008a9c:	f3 66 00 0c 	st.b	r9[12],r6
80008aa0:	f7 36 00 0b 	ld.ub	r6,r11[11]
80008aa4:	f3 66 00 0b 	st.b	r9[11],r6
80008aa8:	f7 36 00 0a 	ld.ub	r6,r11[10]
80008aac:	f3 66 00 0a 	st.b	r9[10],r6
80008ab0:	f7 36 00 09 	ld.ub	r6,r11[9]
80008ab4:	f3 66 00 09 	st.b	r9[9],r6
80008ab8:	f7 36 00 08 	ld.ub	r6,r11[8]
80008abc:	f3 66 00 08 	st.b	r9[8],r6
80008ac0:	f7 36 00 07 	ld.ub	r6,r11[7]
80008ac4:	f3 66 00 07 	st.b	r9[7],r6
80008ac8:	f7 36 00 06 	ld.ub	r6,r11[6]
80008acc:	f3 66 00 06 	st.b	r9[6],r6
80008ad0:	f7 36 00 05 	ld.ub	r6,r11[5]
80008ad4:	f3 66 00 05 	st.b	r9[5],r6
80008ad8:	f7 36 00 04 	ld.ub	r6,r11[4]
80008adc:	f3 66 00 04 	st.b	r9[4],r6
80008ae0:	f7 36 00 03 	ld.ub	r6,r11[3]
80008ae4:	f3 66 00 03 	st.b	r9[3],r6
80008ae8:	f7 36 00 02 	ld.ub	r6,r11[2]
80008aec:	f3 66 00 02 	st.b	r9[2],r6
80008af0:	f7 36 00 01 	ld.ub	r6,r11[1]
80008af4:	f3 66 00 01 	st.b	r9[1],r6
80008af8:	f7 36 00 00 	ld.ub	r6,r11[0]
80008afc:	f3 66 00 00 	st.b	r9[0],r6
80008b00:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80008b04:	20 1a       	sub	r10,1
80008b06:	f6 0a 07 09 	ld.ub	r9,r11[r10]
80008b0a:	f8 0a 0b 09 	st.b	r12[r10],r9
80008b0e:	cf b1       	brne	80008b04 <memcpy+0x13a>
80008b10:	5e fc       	retal	r12

80008b12 <memmove>:
80008b12:	d4 01       	pushm	lr
80008b14:	18 3b       	cp.w	r11,r12
80008b16:	c1 92       	brcc	80008b48 <memmove+0x36>
80008b18:	f6 0a 00 0e 	add	lr,r11,r10
80008b1c:	1c 3c       	cp.w	r12,lr
80008b1e:	c1 52       	brcc	80008b48 <memmove+0x36>
80008b20:	f8 0a 00 0b 	add	r11,r12,r10
80008b24:	30 09       	mov	r9,0
80008b26:	c0 68       	rjmp	80008b32 <memmove+0x20>
80008b28:	fc 09 07 08 	ld.ub	r8,lr[r9]
80008b2c:	20 1a       	sub	r10,1
80008b2e:	f6 09 0b 08 	st.b	r11[r9],r8
80008b32:	20 19       	sub	r9,1
80008b34:	58 0a       	cp.w	r10,0
80008b36:	cf 91       	brne	80008b28 <memmove+0x16>
80008b38:	d8 02       	popm	pc
80008b3a:	f6 09 07 08 	ld.ub	r8,r11[r9]
80008b3e:	20 1a       	sub	r10,1
80008b40:	f8 09 0b 08 	st.b	r12[r9],r8
80008b44:	2f f9       	sub	r9,-1
80008b46:	c0 28       	rjmp	80008b4a <memmove+0x38>
80008b48:	30 09       	mov	r9,0
80008b4a:	58 0a       	cp.w	r10,0
80008b4c:	cf 71       	brne	80008b3a <memmove+0x28>
80008b4e:	d8 02       	popm	pc

80008b50 <__hi0bits>:
80008b50:	18 98       	mov	r8,r12
80008b52:	f8 09 15 10 	lsl	r9,r12,0x10
80008b56:	e0 18 00 00 	andl	r8,0x0
80008b5a:	f2 0c 17 00 	moveq	r12,r9
80008b5e:	f9 b9 00 10 	moveq	r9,16
80008b62:	f9 b9 01 00 	movne	r9,0
80008b66:	f8 0a 15 08 	lsl	r10,r12,0x8
80008b6a:	18 98       	mov	r8,r12
80008b6c:	e6 18 ff 00 	andh	r8,0xff00,COH
80008b70:	f7 b9 00 f8 	subeq	r9,-8
80008b74:	f4 0c 17 00 	moveq	r12,r10
80008b78:	18 98       	mov	r8,r12
80008b7a:	f8 0a 15 04 	lsl	r10,r12,0x4
80008b7e:	e6 18 f0 00 	andh	r8,0xf000,COH
80008b82:	f7 b9 00 fc 	subeq	r9,-4
80008b86:	f4 0c 17 00 	moveq	r12,r10
80008b8a:	18 98       	mov	r8,r12
80008b8c:	f8 0a 15 02 	lsl	r10,r12,0x2
80008b90:	e6 18 c0 00 	andh	r8,0xc000,COH
80008b94:	f7 b9 00 fe 	subeq	r9,-2
80008b98:	f4 0c 17 00 	moveq	r12,r10
80008b9c:	58 0c       	cp.w	r12,0
80008b9e:	c0 75       	brlt	80008bac <__hi0bits+0x5c>
80008ba0:	ed bc 00 1e 	bld	r12,0x1e
80008ba4:	f9 b9 01 20 	movne	r9,32
80008ba8:	f7 b9 00 ff 	subeq	r9,-1
80008bac:	5e f9       	retal	r9

80008bae <__lo0bits>:
80008bae:	18 9b       	mov	r11,r12
80008bb0:	78 0a       	ld.w	r10,r12[0x0]
80008bb2:	f9 da c0 03 	bfextu	r12,r10,0x0,0x3
80008bb6:	c1 40       	breq	80008bde <__lo0bits+0x30>
80008bb8:	ed ba 00 00 	bld	r10,0x0
80008bbc:	c0 21       	brne	80008bc0 <__lo0bits+0x12>
80008bbe:	5e fd       	retal	0
80008bc0:	f4 09 16 01 	lsr	r9,r10,0x1
80008bc4:	f4 08 16 02 	lsr	r8,r10,0x2
80008bc8:	ed ba 00 01 	bld	r10,0x1
80008bcc:	f7 f9 0a 00 	st.weq	r11[0x0],r9
80008bd0:	f9 bc 00 01 	moveq	r12,1
80008bd4:	f7 f8 1a 00 	st.wne	r11[0x0],r8
80008bd8:	f9 bc 01 02 	movne	r12,2
80008bdc:	5e fc       	retal	r12
80008bde:	f1 da c0 10 	bfextu	r8,r10,0x0,0x10
80008be2:	f4 09 16 10 	lsr	r9,r10,0x10
80008be6:	58 08       	cp.w	r8,0
80008be8:	f2 0a 17 00 	moveq	r10,r9
80008bec:	f9 bc 00 10 	moveq	r12,16
80008bf0:	f4 09 16 08 	lsr	r9,r10,0x8
80008bf4:	58 08       	cp.w	r8,0
80008bf6:	f1 da c0 08 	bfextu	r8,r10,0x0,0x8
80008bfa:	f7 bc 00 f8 	subeq	r12,-8
80008bfe:	f2 0a 17 00 	moveq	r10,r9
80008c02:	f1 da c0 04 	bfextu	r8,r10,0x0,0x4
80008c06:	f4 09 16 04 	lsr	r9,r10,0x4
80008c0a:	58 08       	cp.w	r8,0
80008c0c:	f7 bc 00 fc 	subeq	r12,-4
80008c10:	f2 0a 17 00 	moveq	r10,r9
80008c14:	f1 da c0 02 	bfextu	r8,r10,0x0,0x2
80008c18:	f4 09 16 02 	lsr	r9,r10,0x2
80008c1c:	58 08       	cp.w	r8,0
80008c1e:	f7 bc 00 fe 	subeq	r12,-2
80008c22:	f2 0a 17 00 	moveq	r10,r9
80008c26:	ed ba 00 00 	bld	r10,0x0
80008c2a:	c0 60       	breq	80008c36 <__lo0bits+0x88>
80008c2c:	a1 9a       	lsr	r10,0x1
80008c2e:	c0 31       	brne	80008c34 <__lo0bits+0x86>
80008c30:	32 0c       	mov	r12,32
80008c32:	5e fc       	retal	r12
80008c34:	2f fc       	sub	r12,-1
80008c36:	97 0a       	st.w	r11[0x0],r10
80008c38:	5e fc       	retal	r12

80008c3a <__mcmp>:
80008c3a:	d4 01       	pushm	lr
80008c3c:	16 9a       	mov	r10,r11
80008c3e:	78 48       	ld.w	r8,r12[0x10]
80008c40:	76 49       	ld.w	r9,r11[0x10]
80008c42:	f0 09 01 0b 	sub	r11,r8,r9
80008c46:	c1 51       	brne	80008c70 <__mcmp+0x36>
80008c48:	f2 c8 ff fb 	sub	r8,r9,-5
80008c4c:	a3 68       	lsl	r8,0x2
80008c4e:	f4 08 00 0e 	add	lr,r10,r8
80008c52:	f8 08 00 08 	add	r8,r12,r8
80008c56:	2e cc       	sub	r12,-20
80008c58:	11 4a       	ld.w	r10,--r8
80008c5a:	1d 49       	ld.w	r9,--lr
80008c5c:	12 3a       	cp.w	r10,r9
80008c5e:	c0 60       	breq	80008c6a <__mcmp+0x30>
80008c60:	f9 bb 03 ff 	movlo	r11,-1
80008c64:	f9 bb 02 01 	movhs	r11,1
80008c68:	c0 48       	rjmp	80008c70 <__mcmp+0x36>
80008c6a:	18 38       	cp.w	r8,r12
80008c6c:	fe 9b ff f6 	brhi	80008c58 <__mcmp+0x1e>
80008c70:	16 9c       	mov	r12,r11
80008c72:	d8 02       	popm	pc

80008c74 <_Bfree>:
80008c74:	d4 21       	pushm	r4-r7,lr
80008c76:	18 96       	mov	r6,r12
80008c78:	16 95       	mov	r5,r11
80008c7a:	78 97       	ld.w	r7,r12[0x24]
80008c7c:	58 07       	cp.w	r7,0
80008c7e:	c0 91       	brne	80008c90 <_Bfree+0x1c>
80008c80:	31 0c       	mov	r12,16
80008c82:	fe b0 df 59 	rcall	80004b34 <malloc>
80008c86:	99 37       	st.w	r12[0xc],r7
80008c88:	8d 9c       	st.w	r6[0x24],r12
80008c8a:	99 17       	st.w	r12[0x4],r7
80008c8c:	99 27       	st.w	r12[0x8],r7
80008c8e:	99 07       	st.w	r12[0x0],r7
80008c90:	58 05       	cp.w	r5,0
80008c92:	c0 90       	breq	80008ca4 <_Bfree+0x30>
80008c94:	6c 98       	ld.w	r8,r6[0x24]
80008c96:	6a 19       	ld.w	r9,r5[0x4]
80008c98:	70 3a       	ld.w	r10,r8[0xc]
80008c9a:	f4 09 03 28 	ld.w	r8,r10[r9<<0x2]
80008c9e:	8b 08       	st.w	r5[0x0],r8
80008ca0:	f4 09 09 25 	st.w	r10[r9<<0x2],r5
80008ca4:	d8 22       	popm	r4-r7,pc
80008ca6:	d7 03       	nop

80008ca8 <_Balloc>:
80008ca8:	d4 21       	pushm	r4-r7,lr
80008caa:	18 96       	mov	r6,r12
80008cac:	16 95       	mov	r5,r11
80008cae:	78 97       	ld.w	r7,r12[0x24]
80008cb0:	58 07       	cp.w	r7,0
80008cb2:	c0 91       	brne	80008cc4 <_Balloc+0x1c>
80008cb4:	31 0c       	mov	r12,16
80008cb6:	fe b0 df 3f 	rcall	80004b34 <malloc>
80008cba:	99 37       	st.w	r12[0xc],r7
80008cbc:	8d 9c       	st.w	r6[0x24],r12
80008cbe:	99 17       	st.w	r12[0x4],r7
80008cc0:	99 27       	st.w	r12[0x8],r7
80008cc2:	99 07       	st.w	r12[0x0],r7
80008cc4:	6c 97       	ld.w	r7,r6[0x24]
80008cc6:	6e 38       	ld.w	r8,r7[0xc]
80008cc8:	58 08       	cp.w	r8,0
80008cca:	c0 b1       	brne	80008ce0 <_Balloc+0x38>
80008ccc:	31 0a       	mov	r10,16
80008cce:	30 4b       	mov	r11,4
80008cd0:	0c 9c       	mov	r12,r6
80008cd2:	e0 a0 03 f3 	rcall	800094b8 <_calloc_r>
80008cd6:	8f 3c       	st.w	r7[0xc],r12
80008cd8:	6c 98       	ld.w	r8,r6[0x24]
80008cda:	70 3c       	ld.w	r12,r8[0xc]
80008cdc:	58 0c       	cp.w	r12,0
80008cde:	c1 b0       	breq	80008d14 <_Balloc+0x6c>
80008ce0:	6c 98       	ld.w	r8,r6[0x24]
80008ce2:	70 38       	ld.w	r8,r8[0xc]
80008ce4:	f0 05 00 29 	add	r9,r8,r5<<0x2
80008ce8:	72 0c       	ld.w	r12,r9[0x0]
80008cea:	58 0c       	cp.w	r12,0
80008cec:	c0 40       	breq	80008cf4 <_Balloc+0x4c>
80008cee:	78 08       	ld.w	r8,r12[0x0]
80008cf0:	93 08       	st.w	r9[0x0],r8
80008cf2:	c0 e8       	rjmp	80008d0e <_Balloc+0x66>
80008cf4:	30 18       	mov	r8,1
80008cf6:	0c 9c       	mov	r12,r6
80008cf8:	f0 05 09 47 	lsl	r7,r8,r5
80008cfc:	10 9b       	mov	r11,r8
80008cfe:	ee ca ff fb 	sub	r10,r7,-5
80008d02:	a3 6a       	lsl	r10,0x2
80008d04:	e0 a0 03 da 	rcall	800094b8 <_calloc_r>
80008d08:	c0 60       	breq	80008d14 <_Balloc+0x6c>
80008d0a:	99 15       	st.w	r12[0x4],r5
80008d0c:	99 27       	st.w	r12[0x8],r7
80008d0e:	30 08       	mov	r8,0
80008d10:	99 38       	st.w	r12[0xc],r8
80008d12:	99 48       	st.w	r12[0x10],r8
80008d14:	d8 22       	popm	r4-r7,pc
80008d16:	d7 03       	nop

80008d18 <__d2b>:
80008d18:	d4 31       	pushm	r0-r7,lr
80008d1a:	20 2d       	sub	sp,8
80008d1c:	16 97       	mov	r7,r11
80008d1e:	14 96       	mov	r6,r10
80008d20:	12 93       	mov	r3,r9
80008d22:	10 92       	mov	r2,r8
80008d24:	30 1b       	mov	r11,1
80008d26:	cc 1f       	rcall	80008ca8 <_Balloc>
80008d28:	f5 d7 c0 14 	bfextu	r10,r7,0x0,0x14
80008d2c:	50 0a       	stdsp	sp[0x0],r10
80008d2e:	0e 98       	mov	r8,r7
80008d30:	f3 d7 c0 1f 	bfextu	r9,r7,0x0,0x1f
80008d34:	f2 04 16 14 	lsr	r4,r9,0x14
80008d38:	fc 1b 00 10 	movh	r11,0x10
80008d3c:	f5 db e1 38 	orne	r8,r10,r11
80008d40:	fb f8 1a 00 	st.wne	sp[0x0],r8
80008d44:	18 95       	mov	r5,r12
80008d46:	58 06       	cp.w	r6,0
80008d48:	c1 c0       	breq	80008d80 <__d2b+0x68>
80008d4a:	fa cc ff f8 	sub	r12,sp,-8
80008d4e:	18 d6       	st.w	--r12,r6
80008d50:	c2 ff       	rcall	80008bae <__lo0bits>
80008d52:	40 1a       	lddsp	r10,sp[0x4]
80008d54:	c0 c0       	breq	80008d6c <__d2b+0x54>
80008d56:	40 09       	lddsp	r9,sp[0x0]
80008d58:	f8 08 11 20 	rsub	r8,r12,32
80008d5c:	f2 08 09 48 	lsl	r8,r9,r8
80008d60:	14 48       	or	r8,r10
80008d62:	8b 58       	st.w	r5[0x14],r8
80008d64:	f2 0c 0a 49 	lsr	r9,r9,r12
80008d68:	50 09       	stdsp	sp[0x0],r9
80008d6a:	c0 28       	rjmp	80008d6e <__d2b+0x56>
80008d6c:	8b 5a       	st.w	r5[0x14],r10
80008d6e:	40 08       	lddsp	r8,sp[0x0]
80008d70:	58 08       	cp.w	r8,0
80008d72:	f9 b7 01 02 	movne	r7,2
80008d76:	f9 b7 00 01 	moveq	r7,1
80008d7a:	8b 68       	st.w	r5[0x18],r8
80008d7c:	8b 47       	st.w	r5[0x10],r7
80008d7e:	c0 98       	rjmp	80008d90 <__d2b+0x78>
80008d80:	1a 9c       	mov	r12,sp
80008d82:	c1 6f       	rcall	80008bae <__lo0bits>
80008d84:	30 18       	mov	r8,1
80008d86:	2e 0c       	sub	r12,-32
80008d88:	8b 48       	st.w	r5[0x10],r8
80008d8a:	10 97       	mov	r7,r8
80008d8c:	40 08       	lddsp	r8,sp[0x0]
80008d8e:	8b 58       	st.w	r5[0x14],r8
80008d90:	58 04       	cp.w	r4,0
80008d92:	c0 90       	breq	80008da4 <__d2b+0x8c>
80008d94:	e8 c8 04 33 	sub	r8,r4,1075
80008d98:	18 08       	add	r8,r12
80008d9a:	87 08       	st.w	r3[0x0],r8
80008d9c:	f8 0c 11 35 	rsub	r12,r12,53
80008da0:	85 0c       	st.w	r2[0x0],r12
80008da2:	c0 c8       	rjmp	80008dba <__d2b+0xa2>
80008da4:	f8 c8 04 32 	sub	r8,r12,1074
80008da8:	87 08       	st.w	r3[0x0],r8
80008daa:	ea 07 00 28 	add	r8,r5,r7<<0x2
80008dae:	70 4c       	ld.w	r12,r8[0x10]
80008db0:	cd 0e       	rcall	80008b50 <__hi0bits>
80008db2:	ee 08 15 05 	lsl	r8,r7,0x5
80008db6:	18 18       	sub	r8,r12
80008db8:	85 08       	st.w	r2[0x0],r8
80008dba:	0a 9c       	mov	r12,r5
80008dbc:	2f ed       	sub	sp,-8
80008dbe:	d8 32       	popm	r0-r7,pc

80008dc0 <__mdiff>:
80008dc0:	d4 31       	pushm	r0-r7,lr
80008dc2:	74 49       	ld.w	r9,r10[0x10]
80008dc4:	76 48       	ld.w	r8,r11[0x10]
80008dc6:	16 97       	mov	r7,r11
80008dc8:	14 96       	mov	r6,r10
80008dca:	f0 09 01 05 	sub	r5,r8,r9
80008dce:	c1 41       	brne	80008df6 <__mdiff+0x36>
80008dd0:	f2 c8 ff fb 	sub	r8,r9,-5
80008dd4:	ee ce ff ec 	sub	lr,r7,-20
80008dd8:	a3 68       	lsl	r8,0x2
80008dda:	f4 08 00 0b 	add	r11,r10,r8
80008dde:	ee 08 00 08 	add	r8,r7,r8
80008de2:	11 4a       	ld.w	r10,--r8
80008de4:	17 49       	ld.w	r9,--r11
80008de6:	12 3a       	cp.w	r10,r9
80008de8:	c0 30       	breq	80008dee <__mdiff+0x2e>
80008dea:	c0 e2       	brcc	80008e06 <__mdiff+0x46>
80008dec:	c0 78       	rjmp	80008dfa <__mdiff+0x3a>
80008dee:	1c 38       	cp.w	r8,lr
80008df0:	fe 9b ff f9 	brhi	80008de2 <__mdiff+0x22>
80008df4:	c4 98       	rjmp	80008e86 <__mdiff+0xc6>
80008df6:	58 05       	cp.w	r5,0
80008df8:	c0 64       	brge	80008e04 <__mdiff+0x44>
80008dfa:	0c 98       	mov	r8,r6
80008dfc:	30 15       	mov	r5,1
80008dfe:	0e 96       	mov	r6,r7
80008e00:	10 97       	mov	r7,r8
80008e02:	c0 28       	rjmp	80008e06 <__mdiff+0x46>
80008e04:	30 05       	mov	r5,0
80008e06:	6e 1b       	ld.w	r11,r7[0x4]
80008e08:	c5 0f       	rcall	80008ca8 <_Balloc>
80008e0a:	6c 48       	ld.w	r8,r6[0x10]
80008e0c:	2f b8       	sub	r8,-5
80008e0e:	6e 44       	ld.w	r4,r7[0x10]
80008e10:	ec 08 00 23 	add	r3,r6,r8<<0x2
80008e14:	99 35       	st.w	r12[0xc],r5
80008e16:	e8 c8 ff fb 	sub	r8,r4,-5
80008e1a:	ee c5 ff ec 	sub	r5,r7,-20
80008e1e:	ee 08 00 22 	add	r2,r7,r8<<0x2
80008e22:	2e c6       	sub	r6,-20
80008e24:	f8 ce ff ec 	sub	lr,r12,-20
80008e28:	30 07       	mov	r7,0
80008e2a:	0b 08       	ld.w	r8,r5++
80008e2c:	0d 09       	ld.w	r9,r6++
80008e2e:	f0 0b 16 10 	lsr	r11,r8,0x10
80008e32:	f2 0a 16 10 	lsr	r10,r9,0x10
80008e36:	f1 d8 c0 10 	bfextu	r8,r8,0x0,0x10
80008e3a:	14 1b       	sub	r11,r10
80008e3c:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
80008e40:	12 18       	sub	r8,r9
80008e42:	0e 08       	add	r8,r7
80008e44:	bc 18       	st.h	lr[0x2],r8
80008e46:	b1 48       	asr	r8,0x10
80008e48:	10 0b       	add	r11,r8
80008e4a:	bc 0b       	st.h	lr[0x0],r11
80008e4c:	f6 07 14 10 	asr	r7,r11,0x10
80008e50:	2f ce       	sub	lr,-4
80008e52:	06 36       	cp.w	r6,r3
80008e54:	ce b3       	brcs	80008e2a <__mdiff+0x6a>
80008e56:	c0 f8       	rjmp	80008e74 <__mdiff+0xb4>
80008e58:	0b 08       	ld.w	r8,r5++
80008e5a:	f0 09 16 10 	lsr	r9,r8,0x10
80008e5e:	f1 d8 c0 10 	bfextu	r8,r8,0x0,0x10
80008e62:	ee 08 00 08 	add	r8,r7,r8
80008e66:	bc 18       	st.h	lr[0x2],r8
80008e68:	b1 48       	asr	r8,0x10
80008e6a:	12 08       	add	r8,r9
80008e6c:	bc 08       	st.h	lr[0x0],r8
80008e6e:	f0 07 14 10 	asr	r7,r8,0x10
80008e72:	2f ce       	sub	lr,-4
80008e74:	04 35       	cp.w	r5,r2
80008e76:	cf 13       	brcs	80008e58 <__mdiff+0x98>
80008e78:	c0 28       	rjmp	80008e7c <__mdiff+0xbc>
80008e7a:	20 14       	sub	r4,1
80008e7c:	1d 48       	ld.w	r8,--lr
80008e7e:	58 08       	cp.w	r8,0
80008e80:	cf d0       	breq	80008e7a <__mdiff+0xba>
80008e82:	99 44       	st.w	r12[0x10],r4
80008e84:	d8 32       	popm	r0-r7,pc
80008e86:	30 0b       	mov	r11,0
80008e88:	c1 0f       	rcall	80008ca8 <_Balloc>
80008e8a:	30 18       	mov	r8,1
80008e8c:	99 48       	st.w	r12[0x10],r8
80008e8e:	30 08       	mov	r8,0
80008e90:	99 58       	st.w	r12[0x14],r8
80008e92:	d8 32       	popm	r0-r7,pc

80008e94 <__lshift>:
80008e94:	d4 31       	pushm	r0-r7,lr
80008e96:	76 48       	ld.w	r8,r11[0x10]
80008e98:	2f f8       	sub	r8,-1
80008e9a:	16 97       	mov	r7,r11
80008e9c:	f4 04 14 05 	asr	r4,r10,0x5
80008ea0:	14 93       	mov	r3,r10
80008ea2:	f0 04 00 06 	add	r6,r8,r4
80008ea6:	18 92       	mov	r2,r12
80008ea8:	76 1b       	ld.w	r11,r11[0x4]
80008eaa:	6e 28       	ld.w	r8,r7[0x8]
80008eac:	c0 38       	rjmp	80008eb2 <__lshift+0x1e>
80008eae:	2f fb       	sub	r11,-1
80008eb0:	a1 78       	lsl	r8,0x1
80008eb2:	10 36       	cp.w	r6,r8
80008eb4:	fe 99 ff fd 	brgt	80008eae <__lshift+0x1a>
80008eb8:	04 9c       	mov	r12,r2
80008eba:	cf 7e       	rcall	80008ca8 <_Balloc>
80008ebc:	30 08       	mov	r8,0
80008ebe:	18 95       	mov	r5,r12
80008ec0:	10 99       	mov	r9,r8
80008ec2:	2e cc       	sub	r12,-20
80008ec4:	c0 38       	rjmp	80008eca <__lshift+0x36>
80008ec6:	18 a9       	st.w	r12++,r9
80008ec8:	2f f8       	sub	r8,-1
80008eca:	08 38       	cp.w	r8,r4
80008ecc:	cf d5       	brlt	80008ec6 <__lshift+0x32>
80008ece:	6e 48       	ld.w	r8,r7[0x10]
80008ed0:	f5 d3 c0 05 	bfextu	r10,r3,0x0,0x5
80008ed4:	2f b8       	sub	r8,-5
80008ed6:	ee c9 ff ec 	sub	r9,r7,-20
80008eda:	ee 08 00 24 	add	r4,r7,r8<<0x2
80008ede:	58 0a       	cp.w	r10,0
80008ee0:	c1 40       	breq	80008f08 <__lshift+0x74>
80008ee2:	f4 0e 11 20 	rsub	lr,r10,32
80008ee6:	30 0b       	mov	r11,0
80008ee8:	72 08       	ld.w	r8,r9[0x0]
80008eea:	f0 0a 09 48 	lsl	r8,r8,r10
80008eee:	f7 e8 10 08 	or	r8,r11,r8
80008ef2:	18 a8       	st.w	r12++,r8
80008ef4:	13 08       	ld.w	r8,r9++
80008ef6:	f0 0e 0a 4b 	lsr	r11,r8,lr
80008efa:	08 39       	cp.w	r9,r4
80008efc:	cf 63       	brcs	80008ee8 <__lshift+0x54>
80008efe:	99 0b       	st.w	r12[0x0],r11
80008f00:	58 0b       	cp.w	r11,0
80008f02:	c0 70       	breq	80008f10 <__lshift+0x7c>
80008f04:	2f f6       	sub	r6,-1
80008f06:	c0 58       	rjmp	80008f10 <__lshift+0x7c>
80008f08:	13 08       	ld.w	r8,r9++
80008f0a:	18 a8       	st.w	r12++,r8
80008f0c:	08 39       	cp.w	r9,r4
80008f0e:	cf d3       	brcs	80008f08 <__lshift+0x74>
80008f10:	ec c8 00 01 	sub	r8,r6,1
80008f14:	04 9c       	mov	r12,r2
80008f16:	8b 48       	st.w	r5[0x10],r8
80008f18:	0e 9b       	mov	r11,r7
80008f1a:	ca de       	rcall	80008c74 <_Bfree>
80008f1c:	0a 9c       	mov	r12,r5
80008f1e:	d8 32       	popm	r0-r7,pc

80008f20 <__multiply>:
80008f20:	d4 31       	pushm	r0-r7,lr
80008f22:	20 2d       	sub	sp,8
80008f24:	16 97       	mov	r7,r11
80008f26:	76 49       	ld.w	r9,r11[0x10]
80008f28:	74 48       	ld.w	r8,r10[0x10]
80008f2a:	14 96       	mov	r6,r10
80008f2c:	10 39       	cp.w	r9,r8
80008f2e:	ec 08 17 50 	movlt	r8,r6
80008f32:	ee 06 17 50 	movlt	r6,r7
80008f36:	f0 07 17 50 	movlt	r7,r8
80008f3a:	6e 28       	ld.w	r8,r7[0x8]
80008f3c:	76 45       	ld.w	r5,r11[0x10]
80008f3e:	74 44       	ld.w	r4,r10[0x10]
80008f40:	76 1b       	ld.w	r11,r11[0x4]
80008f42:	e8 05 00 03 	add	r3,r4,r5
80008f46:	10 33       	cp.w	r3,r8
80008f48:	f7 bb 09 ff 	subgt	r11,-1
80008f4c:	ca ee       	rcall	80008ca8 <_Balloc>
80008f4e:	e6 c8 ff fb 	sub	r8,r3,-5
80008f52:	f8 08 00 28 	add	r8,r12,r8<<0x2
80008f56:	f8 c9 ff ec 	sub	r9,r12,-20
80008f5a:	50 08       	stdsp	sp[0x0],r8
80008f5c:	18 92       	mov	r2,r12
80008f5e:	30 0a       	mov	r10,0
80008f60:	12 98       	mov	r8,r9
80008f62:	c0 28       	rjmp	80008f66 <__multiply+0x46>
80008f64:	10 aa       	st.w	r8++,r10
80008f66:	40 0b       	lddsp	r11,sp[0x0]
80008f68:	16 38       	cp.w	r8,r11
80008f6a:	cf d3       	brcs	80008f64 <__multiply+0x44>
80008f6c:	ea c8 ff fb 	sub	r8,r5,-5
80008f70:	ee c1 ff ec 	sub	r1,r7,-20
80008f74:	ee 08 00 20 	add	r0,r7,r8<<0x2
80008f78:	ec c5 ff ec 	sub	r5,r6,-20
80008f7c:	e8 c8 ff fb 	sub	r8,r4,-5
80008f80:	12 94       	mov	r4,r9
80008f82:	ec 08 00 28 	add	r8,r6,r8<<0x2
80008f86:	50 18       	stdsp	sp[0x4],r8
80008f88:	c3 e8       	rjmp	80009004 <__multiply+0xe4>
80008f8a:	8a 9c       	ld.uh	r12,r5[0x2]
80008f8c:	58 0c       	cp.w	r12,0
80008f8e:	c1 d0       	breq	80008fc8 <__multiply+0xa8>
80008f90:	02 96       	mov	r6,r1
80008f92:	08 9e       	mov	lr,r4
80008f94:	30 07       	mov	r7,0
80008f96:	7c 0a       	ld.w	r10,lr[0x0]
80008f98:	0d 08       	ld.w	r8,r6++
80008f9a:	f4 0b 16 10 	lsr	r11,r10,0x10
80008f9e:	f0 09 16 10 	lsr	r9,r8,0x10
80008fa2:	f5 da c0 10 	bfextu	r10,r10,0x0,0x10
80008fa6:	b9 39       	mul	r9,r12
80008fa8:	f1 d8 c0 10 	bfextu	r8,r8,0x0,0x10
80008fac:	16 09       	add	r9,r11
80008fae:	b9 38       	mul	r8,r12
80008fb0:	14 08       	add	r8,r10
80008fb2:	0e 08       	add	r8,r7
80008fb4:	bc 18       	st.h	lr[0x2],r8
80008fb6:	b1 88       	lsr	r8,0x10
80008fb8:	10 09       	add	r9,r8
80008fba:	bc 09       	st.h	lr[0x0],r9
80008fbc:	f2 07 16 10 	lsr	r7,r9,0x10
80008fc0:	2f ce       	sub	lr,-4
80008fc2:	00 36       	cp.w	r6,r0
80008fc4:	ce 93       	brcs	80008f96 <__multiply+0x76>
80008fc6:	9d 07       	st.w	lr[0x0],r7
80008fc8:	8a 87       	ld.uh	r7,r5[0x0]
80008fca:	58 07       	cp.w	r7,0
80008fcc:	c1 a0       	breq	80009000 <__multiply+0xe0>
80008fce:	68 09       	ld.w	r9,r4[0x0]
80008fd0:	02 9e       	mov	lr,r1
80008fd2:	08 9b       	mov	r11,r4
80008fd4:	30 06       	mov	r6,0
80008fd6:	96 8a       	ld.uh	r10,r11[0x0]
80008fd8:	b6 19       	st.h	r11[0x2],r9
80008fda:	1d 09       	ld.w	r9,lr++
80008fdc:	f1 d9 c0 10 	bfextu	r8,r9,0x0,0x10
80008fe0:	af 38       	mul	r8,r7
80008fe2:	14 08       	add	r8,r10
80008fe4:	0c 08       	add	r8,r6
80008fe6:	b6 08       	st.h	r11[0x0],r8
80008fe8:	b1 89       	lsr	r9,0x10
80008fea:	2f cb       	sub	r11,-4
80008fec:	af 39       	mul	r9,r7
80008fee:	b1 88       	lsr	r8,0x10
80008ff0:	96 9a       	ld.uh	r10,r11[0x2]
80008ff2:	14 09       	add	r9,r10
80008ff4:	10 09       	add	r9,r8
80008ff6:	f2 06 16 10 	lsr	r6,r9,0x10
80008ffa:	00 3e       	cp.w	lr,r0
80008ffc:	ce d3       	brcs	80008fd6 <__multiply+0xb6>
80008ffe:	97 09       	st.w	r11[0x0],r9
80009000:	2f c5       	sub	r5,-4
80009002:	2f c4       	sub	r4,-4
80009004:	40 18       	lddsp	r8,sp[0x4]
80009006:	10 35       	cp.w	r5,r8
80009008:	cc 13       	brcs	80008f8a <__multiply+0x6a>
8000900a:	40 09       	lddsp	r9,sp[0x0]
8000900c:	c0 28       	rjmp	80009010 <__multiply+0xf0>
8000900e:	20 13       	sub	r3,1
80009010:	58 03       	cp.w	r3,0
80009012:	e0 8a 00 05 	brle	8000901c <__multiply+0xfc>
80009016:	13 48       	ld.w	r8,--r9
80009018:	58 08       	cp.w	r8,0
8000901a:	cf a0       	breq	8000900e <__multiply+0xee>
8000901c:	85 43       	st.w	r2[0x10],r3
8000901e:	04 9c       	mov	r12,r2
80009020:	2f ed       	sub	sp,-8
80009022:	d8 32       	popm	r0-r7,pc

80009024 <__i2b>:
80009024:	d4 21       	pushm	r4-r7,lr
80009026:	16 96       	mov	r6,r11
80009028:	30 1b       	mov	r11,1
8000902a:	c3 fe       	rcall	80008ca8 <_Balloc>
8000902c:	30 18       	mov	r8,1
8000902e:	99 56       	st.w	r12[0x14],r6
80009030:	99 48       	st.w	r12[0x10],r8
80009032:	d8 22       	popm	r4-r7,pc

80009034 <__multadd>:
80009034:	d4 31       	pushm	r0-r7,lr
80009036:	16 97       	mov	r7,r11
80009038:	18 93       	mov	r3,r12
8000903a:	76 44       	ld.w	r4,r11[0x10]
8000903c:	f6 cc ff ec 	sub	r12,r11,-20
80009040:	14 9e       	mov	lr,r10
80009042:	12 95       	mov	r5,r9
80009044:	30 0b       	mov	r11,0
80009046:	78 09       	ld.w	r9,r12[0x0]
80009048:	f2 08 16 10 	lsr	r8,r9,0x10
8000904c:	fc 08 02 48 	mul	r8,lr,r8
80009050:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
80009054:	fc 09 02 49 	mul	r9,lr,r9
80009058:	ea 09 00 09 	add	r9,r5,r9
8000905c:	f5 d9 c0 10 	bfextu	r10,r9,0x0,0x10
80009060:	b1 89       	lsr	r9,0x10
80009062:	10 09       	add	r9,r8
80009064:	f2 08 15 10 	lsl	r8,r9,0x10
80009068:	14 08       	add	r8,r10
8000906a:	18 a8       	st.w	r12++,r8
8000906c:	2f fb       	sub	r11,-1
8000906e:	f2 05 16 10 	lsr	r5,r9,0x10
80009072:	08 3b       	cp.w	r11,r4
80009074:	ce 95       	brlt	80009046 <__multadd+0x12>
80009076:	58 05       	cp.w	r5,0
80009078:	c1 d0       	breq	800090b2 <__multadd+0x7e>
8000907a:	6e 28       	ld.w	r8,r7[0x8]
8000907c:	10 34       	cp.w	r4,r8
8000907e:	c1 35       	brlt	800090a4 <__multadd+0x70>
80009080:	6e 1b       	ld.w	r11,r7[0x4]
80009082:	06 9c       	mov	r12,r3
80009084:	2f fb       	sub	r11,-1
80009086:	c1 1e       	rcall	80008ca8 <_Balloc>
80009088:	6e 4a       	ld.w	r10,r7[0x10]
8000908a:	ee cb ff f4 	sub	r11,r7,-12
8000908e:	18 96       	mov	r6,r12
80009090:	2f ea       	sub	r10,-2
80009092:	2f 4c       	sub	r12,-12
80009094:	a3 6a       	lsl	r10,0x2
80009096:	fe b0 fc 9a 	rcall	800089ca <memcpy>
8000909a:	0e 9b       	mov	r11,r7
8000909c:	06 9c       	mov	r12,r3
8000909e:	fe b0 fd eb 	rcall	80008c74 <_Bfree>
800090a2:	0c 97       	mov	r7,r6
800090a4:	e8 c8 ff ff 	sub	r8,r4,-1
800090a8:	8f 48       	st.w	r7[0x10],r8
800090aa:	e8 c8 ff fb 	sub	r8,r4,-5
800090ae:	ee 08 09 25 	st.w	r7[r8<<0x2],r5
800090b2:	0e 9c       	mov	r12,r7
800090b4:	d8 32       	popm	r0-r7,pc
800090b6:	d7 03       	nop

800090b8 <__pow5mult>:
800090b8:	d4 31       	pushm	r0-r7,lr
800090ba:	14 97       	mov	r7,r10
800090bc:	18 95       	mov	r5,r12
800090be:	16 93       	mov	r3,r11
800090c0:	f3 da c0 02 	bfextu	r9,r10,0x0,0x2
800090c4:	c0 80       	breq	800090d4 <__pow5mult+0x1c>
800090c6:	20 19       	sub	r9,1
800090c8:	49 f8       	lddpc	r8,80009144 <__pow5mult+0x8c>
800090ca:	f0 09 03 2a 	ld.w	r10,r8[r9<<0x2]
800090ce:	30 09       	mov	r9,0
800090d0:	cb 2f       	rcall	80009034 <__multadd>
800090d2:	18 93       	mov	r3,r12
800090d4:	ee 04 14 02 	asr	r4,r7,0x2
800090d8:	c3 40       	breq	80009140 <__pow5mult+0x88>
800090da:	6a 96       	ld.w	r6,r5[0x24]
800090dc:	58 06       	cp.w	r6,0
800090de:	c0 91       	brne	800090f0 <__pow5mult+0x38>
800090e0:	31 0c       	mov	r12,16
800090e2:	fe b0 dd 29 	rcall	80004b34 <malloc>
800090e6:	99 36       	st.w	r12[0xc],r6
800090e8:	8b 9c       	st.w	r5[0x24],r12
800090ea:	99 16       	st.w	r12[0x4],r6
800090ec:	99 26       	st.w	r12[0x8],r6
800090ee:	99 06       	st.w	r12[0x0],r6
800090f0:	6a 96       	ld.w	r6,r5[0x24]
800090f2:	6c 27       	ld.w	r7,r6[0x8]
800090f4:	58 07       	cp.w	r7,0
800090f6:	c0 c1       	brne	8000910e <__pow5mult+0x56>
800090f8:	e0 6b 02 71 	mov	r11,625
800090fc:	0a 9c       	mov	r12,r5
800090fe:	c9 3f       	rcall	80009024 <__i2b>
80009100:	8d 2c       	st.w	r6[0x8],r12
80009102:	30 08       	mov	r8,0
80009104:	18 97       	mov	r7,r12
80009106:	99 08       	st.w	r12[0x0],r8
80009108:	c0 38       	rjmp	8000910e <__pow5mult+0x56>
8000910a:	0c 9c       	mov	r12,r6
8000910c:	18 97       	mov	r7,r12
8000910e:	ed b4 00 00 	bld	r4,0x0
80009112:	c0 b1       	brne	80009128 <__pow5mult+0x70>
80009114:	06 9b       	mov	r11,r3
80009116:	0e 9a       	mov	r10,r7
80009118:	0a 9c       	mov	r12,r5
8000911a:	c0 3f       	rcall	80008f20 <__multiply>
8000911c:	06 9b       	mov	r11,r3
8000911e:	18 96       	mov	r6,r12
80009120:	0a 9c       	mov	r12,r5
80009122:	0c 93       	mov	r3,r6
80009124:	fe b0 fd a8 	rcall	80008c74 <_Bfree>
80009128:	a1 54       	asr	r4,0x1
8000912a:	c0 b0       	breq	80009140 <__pow5mult+0x88>
8000912c:	6e 06       	ld.w	r6,r7[0x0]
8000912e:	58 06       	cp.w	r6,0
80009130:	ce d1       	brne	8000910a <__pow5mult+0x52>
80009132:	0e 9a       	mov	r10,r7
80009134:	0e 9b       	mov	r11,r7
80009136:	0a 9c       	mov	r12,r5
80009138:	cf 4e       	rcall	80008f20 <__multiply>
8000913a:	8f 0c       	st.w	r7[0x0],r12
8000913c:	99 06       	st.w	r12[0x0],r6
8000913e:	ce 7b       	rjmp	8000910c <__pow5mult+0x54>
80009140:	06 9c       	mov	r12,r3
80009142:	d8 32       	popm	r0-r7,pc
80009144:	80 00       	ld.sh	r0,r0[0x0]
80009146:	ab 18       	ld.d	r8,--r5

80009148 <_read_r>:
80009148:	d4 21       	pushm	r4-r7,lr
8000914a:	16 98       	mov	r8,r11
8000914c:	18 96       	mov	r6,r12
8000914e:	10 9c       	mov	r12,r8
80009150:	30 08       	mov	r8,0
80009152:	14 9b       	mov	r11,r10
80009154:	48 67       	lddpc	r7,8000916c <_read_r+0x24>
80009156:	12 9a       	mov	r10,r9
80009158:	8f 08       	st.w	r7[0x0],r8
8000915a:	fe b0 d7 d5 	rcall	80004104 <_read>
8000915e:	5b fc       	cp.w	r12,-1
80009160:	c0 51       	brne	8000916a <_read_r+0x22>
80009162:	6e 08       	ld.w	r8,r7[0x0]
80009164:	58 08       	cp.w	r8,0
80009166:	ed f8 1a 03 	st.wne	r6[0xc],r8
8000916a:	d8 22       	popm	r4-r7,pc
8000916c:	00 00       	add	r0,r0
8000916e:	07 48       	ld.w	r8,--r3

80009170 <_realloc_r>:
80009170:	d4 31       	pushm	r0-r7,lr
80009172:	20 1d       	sub	sp,4
80009174:	16 94       	mov	r4,r11
80009176:	14 91       	mov	r1,r10
80009178:	18 90       	mov	r0,r12
8000917a:	58 0b       	cp.w	r11,0
8000917c:	c0 61       	brne	80009188 <_realloc_r+0x18>
8000917e:	14 9b       	mov	r11,r10
80009180:	fe b0 dc e2 	rcall	80004b44 <_malloc_r>
80009184:	18 93       	mov	r3,r12
80009186:	c6 d9       	rjmp	80009460 <_realloc_r+0x2f0>
80009188:	fe b0 df 13 	rcall	80004fae <__malloc_lock>
8000918c:	e2 c8 ff f5 	sub	r8,r1,-11
80009190:	e8 c6 00 08 	sub	r6,r4,8
80009194:	59 68       	cp.w	r8,22
80009196:	f9 b2 08 10 	movls	r2,16
8000919a:	f9 b9 0b f8 	movhi	r9,-8
8000919e:	f1 d9 eb 22 	andhi	r2,r8,r9
800091a2:	6c 1e       	ld.w	lr,r6[0x4]
800091a4:	02 32       	cp.w	r2,r1
800091a6:	5f 38       	srlo	r8
800091a8:	f1 e2 13 f8 	or	r8,r8,r2>>0x1f
800091ac:	c0 50       	breq	800091b6 <_realloc_r+0x46>
800091ae:	30 c8       	mov	r8,12
800091b0:	30 03       	mov	r3,0
800091b2:	81 38       	st.w	r0[0xc],r8
800091b4:	c5 69       	rjmp	80009460 <_realloc_r+0x2f0>
800091b6:	1c 95       	mov	r5,lr
800091b8:	e0 15 ff fc 	andl	r5,0xfffc
800091bc:	04 35       	cp.w	r5,r2
800091be:	e0 84 01 26 	brge	8000940a <_realloc_r+0x29a>
800091c2:	4c a8       	lddpc	r8,800092e8 <_realloc_r+0x178>
800091c4:	ec 05 00 0a 	add	r10,r6,r5
800091c8:	70 2c       	ld.w	r12,r8[0x8]
800091ca:	18 3a       	cp.w	r10,r12
800091cc:	c0 90       	breq	800091de <_realloc_r+0x6e>
800091ce:	74 18       	ld.w	r8,r10[0x4]
800091d0:	a1 c8       	cbr	r8,0x0
800091d2:	f4 08 00 08 	add	r8,r10,r8
800091d6:	70 18       	ld.w	r8,r8[0x4]
800091d8:	ed b8 00 00 	bld	r8,0x0
800091dc:	c2 70       	breq	8000922a <_realloc_r+0xba>
800091de:	74 1b       	ld.w	r11,r10[0x4]
800091e0:	e0 1b ff fc 	andl	r11,0xfffc
800091e4:	f6 05 00 09 	add	r9,r11,r5
800091e8:	18 3a       	cp.w	r10,r12
800091ea:	c1 71       	brne	80009218 <_realloc_r+0xa8>
800091ec:	e4 c8 ff f0 	sub	r8,r2,-16
800091f0:	10 39       	cp.w	r9,r8
800091f2:	c1 e5       	brlt	8000922e <_realloc_r+0xbe>
800091f4:	f2 02 01 08 	sub	r8,r9,r2
800091f8:	ec 02 00 09 	add	r9,r6,r2
800091fc:	a1 a8       	sbr	r8,0x0
800091fe:	93 18       	st.w	r9[0x4],r8
80009200:	4b aa       	lddpc	r10,800092e8 <_realloc_r+0x178>
80009202:	6c 18       	ld.w	r8,r6[0x4]
80009204:	95 29       	st.w	r10[0x8],r9
80009206:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
8000920a:	00 9c       	mov	r12,r0
8000920c:	e5 e8 10 08 	or	r8,r2,r8
80009210:	ec c3 ff f8 	sub	r3,r6,-8
80009214:	8d 18       	st.w	r6[0x4],r8
80009216:	c2 39       	rjmp	8000945c <_realloc_r+0x2ec>
80009218:	12 93       	mov	r3,r9
8000921a:	04 39       	cp.w	r9,r2
8000921c:	c0 95       	brlt	8000922e <_realloc_r+0xbe>
8000921e:	74 29       	ld.w	r9,r10[0x8]
80009220:	74 38       	ld.w	r8,r10[0xc]
80009222:	0c 97       	mov	r7,r6
80009224:	91 29       	st.w	r8[0x8],r9
80009226:	93 38       	st.w	r9[0xc],r8
80009228:	cf 38       	rjmp	8000940e <_realloc_r+0x29e>
8000922a:	30 0a       	mov	r10,0
8000922c:	14 9b       	mov	r11,r10
8000922e:	ed be 00 00 	bld	lr,0x0
80009232:	e0 80 00 a4 	breq	8000937a <_realloc_r+0x20a>
80009236:	6c 08       	ld.w	r8,r6[0x0]
80009238:	ec 08 01 07 	sub	r7,r6,r8
8000923c:	6e 19       	ld.w	r9,r7[0x4]
8000923e:	e0 19 ff fc 	andl	r9,0xfffc
80009242:	58 0a       	cp.w	r10,0
80009244:	c6 10       	breq	80009306 <_realloc_r+0x196>
80009246:	f2 05 00 08 	add	r8,r9,r5
8000924a:	18 3a       	cp.w	r10,r12
8000924c:	c5 01       	brne	800092ec <_realloc_r+0x17c>
8000924e:	16 08       	add	r8,r11
80009250:	50 08       	stdsp	sp[0x0],r8
80009252:	e4 c8 ff f0 	sub	r8,r2,-16
80009256:	40 0a       	lddsp	r10,sp[0x0]
80009258:	10 3a       	cp.w	r10,r8
8000925a:	c5 65       	brlt	80009306 <_realloc_r+0x196>
8000925c:	6e 39       	ld.w	r9,r7[0xc]
8000925e:	6e 28       	ld.w	r8,r7[0x8]
80009260:	93 28       	st.w	r9[0x8],r8
80009262:	91 39       	st.w	r8[0xc],r9
80009264:	ea cb 00 04 	sub	r11,r5,4
80009268:	ee c3 ff f8 	sub	r3,r7,-8
8000926c:	e0 4b 00 24 	cp.w	r11,36
80009270:	e0 8b 00 27 	brhi	800092be <_realloc_r+0x14e>
80009274:	08 99       	mov	r9,r4
80009276:	06 9a       	mov	r10,r3
80009278:	59 3b       	cp.w	r11,19
8000927a:	e0 88 00 1b 	brls	800092b0 <_realloc_r+0x140>
8000927e:	68 08       	ld.w	r8,r4[0x0]
80009280:	87 08       	st.w	r3[0x0],r8
80009282:	2f c9       	sub	r9,-4
80009284:	13 08       	ld.w	r8,r9++
80009286:	8f 38       	st.w	r7[0xc],r8
80009288:	ee ca ff f0 	sub	r10,r7,-16
8000928c:	59 bb       	cp.w	r11,27
8000928e:	e0 88 00 11 	brls	800092b0 <_realloc_r+0x140>
80009292:	13 08       	ld.w	r8,r9++
80009294:	95 08       	st.w	r10[0x0],r8
80009296:	13 08       	ld.w	r8,r9++
80009298:	8f 58       	st.w	r7[0x14],r8
8000929a:	ee ca ff e8 	sub	r10,r7,-24
8000929e:	e0 4b 00 24 	cp.w	r11,36
800092a2:	c0 71       	brne	800092b0 <_realloc_r+0x140>
800092a4:	13 08       	ld.w	r8,r9++
800092a6:	95 08       	st.w	r10[0x0],r8
800092a8:	ee ca ff e0 	sub	r10,r7,-32
800092ac:	13 08       	ld.w	r8,r9++
800092ae:	8f 78       	st.w	r7[0x1c],r8
800092b0:	13 08       	ld.w	r8,r9++
800092b2:	14 a8       	st.w	r10++,r8
800092b4:	72 08       	ld.w	r8,r9[0x0]
800092b6:	95 08       	st.w	r10[0x0],r8
800092b8:	72 18       	ld.w	r8,r9[0x4]
800092ba:	95 18       	st.w	r10[0x4],r8
800092bc:	c0 68       	rjmp	800092c8 <_realloc_r+0x158>
800092be:	16 9a       	mov	r10,r11
800092c0:	06 9c       	mov	r12,r3
800092c2:	08 9b       	mov	r11,r4
800092c4:	fe b0 fc 27 	rcall	80008b12 <memmove>
800092c8:	40 08       	lddsp	r8,sp[0x0]
800092ca:	04 18       	sub	r8,r2
800092cc:	a1 a8       	sbr	r8,0x0
800092ce:	ee 02 00 09 	add	r9,r7,r2
800092d2:	93 18       	st.w	r9[0x4],r8
800092d4:	48 58       	lddpc	r8,800092e8 <_realloc_r+0x178>
800092d6:	00 9c       	mov	r12,r0
800092d8:	91 29       	st.w	r8[0x8],r9
800092da:	6e 18       	ld.w	r8,r7[0x4]
800092dc:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800092e0:	e5 e8 10 08 	or	r8,r2,r8
800092e4:	8f 18       	st.w	r7[0x4],r8
800092e6:	cb b8       	rjmp	8000945c <_realloc_r+0x2ec>
800092e8:	00 00       	add	r0,r0
800092ea:	01 2c       	ld.uh	r12,r0++
800092ec:	f0 0b 00 03 	add	r3,r8,r11
800092f0:	04 33       	cp.w	r3,r2
800092f2:	c0 a5       	brlt	80009306 <_realloc_r+0x196>
800092f4:	74 29       	ld.w	r9,r10[0x8]
800092f6:	74 38       	ld.w	r8,r10[0xc]
800092f8:	91 29       	st.w	r8[0x8],r9
800092fa:	93 38       	st.w	r9[0xc],r8
800092fc:	6e 29       	ld.w	r9,r7[0x8]
800092fe:	6e 38       	ld.w	r8,r7[0xc]
80009300:	91 29       	st.w	r8[0x8],r9
80009302:	93 38       	st.w	r9[0xc],r8
80009304:	c0 98       	rjmp	80009316 <_realloc_r+0x1a6>
80009306:	f2 05 00 03 	add	r3,r9,r5
8000930a:	04 33       	cp.w	r3,r2
8000930c:	c3 75       	brlt	8000937a <_realloc_r+0x20a>
8000930e:	6e 39       	ld.w	r9,r7[0xc]
80009310:	6e 28       	ld.w	r8,r7[0x8]
80009312:	93 28       	st.w	r9[0x8],r8
80009314:	91 39       	st.w	r8[0xc],r9
80009316:	ea cb 00 04 	sub	r11,r5,4
8000931a:	ee cc ff f8 	sub	r12,r7,-8
8000931e:	e0 4b 00 24 	cp.w	r11,36
80009322:	e0 8b 00 27 	brhi	80009370 <_realloc_r+0x200>
80009326:	08 99       	mov	r9,r4
80009328:	18 9a       	mov	r10,r12
8000932a:	59 3b       	cp.w	r11,19
8000932c:	e0 88 00 1b 	brls	80009362 <_realloc_r+0x1f2>
80009330:	68 08       	ld.w	r8,r4[0x0]
80009332:	99 08       	st.w	r12[0x0],r8
80009334:	2f c9       	sub	r9,-4
80009336:	13 08       	ld.w	r8,r9++
80009338:	8f 38       	st.w	r7[0xc],r8
8000933a:	ee ca ff f0 	sub	r10,r7,-16
8000933e:	59 bb       	cp.w	r11,27
80009340:	e0 88 00 11 	brls	80009362 <_realloc_r+0x1f2>
80009344:	13 08       	ld.w	r8,r9++
80009346:	95 08       	st.w	r10[0x0],r8
80009348:	13 08       	ld.w	r8,r9++
8000934a:	8f 58       	st.w	r7[0x14],r8
8000934c:	ee ca ff e8 	sub	r10,r7,-24
80009350:	e0 4b 00 24 	cp.w	r11,36
80009354:	c0 71       	brne	80009362 <_realloc_r+0x1f2>
80009356:	13 08       	ld.w	r8,r9++
80009358:	95 08       	st.w	r10[0x0],r8
8000935a:	ee ca ff e0 	sub	r10,r7,-32
8000935e:	13 08       	ld.w	r8,r9++
80009360:	8f 78       	st.w	r7[0x1c],r8
80009362:	13 08       	ld.w	r8,r9++
80009364:	14 a8       	st.w	r10++,r8
80009366:	72 08       	ld.w	r8,r9[0x0]
80009368:	95 08       	st.w	r10[0x0],r8
8000936a:	72 18       	ld.w	r8,r9[0x4]
8000936c:	95 18       	st.w	r10[0x4],r8
8000936e:	c5 08       	rjmp	8000940e <_realloc_r+0x29e>
80009370:	16 9a       	mov	r10,r11
80009372:	08 9b       	mov	r11,r4
80009374:	fe b0 fb cf 	rcall	80008b12 <memmove>
80009378:	c4 b8       	rjmp	8000940e <_realloc_r+0x29e>
8000937a:	02 9b       	mov	r11,r1
8000937c:	00 9c       	mov	r12,r0
8000937e:	fe b0 db e3 	rcall	80004b44 <_malloc_r>
80009382:	18 93       	mov	r3,r12
80009384:	c4 10       	breq	80009406 <_realloc_r+0x296>
80009386:	6c 18       	ld.w	r8,r6[0x4]
80009388:	f8 c9 00 08 	sub	r9,r12,8
8000938c:	a1 c8       	cbr	r8,0x0
8000938e:	ec 08 00 08 	add	r8,r6,r8
80009392:	10 39       	cp.w	r9,r8
80009394:	c0 81       	brne	800093a4 <_realloc_r+0x234>
80009396:	72 18       	ld.w	r8,r9[0x4]
80009398:	0c 97       	mov	r7,r6
8000939a:	e0 18 ff fc 	andl	r8,0xfffc
8000939e:	f0 05 00 03 	add	r3,r8,r5
800093a2:	c3 68       	rjmp	8000940e <_realloc_r+0x29e>
800093a4:	ea ce 00 04 	sub	lr,r5,4
800093a8:	e0 4e 00 24 	cp.w	lr,36
800093ac:	e0 8b 00 25 	brhi	800093f6 <_realloc_r+0x286>
800093b0:	08 9b       	mov	r11,r4
800093b2:	18 9a       	mov	r10,r12
800093b4:	59 3e       	cp.w	lr,19
800093b6:	e0 88 00 18 	brls	800093e6 <_realloc_r+0x276>
800093ba:	08 98       	mov	r8,r4
800093bc:	18 99       	mov	r9,r12
800093be:	11 0a       	ld.w	r10,r8++
800093c0:	12 aa       	st.w	r9++,r10
800093c2:	10 9b       	mov	r11,r8
800093c4:	12 9a       	mov	r10,r9
800093c6:	17 08       	ld.w	r8,r11++
800093c8:	14 a8       	st.w	r10++,r8
800093ca:	59 be       	cp.w	lr,27
800093cc:	e0 88 00 0d 	brls	800093e6 <_realloc_r+0x276>
800093d0:	17 08       	ld.w	r8,r11++
800093d2:	14 a8       	st.w	r10++,r8
800093d4:	17 08       	ld.w	r8,r11++
800093d6:	14 a8       	st.w	r10++,r8
800093d8:	e0 4e 00 24 	cp.w	lr,36
800093dc:	c0 51       	brne	800093e6 <_realloc_r+0x276>
800093de:	17 08       	ld.w	r8,r11++
800093e0:	14 a8       	st.w	r10++,r8
800093e2:	17 08       	ld.w	r8,r11++
800093e4:	14 a8       	st.w	r10++,r8
800093e6:	16 99       	mov	r9,r11
800093e8:	13 08       	ld.w	r8,r9++
800093ea:	14 a8       	st.w	r10++,r8
800093ec:	72 08       	ld.w	r8,r9[0x0]
800093ee:	95 08       	st.w	r10[0x0],r8
800093f0:	72 18       	ld.w	r8,r9[0x4]
800093f2:	95 18       	st.w	r10[0x4],r8
800093f4:	c0 58       	rjmp	800093fe <_realloc_r+0x28e>
800093f6:	1c 9a       	mov	r10,lr
800093f8:	08 9b       	mov	r11,r4
800093fa:	fe b0 fb 8c 	rcall	80008b12 <memmove>
800093fe:	08 9b       	mov	r11,r4
80009400:	00 9c       	mov	r12,r0
80009402:	fe b0 f8 4f 	rcall	800084a0 <_free_r>
80009406:	00 9c       	mov	r12,r0
80009408:	c2 a8       	rjmp	8000945c <_realloc_r+0x2ec>
8000940a:	0c 97       	mov	r7,r6
8000940c:	0a 93       	mov	r3,r5
8000940e:	e6 02 01 09 	sub	r9,r3,r2
80009412:	6e 18       	ld.w	r8,r7[0x4]
80009414:	58 f9       	cp.w	r9,15
80009416:	e0 88 00 16 	brls	80009442 <_realloc_r+0x2d2>
8000941a:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
8000941e:	e5 e8 10 08 	or	r8,r2,r8
80009422:	8f 18       	st.w	r7[0x4],r8
80009424:	12 98       	mov	r8,r9
80009426:	a1 a8       	sbr	r8,0x0
80009428:	ee 02 00 0b 	add	r11,r7,r2
8000942c:	f6 09 00 09 	add	r9,r11,r9
80009430:	97 18       	st.w	r11[0x4],r8
80009432:	72 18       	ld.w	r8,r9[0x4]
80009434:	a1 a8       	sbr	r8,0x0
80009436:	2f 8b       	sub	r11,-8
80009438:	93 18       	st.w	r9[0x4],r8
8000943a:	00 9c       	mov	r12,r0
8000943c:	fe b0 f8 32 	rcall	800084a0 <_free_r>
80009440:	c0 b8       	rjmp	80009456 <_realloc_r+0x2e6>
80009442:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80009446:	e7 e8 10 08 	or	r8,r3,r8
8000944a:	8f 18       	st.w	r7[0x4],r8
8000944c:	ee 03 00 09 	add	r9,r7,r3
80009450:	72 18       	ld.w	r8,r9[0x4]
80009452:	a1 a8       	sbr	r8,0x0
80009454:	93 18       	st.w	r9[0x4],r8
80009456:	00 9c       	mov	r12,r0
80009458:	ee c3 ff f8 	sub	r3,r7,-8
8000945c:	fe b0 dd aa 	rcall	80004fb0 <__malloc_unlock>
80009460:	06 9c       	mov	r12,r3
80009462:	2f fd       	sub	sp,-4
80009464:	d8 32       	popm	r0-r7,pc
80009466:	d7 03       	nop

80009468 <__isinfd>:
80009468:	14 98       	mov	r8,r10
8000946a:	f7 db c0 1f 	bfextu	r11,r11,0x0,0x1f
8000946e:	5c 3a       	neg	r10
80009470:	10 4a       	or	r10,r8
80009472:	fc 18 7f f0 	movh	r8,0x7ff0
80009476:	f7 ea 13 fb 	or	r11,r11,r10>>0x1f
8000947a:	f0 0b 01 0b 	sub	r11,r8,r11
8000947e:	f6 0c 11 00 	rsub	r12,r11,0
80009482:	16 4c       	or	r12,r11
80009484:	bf 5c       	asr	r12,0x1f
80009486:	2f fc       	sub	r12,-1
80009488:	5e fc       	retal	r12

8000948a <__isnand>:
8000948a:	14 98       	mov	r8,r10
8000948c:	f9 db c0 1f 	bfextu	r12,r11,0x0,0x1f
80009490:	5c 3a       	neg	r10
80009492:	10 4a       	or	r10,r8
80009494:	fc 18 7f f0 	movh	r8,0x7ff0
80009498:	f9 ea 13 fc 	or	r12,r12,r10>>0x1f
8000949c:	f0 0c 01 0c 	sub	r12,r8,r12
800094a0:	bf 9c       	lsr	r12,0x1f
800094a2:	5e fc       	retal	r12

800094a4 <strlen>:
800094a4:	18 99       	mov	r9,r12
800094a6:	30 0a       	mov	r10,0
800094a8:	c0 28       	rjmp	800094ac <strlen+0x8>
800094aa:	2f fc       	sub	r12,-1
800094ac:	19 88       	ld.ub	r8,r12[0x0]
800094ae:	f4 08 18 00 	cp.b	r8,r10
800094b2:	cf c1       	brne	800094aa <strlen+0x6>
800094b4:	12 1c       	sub	r12,r9
800094b6:	5e fc       	retal	r12

800094b8 <_calloc_r>:
800094b8:	d4 21       	pushm	r4-r7,lr
800094ba:	f4 0b 02 4b 	mul	r11,r10,r11
800094be:	fe b0 db 43 	rcall	80004b44 <_malloc_r>
800094c2:	18 97       	mov	r7,r12
800094c4:	c2 60       	breq	80009510 <_calloc_r+0x58>
800094c6:	f8 f8 ff fc 	ld.w	r8,r12[-4]
800094ca:	e0 18 ff fc 	andl	r8,0xfffc
800094ce:	f0 ca 00 04 	sub	r10,r8,4
800094d2:	e0 4a 00 24 	cp.w	r10,36
800094d6:	e0 8b 00 1a 	brhi	8000950a <_calloc_r+0x52>
800094da:	18 99       	mov	r9,r12
800094dc:	59 3a       	cp.w	r10,19
800094de:	e0 88 00 11 	brls	80009500 <_calloc_r+0x48>
800094e2:	30 0b       	mov	r11,0
800094e4:	18 98       	mov	r8,r12
800094e6:	10 ab       	st.w	r8++,r11
800094e8:	10 99       	mov	r9,r8
800094ea:	12 ab       	st.w	r9++,r11
800094ec:	59 ba       	cp.w	r10,27
800094ee:	e0 88 00 09 	brls	80009500 <_calloc_r+0x48>
800094f2:	12 ab       	st.w	r9++,r11
800094f4:	12 ab       	st.w	r9++,r11
800094f6:	e0 4a 00 24 	cp.w	r10,36
800094fa:	c0 31       	brne	80009500 <_calloc_r+0x48>
800094fc:	12 ab       	st.w	r9++,r11
800094fe:	12 ab       	st.w	r9++,r11
80009500:	30 08       	mov	r8,0
80009502:	12 a8       	st.w	r9++,r8
80009504:	93 18       	st.w	r9[0x4],r8
80009506:	93 08       	st.w	r9[0x0],r8
80009508:	c0 48       	rjmp	80009510 <_calloc_r+0x58>
8000950a:	30 0b       	mov	r11,0
8000950c:	fe b0 dd 4a 	rcall	80004fa0 <memset>
80009510:	0e 9c       	mov	r12,r7
80009512:	d8 22       	popm	r4-r7,pc

80009514 <_fstat_r>:
80009514:	d4 21       	pushm	r4-r7,lr
80009516:	16 98       	mov	r8,r11
80009518:	18 96       	mov	r6,r12
8000951a:	10 9c       	mov	r12,r8
8000951c:	30 08       	mov	r8,0
8000951e:	48 77       	lddpc	r7,80009538 <_fstat_r+0x24>
80009520:	14 9b       	mov	r11,r10
80009522:	8f 08       	st.w	r7[0x0],r8
80009524:	fe b0 d5 c4 	rcall	800040ac <_fstat>
80009528:	5b fc       	cp.w	r12,-1
8000952a:	c0 51       	brne	80009534 <_fstat_r+0x20>
8000952c:	6e 08       	ld.w	r8,r7[0x0]
8000952e:	58 08       	cp.w	r8,0
80009530:	ed f8 1a 03 	st.wne	r6[0xc],r8
80009534:	d8 22       	popm	r4-r7,pc
80009536:	d7 03       	nop
80009538:	00 00       	add	r0,r0
8000953a:	07 48       	ld.w	r8,--r3

8000953c <__avr32_f64_mul>:
8000953c:	f5 eb 10 1c 	or	r12,r10,r11<<0x1
80009540:	e0 80 00 dc 	breq	800096f8 <__avr32_f64_mul_op1_zero>
80009544:	d4 21       	pushm	r4-r7,lr
80009546:	f7 e9 20 0e 	eor	lr,r11,r9
8000954a:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
8000954e:	30 15       	mov	r5,1
80009550:	c4 30       	breq	800095d6 <__avr32_f64_mul_op1_subnormal>
80009552:	ab 6b       	lsl	r11,0xa
80009554:	f7 ea 13 6b 	or	r11,r11,r10>>0x16
80009558:	ab 6a       	lsl	r10,0xa
8000955a:	f7 d5 d3 c2 	bfins	r11,r5,0x1e,0x2
8000955e:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
80009562:	c5 c0       	breq	8000961a <__avr32_f64_mul_op2_subnormal>
80009564:	a1 78       	lsl	r8,0x1
80009566:	5c f9       	rol	r9
80009568:	f3 d5 d2 ab 	bfins	r9,r5,0x15,0xb
8000956c:	e0 47 07 ff 	cp.w	r7,2047
80009570:	c7 70       	breq	8000965e <__avr32_f64_mul_op_nan_or_inf>
80009572:	e0 46 07 ff 	cp.w	r6,2047
80009576:	c7 40       	breq	8000965e <__avr32_f64_mul_op_nan_or_inf>
80009578:	ee 06 00 0c 	add	r12,r7,r6
8000957c:	e0 2c 03 fe 	sub	r12,1022
80009580:	f6 08 06 44 	mulu.d	r4,r11,r8
80009584:	f4 09 07 44 	macu.d	r4,r10,r9
80009588:	f4 08 06 46 	mulu.d	r6,r10,r8
8000958c:	f6 09 06 4a 	mulu.d	r10,r11,r9
80009590:	08 07       	add	r7,r4
80009592:	f4 05 00 4a 	adc	r10,r10,r5
80009596:	5c 0b       	acr	r11
80009598:	ed bb 00 14 	bld	r11,0x14
8000959c:	c0 50       	breq	800095a6 <__avr32_f64_mul+0x6a>
8000959e:	a1 77       	lsl	r7,0x1
800095a0:	5c fa       	rol	r10
800095a2:	5c fb       	rol	r11
800095a4:	20 1c       	sub	r12,1
800095a6:	58 0c       	cp.w	r12,0
800095a8:	e0 8a 00 6f 	brle	80009686 <__avr32_f64_mul_res_subnormal>
800095ac:	e0 4c 07 ff 	cp.w	r12,2047
800095b0:	e0 84 00 9c 	brge	800096e8 <__avr32_f64_mul_res_inf>
800095b4:	f7 dc d2 8b 	bfins	r11,r12,0x14,0xb
800095b8:	ed ea 11 f6 	or	r6,r6,r10<<0x1f
800095bc:	ef e6 12 17 	or	r7,r7,r6>>0x1
800095c0:	ee 17 80 00 	eorh	r7,0x8000
800095c4:	f1 b7 04 20 	satu	r7,0x1
800095c8:	0e 0a       	add	r10,r7
800095ca:	5c 0b       	acr	r11
800095cc:	ed be 00 1f 	bld	lr,0x1f
800095d0:	ef bb 00 1f 	bst	r11,0x1f
800095d4:	d8 22       	popm	r4-r7,pc

800095d6 <__avr32_f64_mul_op1_subnormal>:
800095d6:	e4 1b 00 0f 	andh	r11,0xf
800095da:	f4 0c 12 00 	clz	r12,r10
800095de:	f6 06 12 00 	clz	r6,r11
800095e2:	f7 bc 03 e1 	sublo	r12,-31
800095e6:	f8 06 17 30 	movlo	r6,r12
800095ea:	f7 b6 02 01 	subhs	r6,1
800095ee:	e0 46 00 20 	cp.w	r6,32
800095f2:	c0 d4       	brge	8000960c <__avr32_f64_mul_op1_subnormal+0x36>
800095f4:	ec 0c 11 20 	rsub	r12,r6,32
800095f8:	f6 06 09 4b 	lsl	r11,r11,r6
800095fc:	f4 0c 0a 4c 	lsr	r12,r10,r12
80009600:	18 4b       	or	r11,r12
80009602:	f4 06 09 4a 	lsl	r10,r10,r6
80009606:	20 b6       	sub	r6,11
80009608:	0c 17       	sub	r7,r6
8000960a:	ca ab       	rjmp	8000955e <__avr32_f64_mul+0x22>
8000960c:	f4 06 09 4b 	lsl	r11,r10,r6
80009610:	c6 40       	breq	800096d8 <__avr32_f64_mul_res_zero>
80009612:	30 0a       	mov	r10,0
80009614:	20 b6       	sub	r6,11
80009616:	0c 17       	sub	r7,r6
80009618:	ca 3b       	rjmp	8000955e <__avr32_f64_mul+0x22>

8000961a <__avr32_f64_mul_op2_subnormal>:
8000961a:	e4 19 00 0f 	andh	r9,0xf
8000961e:	f0 0c 12 00 	clz	r12,r8
80009622:	f2 05 12 00 	clz	r5,r9
80009626:	f7 bc 03 ea 	sublo	r12,-22
8000962a:	f8 05 17 30 	movlo	r5,r12
8000962e:	f7 b5 02 0a 	subhs	r5,10
80009632:	e0 45 00 20 	cp.w	r5,32
80009636:	c0 d4       	brge	80009650 <__avr32_f64_mul_op2_subnormal+0x36>
80009638:	ea 0c 11 20 	rsub	r12,r5,32
8000963c:	f2 05 09 49 	lsl	r9,r9,r5
80009640:	f0 0c 0a 4c 	lsr	r12,r8,r12
80009644:	18 49       	or	r9,r12
80009646:	f0 05 09 48 	lsl	r8,r8,r5
8000964a:	20 25       	sub	r5,2
8000964c:	0a 16       	sub	r6,r5
8000964e:	c8 fb       	rjmp	8000956c <__avr32_f64_mul+0x30>
80009650:	f0 05 09 49 	lsl	r9,r8,r5
80009654:	c4 20       	breq	800096d8 <__avr32_f64_mul_res_zero>
80009656:	30 08       	mov	r8,0
80009658:	20 25       	sub	r5,2
8000965a:	0a 16       	sub	r6,r5
8000965c:	c8 8b       	rjmp	8000956c <__avr32_f64_mul+0x30>

8000965e <__avr32_f64_mul_op_nan_or_inf>:
8000965e:	e4 19 00 0f 	andh	r9,0xf
80009662:	e4 1b 00 0f 	andh	r11,0xf
80009666:	14 4b       	or	r11,r10
80009668:	10 49       	or	r9,r8
8000966a:	e0 47 07 ff 	cp.w	r7,2047
8000966e:	c0 91       	brne	80009680 <__avr32_f64_mul_op1_not_naninf>
80009670:	58 0b       	cp.w	r11,0
80009672:	c3 81       	brne	800096e2 <__avr32_f64_mul_res_nan>
80009674:	e0 46 07 ff 	cp.w	r6,2047
80009678:	c3 81       	brne	800096e8 <__avr32_f64_mul_res_inf>
8000967a:	58 09       	cp.w	r9,0
8000967c:	c3 60       	breq	800096e8 <__avr32_f64_mul_res_inf>
8000967e:	c3 28       	rjmp	800096e2 <__avr32_f64_mul_res_nan>

80009680 <__avr32_f64_mul_op1_not_naninf>:
80009680:	58 09       	cp.w	r9,0
80009682:	c3 30       	breq	800096e8 <__avr32_f64_mul_res_inf>
80009684:	c2 f8       	rjmp	800096e2 <__avr32_f64_mul_res_nan>

80009686 <__avr32_f64_mul_res_subnormal>:
80009686:	5c 3c       	neg	r12
80009688:	2f fc       	sub	r12,-1
8000968a:	f1 bc 04 c0 	satu	r12,0x6
8000968e:	e0 4c 00 20 	cp.w	r12,32
80009692:	c1 14       	brge	800096b4 <__avr32_f64_mul_res_subnormal+0x2e>
80009694:	f8 08 11 20 	rsub	r8,r12,32
80009698:	0e 46       	or	r6,r7
8000969a:	ee 0c 0a 47 	lsr	r7,r7,r12
8000969e:	f4 08 09 49 	lsl	r9,r10,r8
800096a2:	12 47       	or	r7,r9
800096a4:	f4 0c 0a 4a 	lsr	r10,r10,r12
800096a8:	f6 08 09 49 	lsl	r9,r11,r8
800096ac:	12 4a       	or	r10,r9
800096ae:	f6 0c 0a 4b 	lsr	r11,r11,r12
800096b2:	c8 3b       	rjmp	800095b8 <__avr32_f64_mul+0x7c>
800096b4:	f8 08 11 20 	rsub	r8,r12,32
800096b8:	f9 b9 00 00 	moveq	r9,0
800096bc:	c0 30       	breq	800096c2 <__avr32_f64_mul_res_subnormal+0x3c>
800096be:	f6 08 09 49 	lsl	r9,r11,r8
800096c2:	0e 46       	or	r6,r7
800096c4:	ed ea 10 16 	or	r6,r6,r10<<0x1
800096c8:	f4 0c 0a 4a 	lsr	r10,r10,r12
800096cc:	f3 ea 10 07 	or	r7,r9,r10
800096d0:	f6 0c 0a 4a 	lsr	r10,r11,r12
800096d4:	30 0b       	mov	r11,0
800096d6:	c7 1b       	rjmp	800095b8 <__avr32_f64_mul+0x7c>

800096d8 <__avr32_f64_mul_res_zero>:
800096d8:	1c 9b       	mov	r11,lr
800096da:	e6 1b 80 00 	andh	r11,0x8000,COH
800096de:	30 0a       	mov	r10,0
800096e0:	d8 22       	popm	r4-r7,pc

800096e2 <__avr32_f64_mul_res_nan>:
800096e2:	3f fb       	mov	r11,-1
800096e4:	3f fa       	mov	r10,-1
800096e6:	d8 22       	popm	r4-r7,pc

800096e8 <__avr32_f64_mul_res_inf>:
800096e8:	f0 6b 00 00 	mov	r11,-1048576
800096ec:	ed be 00 1f 	bld	lr,0x1f
800096f0:	ef bb 00 1f 	bst	r11,0x1f
800096f4:	30 0a       	mov	r10,0
800096f6:	d8 22       	popm	r4-r7,pc

800096f8 <__avr32_f64_mul_op1_zero>:
800096f8:	f7 e9 20 0b 	eor	r11,r11,r9
800096fc:	e6 1b 80 00 	andh	r11,0x8000,COH
80009700:	f9 d9 c2 8b 	bfextu	r12,r9,0x14,0xb
80009704:	e0 4c 07 ff 	cp.w	r12,2047
80009708:	5e 1c       	retne	r12
8000970a:	3f fa       	mov	r10,-1
8000970c:	3f fb       	mov	r11,-1
8000970e:	5e fc       	retal	r12
80009710:	58 17       	cp.w	r7,1
80009712:	58 09       	cp.w	r9,0
80009714:	f5 b8 00 00 	subfeq	r8,0
80009718:	1b 07       	ld.w	r7,sp++
8000971a:	1b 0e       	ld.w	lr,sp++
8000971c:	5e fc       	retal	r12
8000971e:	d7 03       	nop

80009720 <__avr32_f64_sub_from_add>:
80009720:	ee 19 80 00 	eorh	r9,0x8000

80009724 <__avr32_f64_sub>:
80009724:	f7 e9 20 0c 	eor	r12,r11,r9
80009728:	e0 86 00 ca 	brmi	800098bc <__avr32_f64_add_from_sub>
8000972c:	eb cd 40 e0 	pushm	r5-r7,lr
80009730:	16 9c       	mov	r12,r11
80009732:	e6 1c 80 00 	andh	r12,0x8000,COH
80009736:	bf db       	cbr	r11,0x1f
80009738:	bf d9       	cbr	r9,0x1f
8000973a:	10 3a       	cp.w	r10,r8
8000973c:	f2 0b 13 00 	cpc	r11,r9
80009740:	c0 92       	brcc	80009752 <__avr32_f64_sub+0x2e>
80009742:	16 97       	mov	r7,r11
80009744:	12 9b       	mov	r11,r9
80009746:	0e 99       	mov	r9,r7
80009748:	14 97       	mov	r7,r10
8000974a:	10 9a       	mov	r10,r8
8000974c:	0e 98       	mov	r8,r7
8000974e:	ee 1c 80 00 	eorh	r12,0x8000
80009752:	f6 07 16 14 	lsr	r7,r11,0x14
80009756:	ab 7b       	lsl	r11,0xb
80009758:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
8000975c:	ab 7a       	lsl	r10,0xb
8000975e:	bf bb       	sbr	r11,0x1f
80009760:	f2 06 16 14 	lsr	r6,r9,0x14
80009764:	c4 40       	breq	800097ec <__avr32_f64_sub_opL_subnormal>
80009766:	ab 79       	lsl	r9,0xb
80009768:	f3 e8 13 59 	or	r9,r9,r8>>0x15
8000976c:	ab 78       	lsl	r8,0xb
8000976e:	bf b9       	sbr	r9,0x1f

80009770 <__avr32_f64_sub_opL_subnormal_done>:
80009770:	e0 47 07 ff 	cp.w	r7,2047
80009774:	c4 f0       	breq	80009812 <__avr32_f64_sub_opH_nan_or_inf>
80009776:	0e 26       	rsub	r6,r7
80009778:	c1 20       	breq	8000979c <__avr32_f64_sub_shift_done>
8000977a:	ec 05 11 20 	rsub	r5,r6,32
8000977e:	e0 46 00 20 	cp.w	r6,32
80009782:	c7 c2       	brcc	8000987a <__avr32_f64_sub_longshift>
80009784:	f0 05 09 4e 	lsl	lr,r8,r5
80009788:	f2 05 09 45 	lsl	r5,r9,r5
8000978c:	f0 06 0a 48 	lsr	r8,r8,r6
80009790:	f2 06 0a 49 	lsr	r9,r9,r6
80009794:	0a 48       	or	r8,r5
80009796:	58 0e       	cp.w	lr,0
80009798:	5f 1e       	srne	lr
8000979a:	1c 48       	or	r8,lr

8000979c <__avr32_f64_sub_shift_done>:
8000979c:	10 1a       	sub	r10,r8
8000979e:	f6 09 01 4b 	sbc	r11,r11,r9
800097a2:	f6 06 12 00 	clz	r6,r11
800097a6:	c0 e0       	breq	800097c2 <__avr32_f64_sub_longnormalize_done>
800097a8:	c7 83       	brcs	80009898 <__avr32_f64_sub_longnormalize>
800097aa:	ec 0e 11 20 	rsub	lr,r6,32
800097ae:	f6 06 09 4b 	lsl	r11,r11,r6
800097b2:	f4 0e 0a 4e 	lsr	lr,r10,lr
800097b6:	1c 4b       	or	r11,lr
800097b8:	f4 06 09 4a 	lsl	r10,r10,r6
800097bc:	0c 17       	sub	r7,r6
800097be:	e0 8a 00 39 	brle	80009830 <__avr32_f64_sub_subnormal_result>

800097c2 <__avr32_f64_sub_longnormalize_done>:
800097c2:	f4 09 15 15 	lsl	r9,r10,0x15
800097c6:	ab 9a       	lsr	r10,0xb
800097c8:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
800097cc:	ab 9b       	lsr	r11,0xb
800097ce:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
800097d2:	18 4b       	or	r11,r12

800097d4 <__avr32_f64_sub_round>:
800097d4:	fc 17 80 00 	movh	r7,0x8000
800097d8:	ed ba 00 00 	bld	r10,0x0
800097dc:	f7 b7 01 ff 	subne	r7,-1
800097e0:	0e 39       	cp.w	r9,r7
800097e2:	5f 29       	srhs	r9
800097e4:	12 0a       	add	r10,r9
800097e6:	5c 0b       	acr	r11
800097e8:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

800097ec <__avr32_f64_sub_opL_subnormal>:
800097ec:	ab 79       	lsl	r9,0xb
800097ee:	f3 e8 13 59 	or	r9,r9,r8>>0x15
800097f2:	ab 78       	lsl	r8,0xb
800097f4:	f3 e8 10 0e 	or	lr,r9,r8
800097f8:	f9 b6 01 01 	movne	r6,1
800097fc:	ee 0e 11 00 	rsub	lr,r7,0
80009800:	f9 b7 00 01 	moveq	r7,1
80009804:	ef bb 00 1f 	bst	r11,0x1f
80009808:	f7 ea 10 0e 	or	lr,r11,r10
8000980c:	f9 b7 00 00 	moveq	r7,0
80009810:	cb 0b       	rjmp	80009770 <__avr32_f64_sub_opL_subnormal_done>

80009812 <__avr32_f64_sub_opH_nan_or_inf>:
80009812:	bf db       	cbr	r11,0x1f
80009814:	f7 ea 10 0e 	or	lr,r11,r10
80009818:	c0 81       	brne	80009828 <__avr32_f64_sub_return_nan>
8000981a:	e0 46 07 ff 	cp.w	r6,2047
8000981e:	c0 50       	breq	80009828 <__avr32_f64_sub_return_nan>
80009820:	f9 e7 11 4b 	or	r11,r12,r7<<0x14
80009824:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80009828 <__avr32_f64_sub_return_nan>:
80009828:	3f fa       	mov	r10,-1
8000982a:	3f fb       	mov	r11,-1
8000982c:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80009830 <__avr32_f64_sub_subnormal_result>:
80009830:	5c 37       	neg	r7
80009832:	2f f7       	sub	r7,-1
80009834:	f1 b7 04 c0 	satu	r7,0x6
80009838:	e0 47 00 20 	cp.w	r7,32
8000983c:	c1 14       	brge	8000985e <__avr32_f64_sub_subnormal_result+0x2e>
8000983e:	ee 08 11 20 	rsub	r8,r7,32
80009842:	f4 08 09 49 	lsl	r9,r10,r8
80009846:	5f 16       	srne	r6
80009848:	f4 07 0a 4a 	lsr	r10,r10,r7
8000984c:	0c 4a       	or	r10,r6
8000984e:	f6 08 09 49 	lsl	r9,r11,r8
80009852:	f5 e9 10 0a 	or	r10,r10,r9
80009856:	f4 07 0a 4b 	lsr	r11,r10,r7
8000985a:	30 07       	mov	r7,0
8000985c:	cb 3b       	rjmp	800097c2 <__avr32_f64_sub_longnormalize_done>
8000985e:	ee 08 11 40 	rsub	r8,r7,64
80009862:	f6 08 09 49 	lsl	r9,r11,r8
80009866:	14 49       	or	r9,r10
80009868:	5f 16       	srne	r6
8000986a:	f6 07 0a 4a 	lsr	r10,r11,r7
8000986e:	0c 4a       	or	r10,r6
80009870:	30 0b       	mov	r11,0
80009872:	30 07       	mov	r7,0
80009874:	ca 7b       	rjmp	800097c2 <__avr32_f64_sub_longnormalize_done>
80009876:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

8000987a <__avr32_f64_sub_longshift>:
8000987a:	f1 b6 04 c0 	satu	r6,0x6
8000987e:	f0 0e 17 00 	moveq	lr,r8
80009882:	c0 40       	breq	8000988a <__avr32_f64_sub_longshift+0x10>
80009884:	f2 05 09 4e 	lsl	lr,r9,r5
80009888:	10 4e       	or	lr,r8
8000988a:	f2 06 0a 48 	lsr	r8,r9,r6
8000988e:	30 09       	mov	r9,0
80009890:	58 0e       	cp.w	lr,0
80009892:	5f 1e       	srne	lr
80009894:	1c 48       	or	r8,lr
80009896:	c8 3b       	rjmp	8000979c <__avr32_f64_sub_shift_done>

80009898 <__avr32_f64_sub_longnormalize>:
80009898:	f4 06 12 00 	clz	r6,r10
8000989c:	f9 b7 03 00 	movlo	r7,0
800098a0:	f9 b6 03 00 	movlo	r6,0
800098a4:	f9 bc 03 00 	movlo	r12,0
800098a8:	f7 b6 02 e0 	subhs	r6,-32
800098ac:	f4 06 09 4b 	lsl	r11,r10,r6
800098b0:	30 0a       	mov	r10,0
800098b2:	0c 17       	sub	r7,r6
800098b4:	fe 9a ff be 	brle	80009830 <__avr32_f64_sub_subnormal_result>
800098b8:	c8 5b       	rjmp	800097c2 <__avr32_f64_sub_longnormalize_done>
800098ba:	d7 03       	nop

800098bc <__avr32_f64_add_from_sub>:
800098bc:	ee 19 80 00 	eorh	r9,0x8000

800098c0 <__avr32_f64_add>:
800098c0:	f7 e9 20 0c 	eor	r12,r11,r9
800098c4:	fe 96 ff 2e 	brmi	80009720 <__avr32_f64_sub_from_add>
800098c8:	eb cd 40 e0 	pushm	r5-r7,lr
800098cc:	16 9c       	mov	r12,r11
800098ce:	e6 1c 80 00 	andh	r12,0x8000,COH
800098d2:	bf db       	cbr	r11,0x1f
800098d4:	bf d9       	cbr	r9,0x1f
800098d6:	12 3b       	cp.w	r11,r9
800098d8:	c0 72       	brcc	800098e6 <__avr32_f64_add+0x26>
800098da:	16 97       	mov	r7,r11
800098dc:	12 9b       	mov	r11,r9
800098de:	0e 99       	mov	r9,r7
800098e0:	14 97       	mov	r7,r10
800098e2:	10 9a       	mov	r10,r8
800098e4:	0e 98       	mov	r8,r7
800098e6:	30 0e       	mov	lr,0
800098e8:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
800098ec:	f7 db c0 14 	bfextu	r11,r11,0x0,0x14
800098f0:	b5 ab       	sbr	r11,0x14
800098f2:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
800098f6:	c5 f0       	breq	800099b4 <__avr32_f64_add_op2_subnormal>
800098f8:	f3 d9 c0 14 	bfextu	r9,r9,0x0,0x14
800098fc:	b5 a9       	sbr	r9,0x14
800098fe:	e0 47 07 ff 	cp.w	r7,2047
80009902:	c2 50       	breq	8000994c <__avr32_f64_add_opH_nan_or_inf>
80009904:	0e 26       	rsub	r6,r7
80009906:	c0 f0       	breq	80009924 <__avr32_f64_add_shift_done>
80009908:	ec 05 11 20 	rsub	r5,r6,32
8000990c:	e0 46 00 20 	cp.w	r6,32
80009910:	c3 52       	brcc	8000997a <__avr32_f64_add_longshift>
80009912:	f0 05 09 4e 	lsl	lr,r8,r5
80009916:	f2 05 09 45 	lsl	r5,r9,r5
8000991a:	f0 06 0a 48 	lsr	r8,r8,r6
8000991e:	f2 06 0a 49 	lsr	r9,r9,r6
80009922:	0a 48       	or	r8,r5

80009924 <__avr32_f64_add_shift_done>:
80009924:	10 0a       	add	r10,r8
80009926:	f6 09 00 4b 	adc	r11,r11,r9
8000992a:	ed bb 00 15 	bld	r11,0x15
8000992e:	c3 40       	breq	80009996 <__avr32_f64_add_res_of>

80009930 <__avr32_f64_add_res_of_done>:
80009930:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80009934:	18 4b       	or	r11,r12

80009936 <__avr32_f64_add_round>:
80009936:	f9 da c0 01 	bfextu	r12,r10,0x0,0x1
8000993a:	18 4e       	or	lr,r12
8000993c:	ee 1e 80 00 	eorh	lr,0x8000
80009940:	f1 be 04 20 	satu	lr,0x1
80009944:	1c 0a       	add	r10,lr
80009946:	5c 0b       	acr	r11
80009948:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

8000994c <__avr32_f64_add_opH_nan_or_inf>:
8000994c:	b5 cb       	cbr	r11,0x14
8000994e:	f7 ea 10 0e 	or	lr,r11,r10
80009952:	c1 01       	brne	80009972 <__avr32_f64_add_return_nan>
80009954:	e0 46 07 ff 	cp.w	r6,2047
80009958:	c0 30       	breq	8000995e <__avr32_f64_add_opL_nan_or_inf>
8000995a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

8000995e <__avr32_f64_add_opL_nan_or_inf>:
8000995e:	b5 c9       	cbr	r9,0x14
80009960:	f3 e8 10 0e 	or	lr,r9,r8
80009964:	c0 71       	brne	80009972 <__avr32_f64_add_return_nan>
80009966:	30 0a       	mov	r10,0
80009968:	fc 1b 7f f0 	movh	r11,0x7ff0
8000996c:	18 4b       	or	r11,r12
8000996e:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80009972 <__avr32_f64_add_return_nan>:
80009972:	3f fa       	mov	r10,-1
80009974:	3f fb       	mov	r11,-1
80009976:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

8000997a <__avr32_f64_add_longshift>:
8000997a:	f1 b6 04 c0 	satu	r6,0x6
8000997e:	f0 0e 17 00 	moveq	lr,r8
80009982:	c0 60       	breq	8000998e <__avr32_f64_add_longshift+0x14>
80009984:	f2 05 09 4e 	lsl	lr,r9,r5
80009988:	58 08       	cp.w	r8,0
8000998a:	5f 18       	srne	r8
8000998c:	10 4e       	or	lr,r8
8000998e:	f2 06 0a 48 	lsr	r8,r9,r6
80009992:	30 09       	mov	r9,0
80009994:	cc 8b       	rjmp	80009924 <__avr32_f64_add_shift_done>

80009996 <__avr32_f64_add_res_of>:
80009996:	fd ee 10 1e 	or	lr,lr,lr<<0x1
8000999a:	a1 9b       	lsr	r11,0x1
8000999c:	5d 0a       	ror	r10
8000999e:	5d 0e       	ror	lr
800099a0:	2f f7       	sub	r7,-1
800099a2:	e0 47 07 ff 	cp.w	r7,2047
800099a6:	f9 ba 00 00 	moveq	r10,0
800099aa:	f9 bb 00 00 	moveq	r11,0
800099ae:	f9 be 00 00 	moveq	lr,0
800099b2:	cb fb       	rjmp	80009930 <__avr32_f64_add_res_of_done>

800099b4 <__avr32_f64_add_op2_subnormal>:
800099b4:	30 16       	mov	r6,1
800099b6:	58 07       	cp.w	r7,0
800099b8:	ca 31       	brne	800098fe <__avr32_f64_add+0x3e>
800099ba:	b5 cb       	cbr	r11,0x14
800099bc:	10 0a       	add	r10,r8
800099be:	f6 09 00 4b 	adc	r11,r11,r9
800099c2:	18 4b       	or	r11,r12
800099c4:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
800099c8:	58 17       	cp.w	r7,1
800099ca:	58 09       	cp.w	r9,0
800099cc:	f5 b8 00 00 	subfeq	r8,0
800099d0:	1b 07       	ld.w	r7,sp++
800099d2:	1b 0e       	ld.w	lr,sp++
800099d4:	5e fc       	retal	r12
800099d6:	d7 03       	nop

800099d8 <__avr32_f64_to_u32>:
800099d8:	58 0b       	cp.w	r11,0
800099da:	5e 6d       	retmi	0

800099dc <__avr32_f64_to_s32>:
800099dc:	f6 0c 15 01 	lsl	r12,r11,0x1
800099e0:	b5 9c       	lsr	r12,0x15
800099e2:	e0 2c 03 ff 	sub	r12,1023
800099e6:	5e 3d       	retlo	0
800099e8:	f8 0c 11 1f 	rsub	r12,r12,31
800099ec:	16 99       	mov	r9,r11
800099ee:	ab 7b       	lsl	r11,0xb
800099f0:	bf bb       	sbr	r11,0x1f
800099f2:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
800099f6:	f6 0c 0a 4b 	lsr	r11,r11,r12
800099fa:	a1 79       	lsl	r9,0x1
800099fc:	5e 2b       	reths	r11
800099fe:	5c 3b       	neg	r11
80009a00:	5e fb       	retal	r11
80009a02:	58 17       	cp.w	r7,1
80009a04:	58 09       	cp.w	r9,0
80009a06:	f5 b8 00 00 	subfeq	r8,0
80009a0a:	1b 07       	ld.w	r7,sp++
80009a0c:	1b 0e       	ld.w	lr,sp++
80009a0e:	5e fc       	retal	r12

80009a10 <__avr32_u32_to_f64>:
80009a10:	f8 cb 00 00 	sub	r11,r12,0
80009a14:	30 0c       	mov	r12,0
80009a16:	c0 38       	rjmp	80009a1c <__avr32_s32_to_f64+0x4>

80009a18 <__avr32_s32_to_f64>:
80009a18:	18 9b       	mov	r11,r12
80009a1a:	5c 4b       	abs	r11
80009a1c:	30 0a       	mov	r10,0
80009a1e:	5e 0b       	reteq	r11
80009a20:	d4 01       	pushm	lr
80009a22:	e0 69 04 1e 	mov	r9,1054
80009a26:	f6 08 12 00 	clz	r8,r11
80009a2a:	c1 70       	breq	80009a58 <__avr32_s32_to_f64+0x40>
80009a2c:	c0 c3       	brcs	80009a44 <__avr32_s32_to_f64+0x2c>
80009a2e:	f0 0e 11 20 	rsub	lr,r8,32
80009a32:	f6 08 09 4b 	lsl	r11,r11,r8
80009a36:	f4 0e 0a 4e 	lsr	lr,r10,lr
80009a3a:	1c 4b       	or	r11,lr
80009a3c:	f4 08 09 4a 	lsl	r10,r10,r8
80009a40:	10 19       	sub	r9,r8
80009a42:	c0 b8       	rjmp	80009a58 <__avr32_s32_to_f64+0x40>
80009a44:	f4 08 12 00 	clz	r8,r10
80009a48:	f9 b8 03 00 	movlo	r8,0
80009a4c:	f7 b8 02 e0 	subhs	r8,-32
80009a50:	f4 08 09 4b 	lsl	r11,r10,r8
80009a54:	30 0a       	mov	r10,0
80009a56:	10 19       	sub	r9,r8
80009a58:	58 09       	cp.w	r9,0
80009a5a:	e0 89 00 30 	brgt	80009aba <__avr32_s32_to_f64+0xa2>
80009a5e:	5c 39       	neg	r9
80009a60:	2f f9       	sub	r9,-1
80009a62:	e0 49 00 36 	cp.w	r9,54
80009a66:	c0 43       	brcs	80009a6e <__avr32_s32_to_f64+0x56>
80009a68:	30 0b       	mov	r11,0
80009a6a:	30 0a       	mov	r10,0
80009a6c:	c2 68       	rjmp	80009ab8 <__avr32_s32_to_f64+0xa0>
80009a6e:	2f 69       	sub	r9,-10
80009a70:	f2 08 11 20 	rsub	r8,r9,32
80009a74:	e0 49 00 20 	cp.w	r9,32
80009a78:	c0 b2       	brcc	80009a8e <__avr32_s32_to_f64+0x76>
80009a7a:	f4 08 09 4e 	lsl	lr,r10,r8
80009a7e:	f6 08 09 48 	lsl	r8,r11,r8
80009a82:	f4 09 0a 4a 	lsr	r10,r10,r9
80009a86:	f6 09 0a 4b 	lsr	r11,r11,r9
80009a8a:	10 4b       	or	r11,r8
80009a8c:	c0 88       	rjmp	80009a9c <__avr32_s32_to_f64+0x84>
80009a8e:	f6 08 09 4e 	lsl	lr,r11,r8
80009a92:	14 4e       	or	lr,r10
80009a94:	16 9a       	mov	r10,r11
80009a96:	30 0b       	mov	r11,0
80009a98:	f4 09 0a 4a 	lsr	r10,r10,r9
80009a9c:	ed ba 00 00 	bld	r10,0x0
80009aa0:	c0 92       	brcc	80009ab2 <__avr32_s32_to_f64+0x9a>
80009aa2:	1c 7e       	tst	lr,lr
80009aa4:	c0 41       	brne	80009aac <__avr32_s32_to_f64+0x94>
80009aa6:	ed ba 00 01 	bld	r10,0x1
80009aaa:	c0 42       	brcc	80009ab2 <__avr32_s32_to_f64+0x9a>
80009aac:	2f fa       	sub	r10,-1
80009aae:	f7 bb 02 ff 	subhs	r11,-1
80009ab2:	5c fc       	rol	r12
80009ab4:	5d 0b       	ror	r11
80009ab6:	5d 0a       	ror	r10
80009ab8:	d8 02       	popm	pc
80009aba:	e0 68 03 ff 	mov	r8,1023
80009abe:	ed ba 00 0b 	bld	r10,0xb
80009ac2:	f7 b8 00 ff 	subeq	r8,-1
80009ac6:	10 0a       	add	r10,r8
80009ac8:	5c 0b       	acr	r11
80009aca:	f7 b9 03 fe 	sublo	r9,-2
80009ace:	e0 49 07 ff 	cp.w	r9,2047
80009ad2:	c0 55       	brlt	80009adc <__avr32_s32_to_f64+0xc4>
80009ad4:	30 0a       	mov	r10,0
80009ad6:	fc 1b ff e0 	movh	r11,0xffe0
80009ada:	c0 c8       	rjmp	80009af2 <__floatsidf_return_op1>
80009adc:	ed bb 00 1f 	bld	r11,0x1f
80009ae0:	f7 b9 01 01 	subne	r9,1
80009ae4:	ab 9a       	lsr	r10,0xb
80009ae6:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
80009aea:	a1 7b       	lsl	r11,0x1
80009aec:	ab 9b       	lsr	r11,0xb
80009aee:	f7 e9 11 5b 	or	r11,r11,r9<<0x15

80009af2 <__floatsidf_return_op1>:
80009af2:	a1 7c       	lsl	r12,0x1
80009af4:	5d 0b       	ror	r11
80009af6:	d8 02       	popm	pc
80009af8:	58 17       	cp.w	r7,1
80009afa:	58 09       	cp.w	r9,0
80009afc:	f5 b8 00 00 	subfeq	r8,0
80009b00:	1b 07       	ld.w	r7,sp++
80009b02:	1b 0e       	ld.w	lr,sp++
80009b04:	5e fc       	retal	r12

80009b06 <__avr32_f64_cmp_eq>:
80009b06:	10 3a       	cp.w	r10,r8
80009b08:	f2 0b 13 00 	cpc	r11,r9
80009b0c:	c0 80       	breq	80009b1c <__avr32_f64_cmp_eq+0x16>
80009b0e:	a1 7b       	lsl	r11,0x1
80009b10:	a1 79       	lsl	r9,0x1
80009b12:	14 4b       	or	r11,r10
80009b14:	12 4b       	or	r11,r9
80009b16:	10 4b       	or	r11,r8
80009b18:	5e 0f       	reteq	1
80009b1a:	5e fd       	retal	0
80009b1c:	a1 7b       	lsl	r11,0x1
80009b1e:	fc 1c ff e0 	movh	r12,0xffe0
80009b22:	58 0a       	cp.w	r10,0
80009b24:	f8 0b 13 00 	cpc	r11,r12
80009b28:	5e 8f       	retls	1
80009b2a:	5e fd       	retal	0
80009b2c:	58 17       	cp.w	r7,1
80009b2e:	58 09       	cp.w	r9,0
80009b30:	f5 b8 00 00 	subfeq	r8,0
80009b34:	1b 07       	ld.w	r7,sp++
80009b36:	1b 0e       	ld.w	lr,sp++
80009b38:	5e fc       	retal	r12

80009b3a <__avr32_f64_cmp_ge>:
80009b3a:	1a de       	st.w	--sp,lr
80009b3c:	1a d7       	st.w	--sp,r7
80009b3e:	a1 7b       	lsl	r11,0x1
80009b40:	5f 3c       	srlo	r12
80009b42:	a1 79       	lsl	r9,0x1
80009b44:	5f 37       	srlo	r7
80009b46:	5c fc       	rol	r12
80009b48:	fc 1e ff e0 	movh	lr,0xffe0
80009b4c:	58 0a       	cp.w	r10,0
80009b4e:	fc 0b 13 00 	cpc	r11,lr
80009b52:	e0 8b 00 1d 	brhi	80009b8c <__avr32_f64_cmp_ge+0x52>
80009b56:	58 08       	cp.w	r8,0
80009b58:	fc 09 13 00 	cpc	r9,lr
80009b5c:	e0 8b 00 18 	brhi	80009b8c <__avr32_f64_cmp_ge+0x52>
80009b60:	58 0b       	cp.w	r11,0
80009b62:	f5 ba 00 00 	subfeq	r10,0
80009b66:	c1 50       	breq	80009b90 <__avr32_f64_cmp_ge+0x56>
80009b68:	1b 07       	ld.w	r7,sp++
80009b6a:	1b 0e       	ld.w	lr,sp++
80009b6c:	58 3c       	cp.w	r12,3
80009b6e:	c0 a0       	breq	80009b82 <__avr32_f64_cmp_ge+0x48>
80009b70:	58 1c       	cp.w	r12,1
80009b72:	c0 33       	brcs	80009b78 <__avr32_f64_cmp_ge+0x3e>
80009b74:	5e 0f       	reteq	1
80009b76:	5e 1d       	retne	0
80009b78:	10 3a       	cp.w	r10,r8
80009b7a:	f2 0b 13 00 	cpc	r11,r9
80009b7e:	5e 2f       	reths	1
80009b80:	5e 3d       	retlo	0
80009b82:	14 38       	cp.w	r8,r10
80009b84:	f6 09 13 00 	cpc	r9,r11
80009b88:	5e 2f       	reths	1
80009b8a:	5e 3d       	retlo	0
80009b8c:	1b 07       	ld.w	r7,sp++
80009b8e:	d8 0a       	popm	pc,r12=0
80009b90:	58 17       	cp.w	r7,1
80009b92:	5f 0c       	sreq	r12
80009b94:	58 09       	cp.w	r9,0
80009b96:	f5 b8 00 00 	subfeq	r8,0
80009b9a:	1b 07       	ld.w	r7,sp++
80009b9c:	1b 0e       	ld.w	lr,sp++
80009b9e:	5e 0f       	reteq	1
80009ba0:	5e fc       	retal	r12

80009ba2 <__avr32_f64_cmp_lt>:
80009ba2:	1a de       	st.w	--sp,lr
80009ba4:	1a d7       	st.w	--sp,r7
80009ba6:	a1 7b       	lsl	r11,0x1
80009ba8:	5f 3c       	srlo	r12
80009baa:	a1 79       	lsl	r9,0x1
80009bac:	5f 37       	srlo	r7
80009bae:	5c fc       	rol	r12
80009bb0:	fc 1e ff e0 	movh	lr,0xffe0
80009bb4:	58 0a       	cp.w	r10,0
80009bb6:	fc 0b 13 00 	cpc	r11,lr
80009bba:	e0 8b 00 1d 	brhi	80009bf4 <__avr32_f64_cmp_lt+0x52>
80009bbe:	58 08       	cp.w	r8,0
80009bc0:	fc 09 13 00 	cpc	r9,lr
80009bc4:	e0 8b 00 18 	brhi	80009bf4 <__avr32_f64_cmp_lt+0x52>
80009bc8:	58 0b       	cp.w	r11,0
80009bca:	f5 ba 00 00 	subfeq	r10,0
80009bce:	c1 50       	breq	80009bf8 <__avr32_f64_cmp_lt+0x56>
80009bd0:	1b 07       	ld.w	r7,sp++
80009bd2:	1b 0e       	ld.w	lr,sp++
80009bd4:	58 3c       	cp.w	r12,3
80009bd6:	c0 a0       	breq	80009bea <__avr32_f64_cmp_lt+0x48>
80009bd8:	58 1c       	cp.w	r12,1
80009bda:	c0 33       	brcs	80009be0 <__avr32_f64_cmp_lt+0x3e>
80009bdc:	5e 0d       	reteq	0
80009bde:	5e 1f       	retne	1
80009be0:	10 3a       	cp.w	r10,r8
80009be2:	f2 0b 13 00 	cpc	r11,r9
80009be6:	5e 2d       	reths	0
80009be8:	5e 3f       	retlo	1
80009bea:	14 38       	cp.w	r8,r10
80009bec:	f6 09 13 00 	cpc	r9,r11
80009bf0:	5e 2d       	reths	0
80009bf2:	5e 3f       	retlo	1
80009bf4:	1b 07       	ld.w	r7,sp++
80009bf6:	d8 0a       	popm	pc,r12=0
80009bf8:	58 17       	cp.w	r7,1
80009bfa:	5f 1c       	srne	r12
80009bfc:	58 09       	cp.w	r9,0
80009bfe:	f5 b8 00 00 	subfeq	r8,0
80009c02:	1b 07       	ld.w	r7,sp++
80009c04:	1b 0e       	ld.w	lr,sp++
80009c06:	5e 0d       	reteq	0
80009c08:	5e fc       	retal	r12
80009c0a:	d7 03       	nop
80009c0c:	58 17       	cp.w	r7,1
80009c0e:	58 09       	cp.w	r9,0
80009c10:	f5 b8 00 00 	subfeq	r8,0
80009c14:	1b 07       	ld.w	r7,sp++
80009c16:	1b 0e       	ld.w	lr,sp++
80009c18:	5e fc       	retal	r12
80009c1a:	d7 03       	nop

80009c1c <__avr32_f64_div>:
80009c1c:	eb cd 40 ff 	pushm	r0-r7,lr
80009c20:	f7 e9 20 0e 	eor	lr,r11,r9
80009c24:	f6 07 16 14 	lsr	r7,r11,0x14
80009c28:	a9 7b       	lsl	r11,0x9
80009c2a:	f7 ea 13 7b 	or	r11,r11,r10>>0x17
80009c2e:	a9 7a       	lsl	r10,0x9
80009c30:	bd bb       	sbr	r11,0x1d
80009c32:	e4 1b 3f ff 	andh	r11,0x3fff
80009c36:	ab d7       	cbr	r7,0xb
80009c38:	e0 80 00 cc 	breq	80009dd0 <__avr32_f64_div_round_subnormal+0x54>
80009c3c:	e0 47 07 ff 	cp.w	r7,2047
80009c40:	e0 84 00 b5 	brge	80009daa <__avr32_f64_div_round_subnormal+0x2e>
80009c44:	f2 06 16 14 	lsr	r6,r9,0x14
80009c48:	a9 79       	lsl	r9,0x9
80009c4a:	f3 e8 13 79 	or	r9,r9,r8>>0x17
80009c4e:	a9 78       	lsl	r8,0x9
80009c50:	bd b9       	sbr	r9,0x1d
80009c52:	e4 19 3f ff 	andh	r9,0x3fff
80009c56:	ab d6       	cbr	r6,0xb
80009c58:	e0 80 00 e2 	breq	80009e1c <__avr32_f64_div_round_subnormal+0xa0>
80009c5c:	e0 46 07 ff 	cp.w	r6,2047
80009c60:	e0 84 00 b2 	brge	80009dc4 <__avr32_f64_div_round_subnormal+0x48>
80009c64:	0c 17       	sub	r7,r6
80009c66:	fe 37 fc 01 	sub	r7,-1023
80009c6a:	fc 1c 80 00 	movh	r12,0x8000
80009c6e:	f8 03 16 01 	lsr	r3,r12,0x1
80009c72:	e9 d9 c3 62 	bfextu	r4,r9,0x1b,0x2
80009c76:	5c d4       	com	r4
80009c78:	e7 d4 d3 82 	bfins	r3,r4,0x1c,0x2
80009c7c:	e6 09 06 44 	mulu.d	r4,r3,r9
80009c80:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80009c84:	e6 05 06 44 	mulu.d	r4,r3,r5
80009c88:	ea 03 15 02 	lsl	r3,r5,0x2
80009c8c:	e6 09 06 44 	mulu.d	r4,r3,r9
80009c90:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80009c94:	e6 05 06 44 	mulu.d	r4,r3,r5
80009c98:	ea 03 15 02 	lsl	r3,r5,0x2
80009c9c:	e6 09 06 44 	mulu.d	r4,r3,r9
80009ca0:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80009ca4:	e6 05 06 44 	mulu.d	r4,r3,r5
80009ca8:	ea 03 15 02 	lsl	r3,r5,0x2
80009cac:	e6 08 06 40 	mulu.d	r0,r3,r8
80009cb0:	e4 09 07 40 	macu.d	r0,r2,r9
80009cb4:	e6 09 06 44 	mulu.d	r4,r3,r9
80009cb8:	02 04       	add	r4,r1
80009cba:	5c 05       	acr	r5
80009cbc:	a3 65       	lsl	r5,0x2
80009cbe:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80009cc2:	a3 64       	lsl	r4,0x2
80009cc4:	5c 34       	neg	r4
80009cc6:	f8 05 01 45 	sbc	r5,r12,r5
80009cca:	e6 04 06 40 	mulu.d	r0,r3,r4
80009cce:	e4 05 07 40 	macu.d	r0,r2,r5
80009cd2:	e6 05 06 44 	mulu.d	r4,r3,r5
80009cd6:	02 04       	add	r4,r1
80009cd8:	5c 05       	acr	r5
80009cda:	ea 03 15 02 	lsl	r3,r5,0x2
80009cde:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80009ce2:	e8 02 15 02 	lsl	r2,r4,0x2
80009ce6:	e6 08 06 40 	mulu.d	r0,r3,r8
80009cea:	e4 09 07 40 	macu.d	r0,r2,r9
80009cee:	e6 09 06 44 	mulu.d	r4,r3,r9
80009cf2:	02 04       	add	r4,r1
80009cf4:	5c 05       	acr	r5
80009cf6:	a3 65       	lsl	r5,0x2
80009cf8:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80009cfc:	a3 64       	lsl	r4,0x2
80009cfe:	5c 34       	neg	r4
80009d00:	f8 05 01 45 	sbc	r5,r12,r5
80009d04:	e6 04 06 40 	mulu.d	r0,r3,r4
80009d08:	e4 05 07 40 	macu.d	r0,r2,r5
80009d0c:	e6 05 06 44 	mulu.d	r4,r3,r5
80009d10:	02 04       	add	r4,r1
80009d12:	5c 05       	acr	r5
80009d14:	ea 03 15 02 	lsl	r3,r5,0x2
80009d18:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80009d1c:	e8 02 15 02 	lsl	r2,r4,0x2
80009d20:	e6 0a 06 40 	mulu.d	r0,r3,r10
80009d24:	e4 0b 07 40 	macu.d	r0,r2,r11
80009d28:	e6 0b 06 42 	mulu.d	r2,r3,r11
80009d2c:	02 02       	add	r2,r1
80009d2e:	5c 03       	acr	r3
80009d30:	ed b3 00 1c 	bld	r3,0x1c
80009d34:	c0 90       	breq	80009d46 <__avr32_f64_div+0x12a>
80009d36:	a1 72       	lsl	r2,0x1
80009d38:	5c f3       	rol	r3
80009d3a:	20 17       	sub	r7,1
80009d3c:	a3 9a       	lsr	r10,0x3
80009d3e:	f5 eb 11 da 	or	r10,r10,r11<<0x1d
80009d42:	a3 9b       	lsr	r11,0x3
80009d44:	c0 58       	rjmp	80009d4e <__avr32_f64_div+0x132>
80009d46:	a5 8a       	lsr	r10,0x4
80009d48:	f5 eb 11 ca 	or	r10,r10,r11<<0x1c
80009d4c:	a5 8b       	lsr	r11,0x4
80009d4e:	58 07       	cp.w	r7,0
80009d50:	e0 8a 00 8b 	brle	80009e66 <__avr32_f64_div_res_subnormal>
80009d54:	e0 12 ff 00 	andl	r2,0xff00
80009d58:	e8 12 00 80 	orl	r2,0x80
80009d5c:	e6 08 06 40 	mulu.d	r0,r3,r8
80009d60:	e4 09 07 40 	macu.d	r0,r2,r9
80009d64:	e4 08 06 44 	mulu.d	r4,r2,r8
80009d68:	e6 09 06 48 	mulu.d	r8,r3,r9
80009d6c:	00 05       	add	r5,r0
80009d6e:	f0 01 00 48 	adc	r8,r8,r1
80009d72:	5c 09       	acr	r9
80009d74:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80009d78:	58 04       	cp.w	r4,0
80009d7a:	5c 25       	cpc	r5

80009d7c <__avr32_f64_div_round_subnormal>:
80009d7c:	f4 08 13 00 	cpc	r8,r10
80009d80:	f6 09 13 00 	cpc	r9,r11
80009d84:	5f 36       	srlo	r6
80009d86:	f8 06 17 00 	moveq	r6,r12
80009d8a:	e4 0a 16 08 	lsr	r10,r2,0x8
80009d8e:	f5 e3 11 8a 	or	r10,r10,r3<<0x18
80009d92:	e6 0b 16 08 	lsr	r11,r3,0x8
80009d96:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80009d9a:	ed be 00 1f 	bld	lr,0x1f
80009d9e:	ef bb 00 1f 	bst	r11,0x1f
80009da2:	0c 0a       	add	r10,r6
80009da4:	5c 0b       	acr	r11
80009da6:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80009daa:	e4 1b 00 0f 	andh	r11,0xf
80009dae:	14 4b       	or	r11,r10
80009db0:	e0 81 00 a7 	brne	80009efe <__avr32_f64_div_res_subnormal+0x98>
80009db4:	f2 06 16 14 	lsr	r6,r9,0x14
80009db8:	ab d6       	cbr	r6,0xb
80009dba:	e0 46 07 ff 	cp.w	r6,2047
80009dbe:	e0 81 00 a4 	brne	80009f06 <__avr32_f64_div_res_subnormal+0xa0>
80009dc2:	c9 e8       	rjmp	80009efe <__avr32_f64_div_res_subnormal+0x98>
80009dc4:	e4 19 00 0f 	andh	r9,0xf
80009dc8:	10 49       	or	r9,r8
80009dca:	e0 81 00 9a 	brne	80009efe <__avr32_f64_div_res_subnormal+0x98>
80009dce:	c9 28       	rjmp	80009ef2 <__avr32_f64_div_res_subnormal+0x8c>
80009dd0:	a3 7b       	lsl	r11,0x3
80009dd2:	f7 ea 13 db 	or	r11,r11,r10>>0x1d
80009dd6:	a3 7a       	lsl	r10,0x3
80009dd8:	f5 eb 10 04 	or	r4,r10,r11
80009ddc:	e0 80 00 a0 	breq	80009f1c <__avr32_f64_div_op1_zero>
80009de0:	f6 04 12 00 	clz	r4,r11
80009de4:	c1 70       	breq	80009e12 <__avr32_f64_div_round_subnormal+0x96>
80009de6:	c0 c3       	brcs	80009dfe <__avr32_f64_div_round_subnormal+0x82>
80009de8:	e8 05 11 20 	rsub	r5,r4,32
80009dec:	f6 04 09 4b 	lsl	r11,r11,r4
80009df0:	f4 05 0a 45 	lsr	r5,r10,r5
80009df4:	0a 4b       	or	r11,r5
80009df6:	f4 04 09 4a 	lsl	r10,r10,r4
80009dfa:	08 17       	sub	r7,r4
80009dfc:	c0 b8       	rjmp	80009e12 <__avr32_f64_div_round_subnormal+0x96>
80009dfe:	f4 04 12 00 	clz	r4,r10
80009e02:	f9 b4 03 00 	movlo	r4,0
80009e06:	f7 b4 02 e0 	subhs	r4,-32
80009e0a:	f4 04 09 4b 	lsl	r11,r10,r4
80009e0e:	30 0a       	mov	r10,0
80009e10:	08 17       	sub	r7,r4
80009e12:	a3 8a       	lsr	r10,0x2
80009e14:	f5 eb 11 ea 	or	r10,r10,r11<<0x1e
80009e18:	a3 8b       	lsr	r11,0x2
80009e1a:	c1 1b       	rjmp	80009c3c <__avr32_f64_div+0x20>
80009e1c:	a3 79       	lsl	r9,0x3
80009e1e:	f3 e8 13 d9 	or	r9,r9,r8>>0x1d
80009e22:	a3 78       	lsl	r8,0x3
80009e24:	f3 e8 10 04 	or	r4,r9,r8
80009e28:	c6 f0       	breq	80009f06 <__avr32_f64_div_res_subnormal+0xa0>
80009e2a:	f2 04 12 00 	clz	r4,r9
80009e2e:	c1 70       	breq	80009e5c <__avr32_f64_div_round_subnormal+0xe0>
80009e30:	c0 c3       	brcs	80009e48 <__avr32_f64_div_round_subnormal+0xcc>
80009e32:	e8 05 11 20 	rsub	r5,r4,32
80009e36:	f2 04 09 49 	lsl	r9,r9,r4
80009e3a:	f0 05 0a 45 	lsr	r5,r8,r5
80009e3e:	0a 49       	or	r9,r5
80009e40:	f0 04 09 48 	lsl	r8,r8,r4
80009e44:	08 16       	sub	r6,r4
80009e46:	c0 b8       	rjmp	80009e5c <__avr32_f64_div_round_subnormal+0xe0>
80009e48:	f0 04 12 00 	clz	r4,r8
80009e4c:	f9 b4 03 00 	movlo	r4,0
80009e50:	f7 b4 02 e0 	subhs	r4,-32
80009e54:	f0 04 09 49 	lsl	r9,r8,r4
80009e58:	30 08       	mov	r8,0
80009e5a:	08 16       	sub	r6,r4
80009e5c:	a3 88       	lsr	r8,0x2
80009e5e:	f1 e9 11 e8 	or	r8,r8,r9<<0x1e
80009e62:	a3 89       	lsr	r9,0x2
80009e64:	cf ca       	rjmp	80009c5c <__avr32_f64_div+0x40>

80009e66 <__avr32_f64_div_res_subnormal>:
80009e66:	5c 37       	neg	r7
80009e68:	2f f7       	sub	r7,-1
80009e6a:	f1 b7 04 c0 	satu	r7,0x6
80009e6e:	e0 47 00 20 	cp.w	r7,32
80009e72:	c1 54       	brge	80009e9c <__avr32_f64_div_res_subnormal+0x36>
80009e74:	ee 06 11 20 	rsub	r6,r7,32
80009e78:	e4 07 0a 42 	lsr	r2,r2,r7
80009e7c:	e6 06 09 4c 	lsl	r12,r3,r6
80009e80:	18 42       	or	r2,r12
80009e82:	e6 07 0a 43 	lsr	r3,r3,r7
80009e86:	f4 06 09 41 	lsl	r1,r10,r6
80009e8a:	f4 07 0a 4a 	lsr	r10,r10,r7
80009e8e:	f6 06 09 4c 	lsl	r12,r11,r6
80009e92:	18 4a       	or	r10,r12
80009e94:	f6 07 0a 4b 	lsr	r11,r11,r7
80009e98:	30 00       	mov	r0,0
80009e9a:	c1 58       	rjmp	80009ec4 <__avr32_f64_div_res_subnormal+0x5e>
80009e9c:	ee 06 11 20 	rsub	r6,r7,32
80009ea0:	f9 b0 00 00 	moveq	r0,0
80009ea4:	f9 bc 00 00 	moveq	r12,0
80009ea8:	c0 50       	breq	80009eb2 <__avr32_f64_div_res_subnormal+0x4c>
80009eaa:	f4 06 09 40 	lsl	r0,r10,r6
80009eae:	f6 06 09 4c 	lsl	r12,r11,r6
80009eb2:	e6 07 0a 42 	lsr	r2,r3,r7
80009eb6:	30 03       	mov	r3,0
80009eb8:	f4 07 0a 41 	lsr	r1,r10,r7
80009ebc:	18 41       	or	r1,r12
80009ebe:	f6 07 0a 4a 	lsr	r10,r11,r7
80009ec2:	30 0b       	mov	r11,0
80009ec4:	e0 12 ff 00 	andl	r2,0xff00
80009ec8:	e8 12 00 80 	orl	r2,0x80
80009ecc:	e6 08 06 46 	mulu.d	r6,r3,r8
80009ed0:	e4 09 07 46 	macu.d	r6,r2,r9
80009ed4:	e4 08 06 44 	mulu.d	r4,r2,r8
80009ed8:	e6 09 06 48 	mulu.d	r8,r3,r9
80009edc:	0c 05       	add	r5,r6
80009ede:	f0 07 00 48 	adc	r8,r8,r7
80009ee2:	5c 09       	acr	r9
80009ee4:	30 07       	mov	r7,0
80009ee6:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80009eea:	00 34       	cp.w	r4,r0
80009eec:	e2 05 13 00 	cpc	r5,r1
80009ef0:	c4 6b       	rjmp	80009d7c <__avr32_f64_div_round_subnormal>
80009ef2:	1c 9b       	mov	r11,lr
80009ef4:	e6 1b 80 00 	andh	r11,0x8000,COH
80009ef8:	30 0a       	mov	r10,0
80009efa:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80009efe:	3f fb       	mov	r11,-1
80009f00:	30 0a       	mov	r10,0
80009f02:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80009f06:	f5 eb 10 04 	or	r4,r10,r11
80009f0a:	c0 90       	breq	80009f1c <__avr32_f64_div_op1_zero>
80009f0c:	1c 9b       	mov	r11,lr
80009f0e:	e6 1b 80 00 	andh	r11,0x8000,COH
80009f12:	ea 1b 7f f0 	orh	r11,0x7ff0
80009f16:	30 0a       	mov	r10,0
80009f18:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc

80009f1c <__avr32_f64_div_op1_zero>:
80009f1c:	f1 e9 10 15 	or	r5,r8,r9<<0x1
80009f20:	ce f0       	breq	80009efe <__avr32_f64_div_res_subnormal+0x98>
80009f22:	e9 d9 c2 8b 	bfextu	r4,r9,0x14,0xb
80009f26:	e0 44 07 ff 	cp.w	r4,2047
80009f2a:	ce 41       	brne	80009ef2 <__avr32_f64_div_res_subnormal+0x8c>
80009f2c:	f1 e9 10 c5 	or	r5,r8,r9<<0xc
80009f30:	ce 10       	breq	80009ef2 <__avr32_f64_div_res_subnormal+0x8c>
80009f32:	ce 6b       	rjmp	80009efe <__avr32_f64_div_res_subnormal+0x98>

80009f34 <__avr32_umod64>:
80009f34:	eb cd 40 ef 	pushm	r0-r3,r5-r7,lr
80009f38:	1a 97       	mov	r7,sp
80009f3a:	20 1d       	sub	sp,4
80009f3c:	10 95       	mov	r5,r8
80009f3e:	10 9c       	mov	r12,r8
80009f40:	14 92       	mov	r2,r10
80009f42:	12 9e       	mov	lr,r9
80009f44:	14 93       	mov	r3,r10
80009f46:	16 98       	mov	r8,r11
80009f48:	16 96       	mov	r6,r11
80009f4a:	58 09       	cp.w	r9,0
80009f4c:	c4 01       	brne	80009fcc <__avr32_umod64+0x98>
80009f4e:	16 35       	cp.w	r5,r11
80009f50:	e0 8b 00 8c 	brhi	8000a068 <__avr32_umod64+0x134>
80009f54:	58 05       	cp.w	r5,0
80009f56:	c0 51       	brne	80009f60 <__avr32_umod64+0x2c>
80009f58:	30 19       	mov	r9,1
80009f5a:	f2 05 0d 08 	divu	r8,r9,r5
80009f5e:	10 9c       	mov	r12,r8
80009f60:	f8 0e 12 00 	clz	lr,r12
80009f64:	c4 b1       	brne	80009ffa <__avr32_umod64+0xc6>
80009f66:	ec 0c 01 0b 	sub	r11,r6,r12
80009f6a:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
80009f6e:	f8 06 16 10 	lsr	r6,r12,0x10
80009f72:	e6 0a 16 10 	lsr	r10,r3,0x10
80009f76:	f6 06 0d 08 	divu	r8,r11,r6
80009f7a:	f5 e9 11 0b 	or	r11,r10,r9<<0x10
80009f7e:	ea 08 02 4a 	mul	r10,r5,r8
80009f82:	16 3a       	cp.w	r10,r11
80009f84:	e0 88 00 09 	brls	80009f96 <__avr32_umod64+0x62>
80009f88:	18 0b       	add	r11,r12
80009f8a:	16 3c       	cp.w	r12,r11
80009f8c:	e0 8b 00 05 	brhi	80009f96 <__avr32_umod64+0x62>
80009f90:	16 3a       	cp.w	r10,r11
80009f92:	f7 dc eb 0b 	addhi	r11,r11,r12
80009f96:	f6 0a 01 09 	sub	r9,r11,r10
80009f9a:	f5 d3 c0 10 	bfextu	r10,r3,0x0,0x10
80009f9e:	f2 06 0d 08 	divu	r8,r9,r6
80009fa2:	f5 e9 11 0b 	or	r11,r10,r9<<0x10
80009fa6:	ea 08 02 4a 	mul	r10,r5,r8
80009faa:	16 3a       	cp.w	r10,r11
80009fac:	e0 88 00 09 	brls	80009fbe <__avr32_umod64+0x8a>
80009fb0:	18 0b       	add	r11,r12
80009fb2:	16 3c       	cp.w	r12,r11
80009fb4:	e0 8b 00 05 	brhi	80009fbe <__avr32_umod64+0x8a>
80009fb8:	16 3a       	cp.w	r10,r11
80009fba:	f7 dc eb 0b 	addhi	r11,r11,r12
80009fbe:	14 1b       	sub	r11,r10
80009fc0:	f6 0e 0a 4a 	lsr	r10,r11,lr
80009fc4:	30 0b       	mov	r11,0
80009fc6:	2f fd       	sub	sp,-4
80009fc8:	e3 cd 80 ef 	ldm	sp++,r0-r3,r5-r7,pc
80009fcc:	16 39       	cp.w	r9,r11
80009fce:	fe 9b ff fc 	brhi	80009fc6 <__avr32_umod64+0x92>
80009fd2:	f2 01 12 00 	clz	r1,r9
80009fd6:	e0 81 00 81 	brne	8000a0d8 <__avr32_umod64+0x1a4>
80009fda:	16 39       	cp.w	r9,r11
80009fdc:	5f 38       	srlo	r8
80009fde:	14 35       	cp.w	r5,r10
80009fe0:	5f 89       	srls	r9
80009fe2:	12 48       	or	r8,r9
80009fe4:	e2 08 18 00 	cp.b	r8,r1
80009fe8:	c0 60       	breq	80009ff4 <__avr32_umod64+0xc0>
80009fea:	e4 05 01 0a 	sub	r10,r2,r5
80009fee:	f6 0e 01 46 	sbc	r6,r11,lr
80009ff2:	14 93       	mov	r3,r10
80009ff4:	0c 9b       	mov	r11,r6
80009ff6:	06 9a       	mov	r10,r3
80009ff8:	ce 7b       	rjmp	80009fc6 <__avr32_umod64+0x92>
80009ffa:	ec 0e 09 4b 	lsl	r11,r6,lr
80009ffe:	fc 09 11 20 	rsub	r9,lr,32
8000a002:	e4 09 0a 4a 	lsr	r10,r2,r9
8000a006:	f8 0e 09 4c 	lsl	r12,r12,lr
8000a00a:	f5 eb 10 03 	or	r3,r10,r11
8000a00e:	ec 09 0a 49 	lsr	r9,r6,r9
8000a012:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
8000a016:	f8 06 16 10 	lsr	r6,r12,0x10
8000a01a:	e6 0a 16 10 	lsr	r10,r3,0x10
8000a01e:	f2 06 0d 08 	divu	r8,r9,r6
8000a022:	f5 e9 11 0b 	or	r11,r10,r9<<0x10
8000a026:	ea 08 02 49 	mul	r9,r5,r8
8000a02a:	16 39       	cp.w	r9,r11
8000a02c:	e0 88 00 06 	brls	8000a038 <__avr32_umod64+0x104>
8000a030:	18 0b       	add	r11,r12
8000a032:	16 3c       	cp.w	r12,r11
8000a034:	e0 88 00 be 	brls	8000a1b0 <__avr32_umod64+0x27c>
8000a038:	f6 09 01 09 	sub	r9,r11,r9
8000a03c:	f5 d3 c0 10 	bfextu	r10,r3,0x0,0x10
8000a040:	f2 06 0d 08 	divu	r8,r9,r6
8000a044:	f5 e9 11 0b 	or	r11,r10,r9<<0x10
8000a048:	ea 08 02 49 	mul	r9,r5,r8
8000a04c:	16 39       	cp.w	r9,r11
8000a04e:	e0 88 00 09 	brls	8000a060 <__avr32_umod64+0x12c>
8000a052:	18 0b       	add	r11,r12
8000a054:	16 3c       	cp.w	r12,r11
8000a056:	e0 8b 00 05 	brhi	8000a060 <__avr32_umod64+0x12c>
8000a05a:	16 39       	cp.w	r9,r11
8000a05c:	f7 dc eb 0b 	addhi	r11,r11,r12
8000a060:	12 1b       	sub	r11,r9
8000a062:	e4 0e 09 43 	lsl	r3,r2,lr
8000a066:	c8 6b       	rjmp	80009f72 <__avr32_umod64+0x3e>
8000a068:	ea 0e 12 00 	clz	lr,r5
8000a06c:	c0 d0       	breq	8000a086 <__avr32_umod64+0x152>
8000a06e:	f6 0e 09 49 	lsl	r9,r11,lr
8000a072:	fc 08 11 20 	rsub	r8,lr,32
8000a076:	ea 0e 09 4c 	lsl	r12,r5,lr
8000a07a:	f4 08 0a 48 	lsr	r8,r10,r8
8000a07e:	f4 0e 09 43 	lsl	r3,r10,lr
8000a082:	f1 e9 10 06 	or	r6,r8,r9
8000a086:	f8 05 16 10 	lsr	r5,r12,0x10
8000a08a:	e6 08 16 10 	lsr	r8,r3,0x10
8000a08e:	ec 05 0d 0a 	divu	r10,r6,r5
8000a092:	ed dc c0 10 	bfextu	r6,r12,0x0,0x10
8000a096:	f1 eb 11 0b 	or	r11,r8,r11<<0x10
8000a09a:	ec 0a 02 49 	mul	r9,r6,r10
8000a09e:	16 39       	cp.w	r9,r11
8000a0a0:	e0 88 00 06 	brls	8000a0ac <__avr32_umod64+0x178>
8000a0a4:	18 0b       	add	r11,r12
8000a0a6:	16 3c       	cp.w	r12,r11
8000a0a8:	e0 88 00 88 	brls	8000a1b8 <__avr32_umod64+0x284>
8000a0ac:	f6 09 01 09 	sub	r9,r11,r9
8000a0b0:	f5 d3 c0 10 	bfextu	r10,r3,0x0,0x10
8000a0b4:	f2 05 0d 08 	divu	r8,r9,r5
8000a0b8:	f5 e9 11 0b 	or	r11,r10,r9<<0x10
8000a0bc:	ec 08 02 49 	mul	r9,r6,r8
8000a0c0:	16 39       	cp.w	r9,r11
8000a0c2:	e0 88 00 09 	brls	8000a0d4 <__avr32_umod64+0x1a0>
8000a0c6:	18 0b       	add	r11,r12
8000a0c8:	16 3c       	cp.w	r12,r11
8000a0ca:	e0 8b 00 05 	brhi	8000a0d4 <__avr32_umod64+0x1a0>
8000a0ce:	16 39       	cp.w	r9,r11
8000a0d0:	f7 dc eb 0b 	addhi	r11,r11,r12
8000a0d4:	12 1b       	sub	r11,r9
8000a0d6:	c7 5b       	rjmp	80009fc0 <__avr32_umod64+0x8c>
8000a0d8:	f2 01 09 4b 	lsl	r11,r9,r1
8000a0dc:	e2 03 11 20 	rsub	r3,r1,32
8000a0e0:	f4 01 09 49 	lsl	r9,r10,r1
8000a0e4:	ea 03 0a 4a 	lsr	r10,r5,r3
8000a0e8:	f0 01 09 4c 	lsl	r12,r8,r1
8000a0ec:	f5 eb 10 06 	or	r6,r10,r11
8000a0f0:	ef 49 ff fc 	st.w	r7[-4],r9
8000a0f4:	e4 03 0a 4a 	lsr	r10,r2,r3
8000a0f8:	ea 01 09 40 	lsl	r0,r5,r1
8000a0fc:	f5 ec 10 0b 	or	r11,r10,r12
8000a100:	f0 03 0a 49 	lsr	r9,r8,r3
8000a104:	ec 05 16 10 	lsr	r5,r6,0x10
8000a108:	e5 d6 c0 10 	bfextu	r2,r6,0x0,0x10
8000a10c:	f2 05 0d 08 	divu	r8,r9,r5
8000a110:	f6 0a 16 10 	lsr	r10,r11,0x10
8000a114:	10 9e       	mov	lr,r8
8000a116:	f5 e9 11 0c 	or	r12,r10,r9<<0x10
8000a11a:	a5 38       	mul	r8,r2
8000a11c:	18 38       	cp.w	r8,r12
8000a11e:	e0 88 00 0c 	brls	8000a136 <__avr32_umod64+0x202>
8000a122:	20 1e       	sub	lr,1
8000a124:	0c 0c       	add	r12,r6
8000a126:	18 36       	cp.w	r6,r12
8000a128:	e0 8b 00 07 	brhi	8000a136 <__avr32_umod64+0x202>
8000a12c:	18 38       	cp.w	r8,r12
8000a12e:	f7 be 0b 01 	subhi	lr,1
8000a132:	f9 d6 eb 0c 	addhi	r12,r12,r6
8000a136:	f8 08 01 09 	sub	r9,r12,r8
8000a13a:	f5 db c0 10 	bfextu	r10,r11,0x0,0x10
8000a13e:	f2 05 0d 08 	divu	r8,r9,r5
8000a142:	10 9c       	mov	r12,r8
8000a144:	f5 e9 11 0b 	or	r11,r10,r9<<0x10
8000a148:	a5 38       	mul	r8,r2
8000a14a:	16 38       	cp.w	r8,r11
8000a14c:	e0 88 00 0c 	brls	8000a164 <__avr32_umod64+0x230>
8000a150:	20 1c       	sub	r12,1
8000a152:	0c 0b       	add	r11,r6
8000a154:	16 36       	cp.w	r6,r11
8000a156:	e0 8b 00 07 	brhi	8000a164 <__avr32_umod64+0x230>
8000a15a:	16 38       	cp.w	r8,r11
8000a15c:	f7 bc 0b 01 	subhi	r12,1
8000a160:	f7 d6 eb 0b 	addhi	r11,r11,r6
8000a164:	f9 ee 11 09 	or	r9,r12,lr<<0x10
8000a168:	10 1b       	sub	r11,r8
8000a16a:	f2 00 06 48 	mulu.d	r8,r9,r0
8000a16e:	10 9e       	mov	lr,r8
8000a170:	12 9c       	mov	r12,r9
8000a172:	18 3b       	cp.w	r11,r12
8000a174:	c1 52       	brcc	8000a19e <__avr32_umod64+0x26a>
8000a176:	fc 00 01 09 	sub	r9,lr,r0
8000a17a:	f8 06 01 4c 	sbc	r12,r12,r6
8000a17e:	12 9e       	mov	lr,r9
8000a180:	ee fa ff fc 	ld.w	r10,r7[-4]
8000a184:	f4 0e 01 09 	sub	r9,r10,lr
8000a188:	f6 0c 01 48 	sbc	r8,r11,r12
8000a18c:	f0 01 0a 4b 	lsr	r11,r8,r1
8000a190:	f2 01 0a 49 	lsr	r9,r9,r1
8000a194:	f0 03 09 48 	lsl	r8,r8,r3
8000a198:	f3 e8 10 0a 	or	r10,r9,r8
8000a19c:	c1 5b       	rjmp	80009fc6 <__avr32_umod64+0x92>
8000a19e:	18 3b       	cp.w	r11,r12
8000a1a0:	5f 08       	sreq	r8
8000a1a2:	ee fa ff fc 	ld.w	r10,r7[-4]
8000a1a6:	1c 3a       	cp.w	r10,lr
8000a1a8:	5f 39       	srlo	r9
8000a1aa:	12 68       	and	r8,r9
8000a1ac:	ce a0       	breq	8000a180 <__avr32_umod64+0x24c>
8000a1ae:	ce 4b       	rjmp	8000a176 <__avr32_umod64+0x242>
8000a1b0:	16 39       	cp.w	r9,r11
8000a1b2:	f7 dc eb 0b 	addhi	r11,r11,r12
8000a1b6:	c4 1b       	rjmp	8000a038 <__avr32_umod64+0x104>
8000a1b8:	16 39       	cp.w	r9,r11
8000a1ba:	f7 dc eb 0b 	addhi	r11,r11,r12
8000a1be:	c7 7b       	rjmp	8000a0ac <__avr32_umod64+0x178>

8000a1c0 <__do_global_ctors_aux>:
8000a1c0:	eb cd 40 80 	pushm	r7,lr
8000a1c4:	48 79       	lddpc	r9,8000a1e0 <__do_global_ctors_aux+0x20>
8000a1c6:	f2 f8 ff fc 	ld.w	r8,r9[-4]
8000a1ca:	5b f8       	cp.w	r8,-1
8000a1cc:	c0 70       	breq	8000a1da <__do_global_ctors_aux+0x1a>
8000a1ce:	f2 c7 00 04 	sub	r7,r9,4
8000a1d2:	5d 18       	icall	r8
8000a1d4:	0f 48       	ld.w	r8,--r7
8000a1d6:	5b f8       	cp.w	r8,-1
8000a1d8:	cf d1       	brne	8000a1d2 <__do_global_ctors_aux+0x12>
8000a1da:	e3 cd 80 80 	ldm	sp++,r7,pc
8000a1de:	d7 03       	nop
8000a1e0:	00 00       	add	r0,r0
8000a1e2:	00 0c       	add	r12,r0

Disassembly of section .exception:

8000a200 <_evba>:
8000a200:	c0 08       	rjmp	8000a200 <_evba>
	...

8000a204 <_handle_TLB_Multiple_Hit>:
8000a204:	c0 08       	rjmp	8000a204 <_handle_TLB_Multiple_Hit>
	...

8000a208 <_handle_Bus_Error_Data_Fetch>:
8000a208:	c0 08       	rjmp	8000a208 <_handle_Bus_Error_Data_Fetch>
	...

8000a20c <_handle_Bus_Error_Instruction_Fetch>:
8000a20c:	c0 08       	rjmp	8000a20c <_handle_Bus_Error_Instruction_Fetch>
	...

8000a210 <_handle_NMI>:
8000a210:	c0 08       	rjmp	8000a210 <_handle_NMI>
	...

8000a214 <_handle_Instruction_Address>:
8000a214:	c0 08       	rjmp	8000a214 <_handle_Instruction_Address>
	...

8000a218 <_handle_ITLB_Protection>:
8000a218:	c0 08       	rjmp	8000a218 <_handle_ITLB_Protection>
	...

8000a21c <_handle_Breakpoint>:
8000a21c:	c0 08       	rjmp	8000a21c <_handle_Breakpoint>
	...

8000a220 <_handle_Illegal_Opcode>:
8000a220:	c0 08       	rjmp	8000a220 <_handle_Illegal_Opcode>
	...

8000a224 <_handle_Unimplemented_Instruction>:
8000a224:	c0 08       	rjmp	8000a224 <_handle_Unimplemented_Instruction>
	...

8000a228 <_handle_Privilege_Violation>:
8000a228:	c0 08       	rjmp	8000a228 <_handle_Privilege_Violation>
	...

8000a22c <_handle_Floating_Point>:
8000a22c:	c0 08       	rjmp	8000a22c <_handle_Floating_Point>
	...

8000a230 <_handle_Coprocessor_Absent>:
8000a230:	c0 08       	rjmp	8000a230 <_handle_Coprocessor_Absent>
	...

8000a234 <_handle_Data_Address_Read>:
8000a234:	c0 08       	rjmp	8000a234 <_handle_Data_Address_Read>
	...

8000a238 <_handle_Data_Address_Write>:
8000a238:	c0 08       	rjmp	8000a238 <_handle_Data_Address_Write>
	...

8000a23c <_handle_DTLB_Protection_Read>:
8000a23c:	c0 08       	rjmp	8000a23c <_handle_DTLB_Protection_Read>
	...

8000a240 <_handle_DTLB_Protection_Write>:
8000a240:	c0 08       	rjmp	8000a240 <_handle_DTLB_Protection_Write>
	...

8000a244 <_handle_DTLB_Modified>:
8000a244:	c0 08       	rjmp	8000a244 <_handle_DTLB_Modified>
	...

8000a250 <_handle_ITLB_Miss>:
8000a250:	c0 08       	rjmp	8000a250 <_handle_ITLB_Miss>
	...

8000a260 <_handle_DTLB_Miss_Read>:
8000a260:	c0 08       	rjmp	8000a260 <_handle_DTLB_Miss_Read>
	...

8000a270 <_handle_DTLB_Miss_Write>:
8000a270:	c0 08       	rjmp	8000a270 <_handle_DTLB_Miss_Write>
	...

8000a300 <_handle_Supervisor_Call>:
8000a300:	c0 08       	rjmp	8000a300 <_handle_Supervisor_Call>
8000a302:	d7 03       	nop

8000a304 <_int0>:
8000a304:	30 0c       	mov	r12,0
8000a306:	fe b0 cc 11 	rcall	80003b28 <_get_interrupt_handler>
8000a30a:	58 0c       	cp.w	r12,0
8000a30c:	f8 0f 17 10 	movne	pc,r12
8000a310:	d6 03       	rete

8000a312 <_int1>:
8000a312:	30 1c       	mov	r12,1
8000a314:	fe b0 cc 0a 	rcall	80003b28 <_get_interrupt_handler>
8000a318:	58 0c       	cp.w	r12,0
8000a31a:	f8 0f 17 10 	movne	pc,r12
8000a31e:	d6 03       	rete

8000a320 <_int2>:
8000a320:	30 2c       	mov	r12,2
8000a322:	fe b0 cc 03 	rcall	80003b28 <_get_interrupt_handler>
8000a326:	58 0c       	cp.w	r12,0
8000a328:	f8 0f 17 10 	movne	pc,r12
8000a32c:	d6 03       	rete

8000a32e <_int3>:
8000a32e:	30 3c       	mov	r12,3
8000a330:	fe b0 cb fc 	rcall	80003b28 <_get_interrupt_handler>
8000a334:	58 0c       	cp.w	r12,0
8000a336:	f8 0f 17 10 	movne	pc,r12
8000a33a:	d6 03       	rete

8000a33c <ipr_val>:
8000a33c:	00 00 01 04 40 00 01 12 80 00 01 20 c0 00 01 2e     ....@...... ....
8000a34c:	d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03     ................
8000a35c:	d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03     ................
8000a36c:	d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03     ................
8000a37c:	d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03     ................
8000a38c:	d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03     ................
8000a39c:	d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03     ................
8000a3ac:	d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03     ................
8000a3bc:	d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03     ................
8000a3cc:	d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03     ................
8000a3dc:	d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03     ................
8000a3ec:	d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03 d7 03     ................
8000a3fc:	d7 03 d7 03                                         ....

Disassembly of section .fini:

8000a400 <_fini>:
8000a400:	eb cd 40 40 	pushm	r6,lr
8000a404:	48 26       	lddpc	r6,8000a40c <_fini+0xc>
8000a406:	1e 26       	rsub	r6,pc
8000a408:	c0 48       	rjmp	8000a410 <_fini+0x10>
8000a40a:	d7 03       	nop
8000a40c:	80 00       	ld.sh	r0,r0[0x0]
8000a40e:	a3 ea       	*unknown*
8000a410:	fe b0 be 3e 	rcall	8000208c <__do_global_dtors_aux>
8000a414:	e3 cd 80 40 	ldm	sp++,r6,pc
